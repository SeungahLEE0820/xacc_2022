#pragma GCC diagnostic ignored "-Wdeprecated-declarations" 
#include "xsim.dir/emu_wrapper_behav/obj/sysc_interface.h"
#include <map>
#include <list>


extern "C" { std::vector<void*> *_glb_hdl_sc_channel_map; } 



extern "C"
    void call_HDL_SC_WRITE_bv_1(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<1, sc_dt::sc_bv<1> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_2(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<2, sc_dt::sc_bv<2> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_3(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<3, sc_dt::sc_bv<3> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_4(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<4, sc_dt::sc_bv<4> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_5(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<5, sc_dt::sc_bv<5> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_6(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<6, sc_dt::sc_bv<6> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_8(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<8, sc_dt::sc_bv<8> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_32(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<32, sc_dt::sc_bv<32> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_34(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<34, sc_dt::sc_bv<34> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_35(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<35, sc_dt::sc_bv<35> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_64(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<64, sc_dt::sc_bv<64> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_bv_512(unsigned int sc_net_index, char* pval)
    {
          ((xsim_sc_channel<512, sc_dt::sc_bv<512> >*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(pval);
    } 


extern "C"
    void call_HDL_SC_WRITE_int(unsigned int sc_net_index, char* pval)
    {
          int val = *((int*)(pval));
          ((xsim_sc_channel<0, int>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bit(unsigned int sc_net_index, char* pval)
    {
            sc_dt::sc_bit val  =  (sc_dt::sc_bit)((*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_bit>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_logic(unsigned int sc_net_index, char* pval)
    {
          sc_dt::sc_logic val  =  (sc_dt::sc_logic_value_t) (((*((int*)(pval)+1) & 0x1) << 1) | (*((int*)(pval)) & 0x1));
          ((xsim_sc_channel<0, sc_dt::sc_logic>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void call_HDL_SC_WRITE_bool(unsigned int sc_net_index, char* pval)
    {
          bool val = *((bool*)(pval));
          ((xsim_sc_channel<0, bool>*)(*_glb_hdl_sc_channel_map)[sc_net_index])->update_from_hdl(val);
    } 



extern "C"
    void implicit_HDL_SCinstantiate()
    {
        _glb_hdl_sc_channel_map = new std::vector<void*> ();
        sc_inst_1 = new pfm_dynamic_dpa_hub_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_hub");
        sc_inst_1->xsim_set_dbg_index(532);
        xsim_sc_channel<0, bool > *p_1_s_aximm_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_clk.bind(*p_1_s_aximm_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_clk);
        xsim_sc_channel<0, bool > *p_1_s_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_aresetn.bind(*p_1_s_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_clk.bind(*p_1_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_clk);
        xsim_sc_channel<0, bool > *p_1_trace_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_aresetn.bind(*p_1_trace_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_aresetn);
        xsim_sc_channel<0, bool > *p_1_axilite_clk = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_clk.bind(*p_1_axilite_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_clk);
        xsim_sc_channel<0, bool > *p_1_axilite_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_1->axilite_aresetn.bind(*p_1_axilite_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_1_axilite_aresetn);
        xsim_sc_channel<0, bool > *p_1_trace_tready0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready0.bind(*p_1_trace_tready0);
        p_1_trace_tready0->set_sv_netview_offsetfromdp(11355656);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata0 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata0.bind(*p_1_trace_tdata0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata0);
        xsim_sc_channel<0, bool > *p_1_trace_tlast0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast0.bind(*p_1_trace_tlast0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid0.bind(*p_1_trace_tid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid0);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest0 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest0.bind(*p_1_trace_tdest0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest0);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid0 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid0.bind(*p_1_trace_tvalid0);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid0);
        xsim_sc_channel<0, bool > *p_1_trace_tready1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready1.bind(*p_1_trace_tready1);
        p_1_trace_tready1->set_sv_netview_offsetfromdp(11355992);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata1 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata1.bind(*p_1_trace_tdata1);
        p_1_trace_tdata1->set_sv_netview_offsetfromdp(11356048);
        xsim_sc_channel<0, bool > *p_1_trace_tlast1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast1.bind(*p_1_trace_tlast1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid1.bind(*p_1_trace_tid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid1);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest1 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest1.bind(*p_1_trace_tdest1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest1);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid1 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid1.bind(*p_1_trace_tvalid1);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid1);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_trace_tdata2 = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->trace_tdata2.bind(*p_1_trace_tdata2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdata2);
        xsim_sc_channel<0, bool > *p_1_trace_tready2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tready2.bind(*p_1_trace_tready2);
        p_1_trace_tready2->set_sv_netview_offsetfromdp(11356384);
        xsim_sc_channel<0, bool > *p_1_trace_tlast2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tlast2.bind(*p_1_trace_tlast2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tlast2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tid2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tid2.bind(*p_1_trace_tid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_trace_tdest2 = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->trace_tdest2.bind(*p_1_trace_tdest2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tdest2);
        xsim_sc_channel<0, bool > *p_1_trace_tvalid2 = new xsim_sc_channel<0, bool >();
        sc_inst_1->trace_tvalid2.bind(*p_1_trace_tvalid2);
        (*_glb_hdl_sc_channel_map).push_back(p_1_trace_tvalid2);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_awaddr.bind(*p_1_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awvalid.bind(*p_1_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_awready.bind(*p_1_s_axi_awready);
        p_1_s_axi_awready->set_sv_netview_offsetfromdp(11356776);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_wdata.bind(*p_1_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axi_wstrb.bind(*p_1_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wvalid.bind(*p_1_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_wready.bind(*p_1_s_axi_wready);
        p_1_s_axi_wready->set_sv_netview_offsetfromdp(11357000);
        xsim_sc_channel<0, bool > *p_1_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bvalid.bind(*p_1_s_axi_bvalid);
        p_1_s_axi_bvalid->set_sv_netview_offsetfromdp(11357056);
        xsim_sc_channel<0, bool > *p_1_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_bready.bind(*p_1_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_bresp.bind(*p_1_s_axi_bresp);
        p_1_s_axi_bresp->set_sv_netview_offsetfromdp(11357168);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axi_araddr.bind(*p_1_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arvalid.bind(*p_1_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_arready.bind(*p_1_s_axi_arready);
        p_1_s_axi_arready->set_sv_netview_offsetfromdp(11357336);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axi_rdata.bind(*p_1_s_axi_rdata);
        p_1_s_axi_rdata->set_sv_netview_offsetfromdp(11357392);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axi_rresp.bind(*p_1_s_axi_rresp);
        p_1_s_axi_rresp->set_sv_netview_offsetfromdp(11357448);
        xsim_sc_channel<0, bool > *p_1_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rvalid.bind(*p_1_s_axi_rvalid);
        p_1_s_axi_rvalid->set_sv_netview_offsetfromdp(11357504);
        xsim_sc_channel<0, bool > *p_1_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axi_rready.bind(*p_1_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axi_rready);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_awaddr.bind(*p_1_s_axihub_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awvalid.bind(*p_1_s_axihub_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_awready.bind(*p_1_s_axihub_awready);
        p_1_s_axihub_awready->set_sv_netview_offsetfromdp(11357728);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_wdata.bind(*p_1_s_axihub_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_1_s_axihub_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_1->s_axihub_wstrb.bind(*p_1_s_axihub_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wvalid.bind(*p_1_s_axihub_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_wready.bind(*p_1_s_axihub_wready);
        p_1_s_axihub_wready->set_sv_netview_offsetfromdp(11357952);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bvalid.bind(*p_1_s_axihub_bvalid);
        p_1_s_axihub_bvalid->set_sv_netview_offsetfromdp(11358008);
        xsim_sc_channel<0, bool > *p_1_s_axihub_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_bready.bind(*p_1_s_axihub_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_bresp.bind(*p_1_s_axihub_bresp);
        p_1_s_axihub_bresp->set_sv_netview_offsetfromdp(11358120);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_axihub_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_axihub_araddr.bind(*p_1_s_axihub_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_araddr);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arvalid.bind(*p_1_s_axihub_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_axihub_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_arready.bind(*p_1_s_axihub_arready);
        p_1_s_axihub_arready->set_sv_netview_offsetfromdp(11358288);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_axihub_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_axihub_rdata.bind(*p_1_s_axihub_rdata);
        p_1_s_axihub_rdata->set_sv_netview_offsetfromdp(11358344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_axihub_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_axihub_rresp.bind(*p_1_s_axihub_rresp);
        p_1_s_axihub_rresp->set_sv_netview_offsetfromdp(11358400);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rvalid.bind(*p_1_s_axihub_rvalid);
        p_1_s_axihub_rvalid->set_sv_netview_offsetfromdp(11358456);
        xsim_sc_channel<0, bool > *p_1_s_axihub_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_axihub_rready.bind(*p_1_s_axihub_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_axihub_rready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_awaddr.bind(*p_1_s_aximm_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awaddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awvalid.bind(*p_1_s_aximm_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_awready.bind(*p_1_s_aximm_awready);
        p_1_s_aximm_awready->set_sv_netview_offsetfromdp(11358680);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_awlen.bind(*p_1_s_aximm_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_awsize.bind(*p_1_s_aximm_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_awburst.bind(*p_1_s_aximm_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_awid.bind(*p_1_s_aximm_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_wdata.bind(*p_1_s_aximm_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wdata);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_wstrb.bind(*p_1_s_aximm_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wstrb);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wvalid.bind(*p_1_s_aximm_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wready.bind(*p_1_s_aximm_wready);
        p_1_s_aximm_wready->set_sv_netview_offsetfromdp(11359128);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bvalid.bind(*p_1_s_aximm_bvalid);
        p_1_s_aximm_bvalid->set_sv_netview_offsetfromdp(11359184);
        xsim_sc_channel<0, bool > *p_1_s_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_bready.bind(*p_1_s_aximm_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_bready);
        xsim_sc_channel<0, bool > *p_1_s_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_wlast.bind(*p_1_s_aximm_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_wlast);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rlast.bind(*p_1_s_aximm_rlast);
        p_1_s_aximm_rlast->set_sv_netview_offsetfromdp(11359352);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_bresp.bind(*p_1_s_aximm_bresp);
        p_1_s_aximm_bresp->set_sv_netview_offsetfromdp(11359408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_bid.bind(*p_1_s_aximm_bid);
        p_1_s_aximm_bid->set_sv_netview_offsetfromdp(11359464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_1_s_aximm_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_1->s_aximm_araddr.bind(*p_1_s_aximm_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_araddr);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arvalid.bind(*p_1_s_aximm_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arvalid);
        xsim_sc_channel<0, bool > *p_1_s_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_arready.bind(*p_1_s_aximm_arready);
        p_1_s_aximm_arready->set_sv_netview_offsetfromdp(11359632);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_1_s_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_1->s_aximm_arlen.bind(*p_1_s_aximm_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_1_s_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_1->s_aximm_arsize.bind(*p_1_s_aximm_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_arburst.bind(*p_1_s_aximm_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arburst);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_arid.bind(*p_1_s_aximm_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_1_s_aximm_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_1->s_aximm_rdata.bind(*p_1_s_aximm_rdata);
        p_1_s_aximm_rdata->set_sv_netview_offsetfromdp(11359912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_1_s_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_1->s_aximm_rid.bind(*p_1_s_aximm_rid);
        p_1_s_aximm_rid->set_sv_netview_offsetfromdp(11359968);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_1_s_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_1->s_aximm_rresp.bind(*p_1_s_aximm_rresp);
        p_1_s_aximm_rresp->set_sv_netview_offsetfromdp(11360024);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rvalid.bind(*p_1_s_aximm_rvalid);
        p_1_s_aximm_rvalid->set_sv_netview_offsetfromdp(11360080);
        xsim_sc_channel<0, bool > *p_1_s_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_1->s_aximm_rready.bind(*p_1_s_aximm_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_1_s_aximm_rready);
        sc_inst_2 = new pfm_dynamic_dpa_mon0_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon0");
        sc_inst_2->xsim_set_dbg_index(533);
        xsim_sc_channel<0, bool > *p_2_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_clk.bind(*p_2_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_clk);
        xsim_sc_channel<0, bool > *p_2_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_resetn.bind(*p_2_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_resetn);
        xsim_sc_channel<0, bool > *p_2_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_clk.bind(*p_2_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_clk);
        xsim_sc_channel<0, bool > *p_2_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_2->trace_rst.bind(*p_2_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_2_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_awaddr.bind(*p_2_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_awprot.bind(*p_2_s_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awvalid.bind(*p_2_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_awready.bind(*p_2_s_axi_awready);
        p_2_s_axi_awready->set_sv_netview_offsetfromdp(11360632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_wdata.bind(*p_2_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->s_axi_wstrb.bind(*p_2_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_2_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wvalid.bind(*p_2_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_wready.bind(*p_2_s_axi_wready);
        p_2_s_axi_wready->set_sv_netview_offsetfromdp(11360856);
        xsim_sc_channel<0, bool > *p_2_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bvalid.bind(*p_2_s_axi_bvalid);
        p_2_s_axi_bvalid->set_sv_netview_offsetfromdp(11360912);
        xsim_sc_channel<0, bool > *p_2_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_bready.bind(*p_2_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_bresp.bind(*p_2_s_axi_bresp);
        p_2_s_axi_bresp->set_sv_netview_offsetfromdp(11361024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->s_axi_araddr.bind(*p_2_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_2_s_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_2->s_axi_arprot.bind(*p_2_s_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arprot);
        xsim_sc_channel<0, bool > *p_2_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arvalid.bind(*p_2_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_2_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_arready.bind(*p_2_s_axi_arready);
        p_2_s_axi_arready->set_sv_netview_offsetfromdp(11361248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->s_axi_rdata.bind(*p_2_s_axi_rdata);
        p_2_s_axi_rdata->set_sv_netview_offsetfromdp(11361304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->s_axi_rresp.bind(*p_2_s_axi_rresp);
        p_2_s_axi_rresp->set_sv_netview_offsetfromdp(11361360);
        xsim_sc_channel<0, bool > *p_2_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rvalid.bind(*p_2_s_axi_rvalid);
        p_2_s_axi_rvalid->set_sv_netview_offsetfromdp(11361416);
        xsim_sc_channel<0, bool > *p_2_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_2->s_axi_rready.bind(*p_2_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_s_axi_rready);
        xsim_sc_channel<0, bool > *p_2_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWVALID.bind(*p_2_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_2_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_AWREADY.bind(*p_2_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_AWADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_AWADDR.bind(*p_2_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_AWADDR);
        xsim_sc_channel<0, bool > *p_2_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WVALID.bind(*p_2_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WVALID);
        xsim_sc_channel<0, bool > *p_2_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_WREADY.bind(*p_2_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_WDATA.bind(*p_2_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_2_mon_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_2->mon_WSTRB.bind(*p_2_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_2_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARVALID.bind(*p_2_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_2_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_ARREADY.bind(*p_2_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_ARADDR = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_ARADDR.bind(*p_2_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_ARADDR);
        xsim_sc_channel<0, bool > *p_2_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RVALID.bind(*p_2_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RVALID);
        xsim_sc_channel<0, bool > *p_2_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_RREADY.bind(*p_2_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RREADY);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_2_mon_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_2->mon_RDATA.bind(*p_2_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_RRESP.bind(*p_2_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_RRESP);
        xsim_sc_channel<0, bool > *p_2_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BVALID.bind(*p_2_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BVALID);
        xsim_sc_channel<0, bool > *p_2_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_2->mon_BREADY.bind(*p_2_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_2_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_2->mon_BRESP.bind(*p_2_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_2_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_2_m_axis_tready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_2->m_axis_tready.bind(*p_2_m_axis_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_2_m_axis_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_2_m_axis_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_2->m_axis_tdata.bind(*p_2_m_axis_tdata);
        p_2_m_axis_tdata->set_sv_netview_offsetfromdp(11362536);
        xsim_sc_channel<0, bool > *p_2_m_axis_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tlast.bind(*p_2_m_axis_tlast);
        p_2_m_axis_tlast->set_sv_netview_offsetfromdp(11362592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tid.bind(*p_2_m_axis_tid);
        p_2_m_axis_tid->set_sv_netview_offsetfromdp(11362648);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_2_m_axis_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_2->m_axis_tdest.bind(*p_2_m_axis_tdest);
        p_2_m_axis_tdest->set_sv_netview_offsetfromdp(11362704);
        xsim_sc_channel<0, bool > *p_2_m_axis_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_2->m_axis_tvalid.bind(*p_2_m_axis_tvalid);
        p_2_m_axis_tvalid->set_sv_netview_offsetfromdp(11362760);
        sc_inst_3 = new pfm_dynamic_dpa_mon1_0(".emu_wrapper.emu_i.dynamic_region.System_DPA.dpa_mon1");
        sc_inst_3->xsim_set_dbg_index(534);
        xsim_sc_channel<0, bool > *p_3_mon_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_clk.bind(*p_3_mon_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_clk);
        xsim_sc_channel<0, bool > *p_3_mon_resetn = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_resetn.bind(*p_3_mon_resetn);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_resetn);
        xsim_sc_channel<0, bool > *p_3_trace_clk = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_clk.bind(*p_3_trace_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_clk);
        xsim_sc_channel<0, bool > *p_3_trace_rst = new xsim_sc_channel<0, bool >();
        sc_inst_3->trace_rst.bind(*p_3_trace_rst);
        (*_glb_hdl_sc_channel_map).push_back(p_3_trace_rst);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr.bind(*p_3_s_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid.bind(*p_3_s_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready.bind(*p_3_s_axi_awready);
        p_3_s_axi_awready->set_sv_netview_offsetfromdp(11363200);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata.bind(*p_3_s_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb.bind(*p_3_s_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid.bind(*p_3_s_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready.bind(*p_3_s_axi_wready);
        p_3_s_axi_wready->set_sv_netview_offsetfromdp(11363424);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid.bind(*p_3_s_axi_bvalid);
        p_3_s_axi_bvalid->set_sv_netview_offsetfromdp(11363480);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready.bind(*p_3_s_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp.bind(*p_3_s_axi_bresp);
        p_3_s_axi_bresp->set_sv_netview_offsetfromdp(11363592);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr.bind(*p_3_s_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid.bind(*p_3_s_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready.bind(*p_3_s_axi_arready);
        p_3_s_axi_arready->set_sv_netview_offsetfromdp(11363760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata.bind(*p_3_s_axi_rdata);
        p_3_s_axi_rdata->set_sv_netview_offsetfromdp(11363816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp.bind(*p_3_s_axi_rresp);
        p_3_s_axi_rresp->set_sv_netview_offsetfromdp(11363872);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid.bind(*p_3_s_axi_rvalid);
        p_3_s_axi_rvalid->set_sv_netview_offsetfromdp(11363928);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready.bind(*p_3_s_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready);
        xsim_sc_channel<0, bool > *p_3_mon_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWVALID.bind(*p_3_mon_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWVALID);
        xsim_sc_channel<0, bool > *p_3_mon_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_AWREADY.bind(*p_3_mon_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_AWADDR.bind(*p_3_mon_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_AWID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_AWID.bind(*p_3_mon_AWID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_AWLEN.bind(*p_3_mon_AWLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_AWSIZE.bind(*p_3_mon_AWSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_AWBURST.bind(*p_3_mon_AWBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_AWBURST);
        xsim_sc_channel<0, bool > *p_3_mon_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WVALID.bind(*p_3_mon_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WVALID);
        xsim_sc_channel<0, bool > *p_3_mon_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WREADY.bind(*p_3_mon_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_WDATA.bind(*p_3_mon_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WDATA);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_WSTRB.bind(*p_3_mon_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WSTRB);
        xsim_sc_channel<0, bool > *p_3_mon_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_WLAST.bind(*p_3_mon_WLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_WLAST);
        xsim_sc_channel<0, bool > *p_3_mon_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARVALID.bind(*p_3_mon_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARVALID);
        xsim_sc_channel<0, bool > *p_3_mon_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_ARREADY.bind(*p_3_mon_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARREADY);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_mon_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->mon_ARADDR.bind(*p_3_mon_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARADDR);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_ARID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_ARID.bind(*p_3_mon_ARID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARID);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_mon_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->mon_ARLEN.bind(*p_3_mon_ARLEN);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARLEN);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_mon_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->mon_ARSIZE.bind(*p_3_mon_ARSIZE);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARSIZE);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_ARBURST.bind(*p_3_mon_ARBURST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_ARBURST);
        xsim_sc_channel<0, bool > *p_3_mon_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RVALID.bind(*p_3_mon_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RVALID);
        xsim_sc_channel<0, bool > *p_3_mon_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RREADY.bind(*p_3_mon_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_3_mon_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_3->mon_RDATA.bind(*p_3_mon_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RDATA);
        xsim_sc_channel<0, bool > *p_3_mon_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_RLAST.bind(*p_3_mon_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RLAST);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_RID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_RID.bind(*p_3_mon_RID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RID);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_RRESP.bind(*p_3_mon_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_RRESP);
        xsim_sc_channel<0, bool > *p_3_mon_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BVALID.bind(*p_3_mon_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BVALID);
        xsim_sc_channel<0, bool > *p_3_mon_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_3->mon_BREADY.bind(*p_3_mon_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_mon_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->mon_BRESP.bind(*p_3_mon_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BRESP);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_3_mon_BID = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_3->mon_BID.bind(*p_3_mon_BID);
        (*_glb_hdl_sc_channel_map).push_back(p_3_mon_BID);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tready.bind(*p_3_m_axis_rd_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_rd_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_rd_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_rd_tdata.bind(*p_3_m_axis_rd_tdata);
        p_3_m_axis_rd_tdata->set_sv_netview_offsetfromdp(11365720);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tlast.bind(*p_3_m_axis_rd_tlast);
        p_3_m_axis_rd_tlast->set_sv_netview_offsetfromdp(11365776);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tid.bind(*p_3_m_axis_rd_tid);
        p_3_m_axis_rd_tid->set_sv_netview_offsetfromdp(11365832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_rd_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_rd_tdest.bind(*p_3_m_axis_rd_tdest);
        p_3_m_axis_rd_tdest->set_sv_netview_offsetfromdp(11365888);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tready = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tready.bind(*p_3_m_axis_wr_tready);
        (*_glb_hdl_sc_channel_map).push_back(p_3_m_axis_wr_tready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_3_m_axis_wr_tdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_3->m_axis_wr_tdata.bind(*p_3_m_axis_wr_tdata);
        p_3_m_axis_wr_tdata->set_sv_netview_offsetfromdp(11366000);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tlast = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tlast.bind(*p_3_m_axis_wr_tlast);
        p_3_m_axis_wr_tlast->set_sv_netview_offsetfromdp(11366056);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tid = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tid.bind(*p_3_m_axis_wr_tid);
        p_3_m_axis_wr_tid->set_sv_netview_offsetfromdp(11366112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_m_axis_wr_tdest = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->m_axis_wr_tdest.bind(*p_3_m_axis_wr_tdest);
        p_3_m_axis_wr_tdest->set_sv_netview_offsetfromdp(11366168);
        xsim_sc_channel<0, bool > *p_3_m_axis_wr_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_wr_tvalid.bind(*p_3_m_axis_wr_tvalid);
        p_3_m_axis_wr_tvalid->set_sv_netview_offsetfromdp(11366224);
        xsim_sc_channel<0, bool > *p_3_m_axis_rd_tvalid = new xsim_sc_channel<0, bool >();
        sc_inst_3->m_axis_rd_tvalid.bind(*p_3_m_axis_rd_tvalid);
        p_3_m_axis_rd_tvalid->set_sv_netview_offsetfromdp(11366280);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_awaddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_awaddr_mon.bind(*p_3_s_axi_awaddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awaddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_awprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_awprot_mon.bind(*p_3_s_axi_awprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awvalid_mon.bind(*p_3_s_axi_awvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_awready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_awready_mon.bind(*p_3_s_axi_awready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_awready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_wdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_wdata_mon.bind(*p_3_s_axi_wdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wdata_mon);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_3_s_axi_wstrb_mon = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_3->s_axi_wstrb_mon.bind(*p_3_s_axi_wstrb_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wstrb_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wvalid_mon.bind(*p_3_s_axi_wvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_wready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_wready_mon.bind(*p_3_s_axi_wready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_wready_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_bresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_bresp_mon.bind(*p_3_s_axi_bresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bvalid_mon.bind(*p_3_s_axi_bvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_bready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_bready_mon.bind(*p_3_s_axi_bready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_bready_mon);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_3_s_axi_araddr_mon = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_3->s_axi_araddr_mon.bind(*p_3_s_axi_araddr_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_araddr_mon);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_3_s_axi_arprot_mon = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_3->s_axi_arprot_mon.bind(*p_3_s_axi_arprot_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arprot_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arvalid_mon.bind(*p_3_s_axi_arvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_arready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_arready_mon.bind(*p_3_s_axi_arready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_arready_mon);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_3_s_axi_rdata_mon = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_3->s_axi_rdata_mon.bind(*p_3_s_axi_rdata_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rdata_mon);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_3_s_axi_rresp_mon = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_3->s_axi_rresp_mon.bind(*p_3_s_axi_rresp_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rresp_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rvalid_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rvalid_mon.bind(*p_3_s_axi_rvalid_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rvalid_mon);
        xsim_sc_channel<0, bool > *p_3_s_axi_rready_mon = new xsim_sc_channel<0, bool >();
        sc_inst_3->s_axi_rready_mon.bind(*p_3_s_axi_rready_mon);
        (*_glb_hdl_sc_channel_map).push_back(p_3_s_axi_rready_mon);
        sc_inst_4 = new pfm_dynamic_memory_subsystem_0(".emu_wrapper.emu_i.dynamic_region.memory_subsystem");
        sc_inst_4->xsim_set_dbg_index(30);
        xsim_sc_channel<0, bool > *p_4_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk.bind(*p_4_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk);
        xsim_sc_channel<0, bool > *p_4_aclk1 = new xsim_sc_channel<0, bool >();
        sc_inst_4->aclk1.bind(*p_4_aclk1);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aclk1);
        xsim_sc_channel<0, bool > *p_4_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_4->aresetn.bind(*p_4_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_4_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awid.bind(*p_4_S00_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_awaddr.bind(*p_4_S00_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_awlen.bind(*p_4_S00_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awsize.bind(*p_4_S00_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_awburst.bind(*p_4_S00_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_awlock.bind(*p_4_S00_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awcache.bind(*p_4_S00_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_awprot.bind(*p_4_S00_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_awqos.bind(*p_4_S00_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awuser.bind(*p_4_S00_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awvalid.bind(*p_4_S00_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_awready.bind(*p_4_S00_AXI_awready);
        p_4_S00_AXI_awready->set_sv_netview_offsetfromdp(19811184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_wdata.bind(*p_4_S00_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_wstrb.bind(*p_4_S00_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wlast.bind(*p_4_S00_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wuser.bind(*p_4_S00_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wvalid.bind(*p_4_S00_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_wready.bind(*p_4_S00_AXI_wready);
        p_4_S00_AXI_wready->set_sv_netview_offsetfromdp(19811520);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bid.bind(*p_4_S00_AXI_bid);
        p_4_S00_AXI_bid->set_sv_netview_offsetfromdp(19811576);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_bresp.bind(*p_4_S00_AXI_bresp);
        p_4_S00_AXI_bresp->set_sv_netview_offsetfromdp(19811632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_buser.bind(*p_4_S00_AXI_buser);
        p_4_S00_AXI_buser->set_sv_netview_offsetfromdp(19811688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bvalid.bind(*p_4_S00_AXI_bvalid);
        p_4_S00_AXI_bvalid->set_sv_netview_offsetfromdp(19811744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_bready.bind(*p_4_S00_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arid.bind(*p_4_S00_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S00_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S00_AXI_araddr.bind(*p_4_S00_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S00_AXI_arlen.bind(*p_4_S00_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arsize.bind(*p_4_S00_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_arburst.bind(*p_4_S00_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S00_AXI_arlock.bind(*p_4_S00_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arcache.bind(*p_4_S00_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S00_AXI_arprot.bind(*p_4_S00_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S00_AXI_arqos.bind(*p_4_S00_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_aruser.bind(*p_4_S00_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arvalid.bind(*p_4_S00_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_arready.bind(*p_4_S00_AXI_arready);
        p_4_S00_AXI_arready->set_sv_netview_offsetfromdp(19812472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rid.bind(*p_4_S00_AXI_rid);
        p_4_S00_AXI_rid->set_sv_netview_offsetfromdp(19812528);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S00_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S00_AXI_rdata.bind(*p_4_S00_AXI_rdata);
        p_4_S00_AXI_rdata->set_sv_netview_offsetfromdp(19812584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S00_AXI_rresp.bind(*p_4_S00_AXI_rresp);
        p_4_S00_AXI_rresp->set_sv_netview_offsetfromdp(19812640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rlast.bind(*p_4_S00_AXI_rlast);
        p_4_S00_AXI_rlast->set_sv_netview_offsetfromdp(19812696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_ruser.bind(*p_4_S00_AXI_ruser);
        p_4_S00_AXI_ruser->set_sv_netview_offsetfromdp(19812752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rvalid.bind(*p_4_S00_AXI_rvalid);
        p_4_S00_AXI_rvalid->set_sv_netview_offsetfromdp(19812808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S00_AXI_rready.bind(*p_4_S00_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S00_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awid.bind(*p_4_S01_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_awaddr.bind(*p_4_S01_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_awlen.bind(*p_4_S01_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awsize.bind(*p_4_S01_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_awburst.bind(*p_4_S01_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_awlock.bind(*p_4_S01_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awcache.bind(*p_4_S01_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_awprot.bind(*p_4_S01_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_awqos.bind(*p_4_S01_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awuser.bind(*p_4_S01_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awvalid.bind(*p_4_S01_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_awready.bind(*p_4_S01_AXI_awready);
        p_4_S01_AXI_awready->set_sv_netview_offsetfromdp(19813536);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S01_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S01_AXI_wdata.bind(*p_4_S01_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_wstrb.bind(*p_4_S01_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wlast.bind(*p_4_S01_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wuser.bind(*p_4_S01_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wvalid.bind(*p_4_S01_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_wready.bind(*p_4_S01_AXI_wready);
        p_4_S01_AXI_wready->set_sv_netview_offsetfromdp(19813872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bid.bind(*p_4_S01_AXI_bid);
        p_4_S01_AXI_bid->set_sv_netview_offsetfromdp(19813928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_bresp.bind(*p_4_S01_AXI_bresp);
        p_4_S01_AXI_bresp->set_sv_netview_offsetfromdp(19813984);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_buser.bind(*p_4_S01_AXI_buser);
        p_4_S01_AXI_buser->set_sv_netview_offsetfromdp(19814040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bvalid.bind(*p_4_S01_AXI_bvalid);
        p_4_S01_AXI_bvalid->set_sv_netview_offsetfromdp(19814096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_bready.bind(*p_4_S01_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arid.bind(*p_4_S01_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S01_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S01_AXI_araddr.bind(*p_4_S01_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S01_AXI_arlen.bind(*p_4_S01_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arsize.bind(*p_4_S01_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_arburst.bind(*p_4_S01_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S01_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S01_AXI_arlock.bind(*p_4_S01_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arcache.bind(*p_4_S01_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S01_AXI_arprot.bind(*p_4_S01_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S01_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S01_AXI_arqos.bind(*p_4_S01_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_aruser.bind(*p_4_S01_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arvalid.bind(*p_4_S01_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_arready.bind(*p_4_S01_AXI_arready);
        p_4_S01_AXI_arready->set_sv_netview_offsetfromdp(19814824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rid.bind(*p_4_S01_AXI_rid);
        p_4_S01_AXI_rid->set_sv_netview_offsetfromdp(19814880);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S01_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S01_AXI_rdata.bind(*p_4_S01_AXI_rdata);
        p_4_S01_AXI_rdata->set_sv_netview_offsetfromdp(19814936);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S01_AXI_rresp.bind(*p_4_S01_AXI_rresp);
        p_4_S01_AXI_rresp->set_sv_netview_offsetfromdp(19814992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rlast.bind(*p_4_S01_AXI_rlast);
        p_4_S01_AXI_rlast->set_sv_netview_offsetfromdp(19815048);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_ruser.bind(*p_4_S01_AXI_ruser);
        p_4_S01_AXI_ruser->set_sv_netview_offsetfromdp(19815104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rvalid.bind(*p_4_S01_AXI_rvalid);
        p_4_S01_AXI_rvalid->set_sv_netview_offsetfromdp(19815160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S01_AXI_rready.bind(*p_4_S01_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S01_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awid.bind(*p_4_S02_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S02_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S02_AXI_awaddr.bind(*p_4_S02_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S02_AXI_awlen.bind(*p_4_S02_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_awsize.bind(*p_4_S02_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_awburst.bind(*p_4_S02_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S02_AXI_awlock.bind(*p_4_S02_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_awcache.bind(*p_4_S02_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_awprot.bind(*p_4_S02_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_awqos.bind(*p_4_S02_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awuser.bind(*p_4_S02_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awvalid.bind(*p_4_S02_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_awready.bind(*p_4_S02_AXI_awready);
        p_4_S02_AXI_awready->set_sv_netview_offsetfromdp(19815888);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S02_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S02_AXI_wdata.bind(*p_4_S02_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_wstrb.bind(*p_4_S02_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wlast.bind(*p_4_S02_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wuser.bind(*p_4_S02_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wvalid.bind(*p_4_S02_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_wready.bind(*p_4_S02_AXI_wready);
        p_4_S02_AXI_wready->set_sv_netview_offsetfromdp(19816224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bid.bind(*p_4_S02_AXI_bid);
        p_4_S02_AXI_bid->set_sv_netview_offsetfromdp(19816280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_bresp.bind(*p_4_S02_AXI_bresp);
        p_4_S02_AXI_bresp->set_sv_netview_offsetfromdp(19816336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_buser.bind(*p_4_S02_AXI_buser);
        p_4_S02_AXI_buser->set_sv_netview_offsetfromdp(19816392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bvalid.bind(*p_4_S02_AXI_bvalid);
        p_4_S02_AXI_bvalid->set_sv_netview_offsetfromdp(19816448);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_bready.bind(*p_4_S02_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arid.bind(*p_4_S02_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S02_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S02_AXI_araddr.bind(*p_4_S02_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S02_AXI_arlen.bind(*p_4_S02_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_arsize.bind(*p_4_S02_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_arburst.bind(*p_4_S02_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S02_AXI_arlock.bind(*p_4_S02_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_arcache.bind(*p_4_S02_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S02_AXI_arprot.bind(*p_4_S02_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S02_AXI_arqos.bind(*p_4_S02_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_aruser.bind(*p_4_S02_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arvalid.bind(*p_4_S02_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_arready.bind(*p_4_S02_AXI_arready);
        p_4_S02_AXI_arready->set_sv_netview_offsetfromdp(19817176);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rid.bind(*p_4_S02_AXI_rid);
        p_4_S02_AXI_rid->set_sv_netview_offsetfromdp(19817232);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S02_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S02_AXI_rdata.bind(*p_4_S02_AXI_rdata);
        p_4_S02_AXI_rdata->set_sv_netview_offsetfromdp(19817288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S02_AXI_rresp.bind(*p_4_S02_AXI_rresp);
        p_4_S02_AXI_rresp->set_sv_netview_offsetfromdp(19817344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rlast.bind(*p_4_S02_AXI_rlast);
        p_4_S02_AXI_rlast->set_sv_netview_offsetfromdp(19817400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_ruser.bind(*p_4_S02_AXI_ruser);
        p_4_S02_AXI_ruser->set_sv_netview_offsetfromdp(19817456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rvalid.bind(*p_4_S02_AXI_rvalid);
        p_4_S02_AXI_rvalid->set_sv_netview_offsetfromdp(19817512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S02_AXI_rready.bind(*p_4_S02_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S02_AXI_rready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awid.bind(*p_4_S03_AXI_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S03_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S03_AXI_awaddr.bind(*p_4_S03_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S03_AXI_awlen.bind(*p_4_S03_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_awsize.bind(*p_4_S03_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_awburst.bind(*p_4_S03_AXI_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awburst);
        xsim_sc_channel<0, bool > *p_4_S03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S03_AXI_awlock.bind(*p_4_S03_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_awcache.bind(*p_4_S03_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_awprot.bind(*p_4_S03_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_awqos.bind(*p_4_S03_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awuser.bind(*p_4_S03_AXI_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awvalid.bind(*p_4_S03_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_awready.bind(*p_4_S03_AXI_awready);
        p_4_S03_AXI_awready->set_sv_netview_offsetfromdp(19818240);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S03_AXI_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S03_AXI_wdata.bind(*p_4_S03_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_wstrb.bind(*p_4_S03_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wlast.bind(*p_4_S03_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wuser.bind(*p_4_S03_AXI_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_wuser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wvalid.bind(*p_4_S03_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_wready.bind(*p_4_S03_AXI_wready);
        p_4_S03_AXI_wready->set_sv_netview_offsetfromdp(19818576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bid.bind(*p_4_S03_AXI_bid);
        p_4_S03_AXI_bid->set_sv_netview_offsetfromdp(19818632);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_bresp.bind(*p_4_S03_AXI_bresp);
        p_4_S03_AXI_bresp->set_sv_netview_offsetfromdp(19818688);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_buser.bind(*p_4_S03_AXI_buser);
        p_4_S03_AXI_buser->set_sv_netview_offsetfromdp(19818744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bvalid.bind(*p_4_S03_AXI_bvalid);
        p_4_S03_AXI_bvalid->set_sv_netview_offsetfromdp(19818800);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_bready.bind(*p_4_S03_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arid.bind(*p_4_S03_AXI_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S03_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S03_AXI_araddr.bind(*p_4_S03_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S03_AXI_arlen.bind(*p_4_S03_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_arsize.bind(*p_4_S03_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_arburst.bind(*p_4_S03_AXI_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arburst);
        xsim_sc_channel<0, bool > *p_4_S03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S03_AXI_arlock.bind(*p_4_S03_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_arcache.bind(*p_4_S03_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S03_AXI_arprot.bind(*p_4_S03_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S03_AXI_arqos.bind(*p_4_S03_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_aruser.bind(*p_4_S03_AXI_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_aruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arvalid.bind(*p_4_S03_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_arready.bind(*p_4_S03_AXI_arready);
        p_4_S03_AXI_arready->set_sv_netview_offsetfromdp(19819528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rid.bind(*p_4_S03_AXI_rid);
        p_4_S03_AXI_rid->set_sv_netview_offsetfromdp(19819584);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_S03_AXI_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->S03_AXI_rdata.bind(*p_4_S03_AXI_rdata);
        p_4_S03_AXI_rdata->set_sv_netview_offsetfromdp(19819640);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S03_AXI_rresp.bind(*p_4_S03_AXI_rresp);
        p_4_S03_AXI_rresp->set_sv_netview_offsetfromdp(19819696);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rlast.bind(*p_4_S03_AXI_rlast);
        p_4_S03_AXI_rlast->set_sv_netview_offsetfromdp(19819752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_ruser.bind(*p_4_S03_AXI_ruser);
        p_4_S03_AXI_ruser->set_sv_netview_offsetfromdp(19819808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rvalid.bind(*p_4_S03_AXI_rvalid);
        p_4_S03_AXI_rvalid->set_sv_netview_offsetfromdp(19819864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S03_AXI_rready.bind(*p_4_S03_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S03_AXI_rready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S04_AXI_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S04_AXI_awaddr.bind(*p_4_S04_AXI_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S04_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S04_AXI_awlen.bind(*p_4_S04_AXI_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_awsize.bind(*p_4_S04_AXI_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awsize);
        xsim_sc_channel<0, bool > *p_4_S04_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S04_AXI_awlock.bind(*p_4_S04_AXI_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awcache.bind(*p_4_S04_AXI_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_awprot.bind(*p_4_S04_AXI_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awregion.bind(*p_4_S04_AXI_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_awqos.bind(*p_4_S04_AXI_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_awvalid.bind(*p_4_S04_AXI_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_awvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_awready.bind(*p_4_S04_AXI_awready);
        p_4_S04_AXI_awready->set_sv_netview_offsetfromdp(19820480);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_S04_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->S04_AXI_wdata.bind(*p_4_S04_AXI_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S04_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S04_AXI_wstrb.bind(*p_4_S04_AXI_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_wstrb);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wlast.bind(*p_4_S04_AXI_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wvalid.bind(*p_4_S04_AXI_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_wvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_wready.bind(*p_4_S04_AXI_wready);
        p_4_S04_AXI_wready->set_sv_netview_offsetfromdp(19820760);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S04_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S04_AXI_bresp.bind(*p_4_S04_AXI_bresp);
        p_4_S04_AXI_bresp->set_sv_netview_offsetfromdp(19820816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_bvalid.bind(*p_4_S04_AXI_bvalid);
        p_4_S04_AXI_bvalid->set_sv_netview_offsetfromdp(19820872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_bready.bind(*p_4_S04_AXI_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_S04_AXI_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->S04_AXI_araddr.bind(*p_4_S04_AXI_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_S04_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->S04_AXI_arlen.bind(*p_4_S04_AXI_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_arsize.bind(*p_4_S04_AXI_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arsize);
        xsim_sc_channel<0, bool > *p_4_S04_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->S04_AXI_arlock.bind(*p_4_S04_AXI_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arcache.bind(*p_4_S04_AXI_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_S04_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->S04_AXI_arprot.bind(*p_4_S04_AXI_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arregion.bind(*p_4_S04_AXI_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_S04_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->S04_AXI_arqos.bind(*p_4_S04_AXI_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_arvalid.bind(*p_4_S04_AXI_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_arvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_arready.bind(*p_4_S04_AXI_arready);
        p_4_S04_AXI_arready->set_sv_netview_offsetfromdp(19821488);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_S04_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->S04_AXI_rdata.bind(*p_4_S04_AXI_rdata);
        p_4_S04_AXI_rdata->set_sv_netview_offsetfromdp(19821544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_S04_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->S04_AXI_rresp.bind(*p_4_S04_AXI_rresp);
        p_4_S04_AXI_rresp->set_sv_netview_offsetfromdp(19821600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rlast.bind(*p_4_S04_AXI_rlast);
        p_4_S04_AXI_rlast->set_sv_netview_offsetfromdp(19821656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rvalid.bind(*p_4_S04_AXI_rvalid);
        p_4_S04_AXI_rvalid->set_sv_netview_offsetfromdp(19821712);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_S04_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->S04_AXI_rready.bind(*p_4_S04_AXI_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_S04_AXI_rready);
        xsim_sc_channel<0, bool > *p_4_ddr4_mem_calib_complete = new xsim_sc_channel<0, bool >();
        sc_inst_4->ddr4_mem_calib_complete.bind(*p_4_ddr4_mem_calib_complete);
        p_4_ddr4_mem_calib_complete->set_sv_netview_offsetfromdp(19821824);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_awid.bind(*p_4_M00_AXI_awid);
        p_4_M00_AXI_awid->set_sv_netview_offsetfromdp(19821880);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M00_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M00_AXI_awaddr.bind(*p_4_M00_AXI_awaddr);
        p_4_M00_AXI_awaddr->set_sv_netview_offsetfromdp(19821936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M00_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M00_AXI_awlen.bind(*p_4_M00_AXI_awlen);
        p_4_M00_AXI_awlen->set_sv_netview_offsetfromdp(19821992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_awsize.bind(*p_4_M00_AXI_awsize);
        p_4_M00_AXI_awsize->set_sv_netview_offsetfromdp(19822048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_awburst.bind(*p_4_M00_AXI_awburst);
        p_4_M00_AXI_awburst->set_sv_netview_offsetfromdp(19822104);
        xsim_sc_channel<0, bool > *p_4_M00_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M00_AXI_awlock.bind(*p_4_M00_AXI_awlock);
        p_4_M00_AXI_awlock->set_sv_netview_offsetfromdp(19822160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_awcache.bind(*p_4_M00_AXI_awcache);
        p_4_M00_AXI_awcache->set_sv_netview_offsetfromdp(19822216);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_awprot.bind(*p_4_M00_AXI_awprot);
        p_4_M00_AXI_awprot->set_sv_netview_offsetfromdp(19822272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_awqos.bind(*p_4_M00_AXI_awqos);
        p_4_M00_AXI_awqos->set_sv_netview_offsetfromdp(19822328);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M00_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M00_AXI_awuser.bind(*p_4_M00_AXI_awuser);
        p_4_M00_AXI_awuser->set_sv_netview_offsetfromdp(19822384);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_awvalid.bind(*p_4_M00_AXI_awvalid);
        p_4_M00_AXI_awvalid->set_sv_netview_offsetfromdp(19822440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_awready.bind(*p_4_M00_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M00_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M00_AXI_wdata.bind(*p_4_M00_AXI_wdata);
        p_4_M00_AXI_wdata->set_sv_netview_offsetfromdp(19822552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M00_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M00_AXI_wstrb.bind(*p_4_M00_AXI_wstrb);
        p_4_M00_AXI_wstrb->set_sv_netview_offsetfromdp(19822608);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wlast.bind(*p_4_M00_AXI_wlast);
        p_4_M00_AXI_wlast->set_sv_netview_offsetfromdp(19822664);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wuser.bind(*p_4_M00_AXI_wuser);
        p_4_M00_AXI_wuser->set_sv_netview_offsetfromdp(19822720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wvalid.bind(*p_4_M00_AXI_wvalid);
        p_4_M00_AXI_wvalid->set_sv_netview_offsetfromdp(19822776);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_wready.bind(*p_4_M00_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_bid.bind(*p_4_M00_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_bresp.bind(*p_4_M00_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_buser.bind(*p_4_M00_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_bvalid.bind(*p_4_M00_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_bready.bind(*p_4_M00_AXI_bready);
        p_4_M00_AXI_bready->set_sv_netview_offsetfromdp(19823112);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_arid.bind(*p_4_M00_AXI_arid);
        p_4_M00_AXI_arid->set_sv_netview_offsetfromdp(19823168);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M00_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M00_AXI_araddr.bind(*p_4_M00_AXI_araddr);
        p_4_M00_AXI_araddr->set_sv_netview_offsetfromdp(19823224);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M00_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M00_AXI_arlen.bind(*p_4_M00_AXI_arlen);
        p_4_M00_AXI_arlen->set_sv_netview_offsetfromdp(19823280);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_arsize.bind(*p_4_M00_AXI_arsize);
        p_4_M00_AXI_arsize->set_sv_netview_offsetfromdp(19823336);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_arburst.bind(*p_4_M00_AXI_arburst);
        p_4_M00_AXI_arburst->set_sv_netview_offsetfromdp(19823392);
        xsim_sc_channel<0, bool > *p_4_M00_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M00_AXI_arlock.bind(*p_4_M00_AXI_arlock);
        p_4_M00_AXI_arlock->set_sv_netview_offsetfromdp(19823448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_arcache.bind(*p_4_M00_AXI_arcache);
        p_4_M00_AXI_arcache->set_sv_netview_offsetfromdp(19823504);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M00_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M00_AXI_arprot.bind(*p_4_M00_AXI_arprot);
        p_4_M00_AXI_arprot->set_sv_netview_offsetfromdp(19823560);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M00_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M00_AXI_arqos.bind(*p_4_M00_AXI_arqos);
        p_4_M00_AXI_arqos->set_sv_netview_offsetfromdp(19823616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M00_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M00_AXI_aruser.bind(*p_4_M00_AXI_aruser);
        p_4_M00_AXI_aruser->set_sv_netview_offsetfromdp(19823672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_arvalid.bind(*p_4_M00_AXI_arvalid);
        p_4_M00_AXI_arvalid->set_sv_netview_offsetfromdp(19823728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_arready.bind(*p_4_M00_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M00_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M00_AXI_rid.bind(*p_4_M00_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M00_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M00_AXI_rdata.bind(*p_4_M00_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M00_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M00_AXI_rresp.bind(*p_4_M00_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rlast.bind(*p_4_M00_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_ruser.bind(*p_4_M00_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rvalid.bind(*p_4_M00_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M00_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M00_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M00_AXI_rready.bind(*p_4_M00_AXI_rready);
        p_4_M00_AXI_rready->set_sv_netview_offsetfromdp(19824176);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_4_M01_AXI_awaddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_4->M01_AXI_awaddr.bind(*p_4_M01_AXI_awaddr);
        p_4_M01_AXI_awaddr->set_sv_netview_offsetfromdp(19824232);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M01_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M01_AXI_awlen.bind(*p_4_M01_AXI_awlen);
        p_4_M01_AXI_awlen->set_sv_netview_offsetfromdp(19824288);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_awsize.bind(*p_4_M01_AXI_awsize);
        p_4_M01_AXI_awsize->set_sv_netview_offsetfromdp(19824344);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_awburst.bind(*p_4_M01_AXI_awburst);
        p_4_M01_AXI_awburst->set_sv_netview_offsetfromdp(19824400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_awprot.bind(*p_4_M01_AXI_awprot);
        p_4_M01_AXI_awprot->set_sv_netview_offsetfromdp(19824456);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_awvalid.bind(*p_4_M01_AXI_awvalid);
        p_4_M01_AXI_awvalid->set_sv_netview_offsetfromdp(19824512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_awready.bind(*p_4_M01_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M01_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M01_AXI_wdata.bind(*p_4_M01_AXI_wdata);
        p_4_M01_AXI_wdata->set_sv_netview_offsetfromdp(19824624);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M01_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M01_AXI_wstrb.bind(*p_4_M01_AXI_wstrb);
        p_4_M01_AXI_wstrb->set_sv_netview_offsetfromdp(19824680);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wlast.bind(*p_4_M01_AXI_wlast);
        p_4_M01_AXI_wlast->set_sv_netview_offsetfromdp(19824736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wvalid.bind(*p_4_M01_AXI_wvalid);
        p_4_M01_AXI_wvalid->set_sv_netview_offsetfromdp(19824792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_wready.bind(*p_4_M01_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_bresp.bind(*p_4_M01_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_bvalid.bind(*p_4_M01_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_bready.bind(*p_4_M01_AXI_bready);
        p_4_M01_AXI_bready->set_sv_netview_offsetfromdp(19825016);
        xsim_sc_channel<35, sc_dt::sc_bv<35> > *p_4_M01_AXI_araddr = new xsim_sc_channel<35, sc_dt::sc_bv<35> >();
        sc_inst_4->M01_AXI_araddr.bind(*p_4_M01_AXI_araddr);
        p_4_M01_AXI_araddr->set_sv_netview_offsetfromdp(19825072);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M01_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M01_AXI_arlen.bind(*p_4_M01_AXI_arlen);
        p_4_M01_AXI_arlen->set_sv_netview_offsetfromdp(19825128);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_arsize.bind(*p_4_M01_AXI_arsize);
        p_4_M01_AXI_arsize->set_sv_netview_offsetfromdp(19825184);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_arburst.bind(*p_4_M01_AXI_arburst);
        p_4_M01_AXI_arburst->set_sv_netview_offsetfromdp(19825240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M01_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M01_AXI_arprot.bind(*p_4_M01_AXI_arprot);
        p_4_M01_AXI_arprot->set_sv_netview_offsetfromdp(19825296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_arvalid.bind(*p_4_M01_AXI_arvalid);
        p_4_M01_AXI_arvalid->set_sv_netview_offsetfromdp(19825352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_arready.bind(*p_4_M01_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_arready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M01_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M01_AXI_rdata.bind(*p_4_M01_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M01_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M01_AXI_rresp.bind(*p_4_M01_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rlast.bind(*p_4_M01_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rvalid.bind(*p_4_M01_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M01_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M01_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M01_AXI_rready.bind(*p_4_M01_AXI_rready);
        p_4_M01_AXI_rready->set_sv_netview_offsetfromdp(19825688);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_awid.bind(*p_4_M02_AXI_awid);
        p_4_M02_AXI_awid->set_sv_netview_offsetfromdp(19825744);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M02_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M02_AXI_awaddr.bind(*p_4_M02_AXI_awaddr);
        p_4_M02_AXI_awaddr->set_sv_netview_offsetfromdp(19825800);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M02_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M02_AXI_awlen.bind(*p_4_M02_AXI_awlen);
        p_4_M02_AXI_awlen->set_sv_netview_offsetfromdp(19825856);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_awsize.bind(*p_4_M02_AXI_awsize);
        p_4_M02_AXI_awsize->set_sv_netview_offsetfromdp(19825912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_awburst.bind(*p_4_M02_AXI_awburst);
        p_4_M02_AXI_awburst->set_sv_netview_offsetfromdp(19825968);
        xsim_sc_channel<0, bool > *p_4_M02_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M02_AXI_awlock.bind(*p_4_M02_AXI_awlock);
        p_4_M02_AXI_awlock->set_sv_netview_offsetfromdp(19826024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_awcache.bind(*p_4_M02_AXI_awcache);
        p_4_M02_AXI_awcache->set_sv_netview_offsetfromdp(19826080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_awprot.bind(*p_4_M02_AXI_awprot);
        p_4_M02_AXI_awprot->set_sv_netview_offsetfromdp(19826136);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_awqos.bind(*p_4_M02_AXI_awqos);
        p_4_M02_AXI_awqos->set_sv_netview_offsetfromdp(19826192);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M02_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M02_AXI_awuser.bind(*p_4_M02_AXI_awuser);
        p_4_M02_AXI_awuser->set_sv_netview_offsetfromdp(19826248);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_awvalid.bind(*p_4_M02_AXI_awvalid);
        p_4_M02_AXI_awvalid->set_sv_netview_offsetfromdp(19826304);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_awready.bind(*p_4_M02_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M02_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M02_AXI_wdata.bind(*p_4_M02_AXI_wdata);
        p_4_M02_AXI_wdata->set_sv_netview_offsetfromdp(19826416);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M02_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M02_AXI_wstrb.bind(*p_4_M02_AXI_wstrb);
        p_4_M02_AXI_wstrb->set_sv_netview_offsetfromdp(19826472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wlast.bind(*p_4_M02_AXI_wlast);
        p_4_M02_AXI_wlast->set_sv_netview_offsetfromdp(19826528);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wuser.bind(*p_4_M02_AXI_wuser);
        p_4_M02_AXI_wuser->set_sv_netview_offsetfromdp(19826584);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wvalid.bind(*p_4_M02_AXI_wvalid);
        p_4_M02_AXI_wvalid->set_sv_netview_offsetfromdp(19826640);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_wready.bind(*p_4_M02_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_bid.bind(*p_4_M02_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_bresp.bind(*p_4_M02_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_buser.bind(*p_4_M02_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_bvalid.bind(*p_4_M02_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_bready.bind(*p_4_M02_AXI_bready);
        p_4_M02_AXI_bready->set_sv_netview_offsetfromdp(19826976);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_arid.bind(*p_4_M02_AXI_arid);
        p_4_M02_AXI_arid->set_sv_netview_offsetfromdp(19827032);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M02_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M02_AXI_araddr.bind(*p_4_M02_AXI_araddr);
        p_4_M02_AXI_araddr->set_sv_netview_offsetfromdp(19827088);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M02_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M02_AXI_arlen.bind(*p_4_M02_AXI_arlen);
        p_4_M02_AXI_arlen->set_sv_netview_offsetfromdp(19827144);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_arsize.bind(*p_4_M02_AXI_arsize);
        p_4_M02_AXI_arsize->set_sv_netview_offsetfromdp(19827200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_arburst.bind(*p_4_M02_AXI_arburst);
        p_4_M02_AXI_arburst->set_sv_netview_offsetfromdp(19827256);
        xsim_sc_channel<0, bool > *p_4_M02_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M02_AXI_arlock.bind(*p_4_M02_AXI_arlock);
        p_4_M02_AXI_arlock->set_sv_netview_offsetfromdp(19827312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_arcache.bind(*p_4_M02_AXI_arcache);
        p_4_M02_AXI_arcache->set_sv_netview_offsetfromdp(19827368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M02_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M02_AXI_arprot.bind(*p_4_M02_AXI_arprot);
        p_4_M02_AXI_arprot->set_sv_netview_offsetfromdp(19827424);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M02_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M02_AXI_arqos.bind(*p_4_M02_AXI_arqos);
        p_4_M02_AXI_arqos->set_sv_netview_offsetfromdp(19827480);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M02_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M02_AXI_aruser.bind(*p_4_M02_AXI_aruser);
        p_4_M02_AXI_aruser->set_sv_netview_offsetfromdp(19827536);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_arvalid.bind(*p_4_M02_AXI_arvalid);
        p_4_M02_AXI_arvalid->set_sv_netview_offsetfromdp(19827592);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_arready.bind(*p_4_M02_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M02_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M02_AXI_rid.bind(*p_4_M02_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M02_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M02_AXI_rdata.bind(*p_4_M02_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M02_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M02_AXI_rresp.bind(*p_4_M02_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rlast.bind(*p_4_M02_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_ruser.bind(*p_4_M02_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rvalid.bind(*p_4_M02_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M02_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M02_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M02_AXI_rready.bind(*p_4_M02_AXI_rready);
        p_4_M02_AXI_rready->set_sv_netview_offsetfromdp(19828040);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_awid.bind(*p_4_M03_AXI_awid);
        p_4_M03_AXI_awid->set_sv_netview_offsetfromdp(19828096);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M03_AXI_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M03_AXI_awaddr.bind(*p_4_M03_AXI_awaddr);
        p_4_M03_AXI_awaddr->set_sv_netview_offsetfromdp(19828152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M03_AXI_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M03_AXI_awlen.bind(*p_4_M03_AXI_awlen);
        p_4_M03_AXI_awlen->set_sv_netview_offsetfromdp(19828208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_awsize.bind(*p_4_M03_AXI_awsize);
        p_4_M03_AXI_awsize->set_sv_netview_offsetfromdp(19828264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_awburst.bind(*p_4_M03_AXI_awburst);
        p_4_M03_AXI_awburst->set_sv_netview_offsetfromdp(19828320);
        xsim_sc_channel<0, bool > *p_4_M03_AXI_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M03_AXI_awlock.bind(*p_4_M03_AXI_awlock);
        p_4_M03_AXI_awlock->set_sv_netview_offsetfromdp(19828376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_awcache.bind(*p_4_M03_AXI_awcache);
        p_4_M03_AXI_awcache->set_sv_netview_offsetfromdp(19828432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_awprot.bind(*p_4_M03_AXI_awprot);
        p_4_M03_AXI_awprot->set_sv_netview_offsetfromdp(19828488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_awqos.bind(*p_4_M03_AXI_awqos);
        p_4_M03_AXI_awqos->set_sv_netview_offsetfromdp(19828544);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M03_AXI_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M03_AXI_awuser.bind(*p_4_M03_AXI_awuser);
        p_4_M03_AXI_awuser->set_sv_netview_offsetfromdp(19828600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_awvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_awvalid.bind(*p_4_M03_AXI_awvalid);
        p_4_M03_AXI_awvalid->set_sv_netview_offsetfromdp(19828656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_awready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_awready.bind(*p_4_M03_AXI_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M03_AXI_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M03_AXI_wdata.bind(*p_4_M03_AXI_wdata);
        p_4_M03_AXI_wdata->set_sv_netview_offsetfromdp(19828768);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_4_M03_AXI_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_4->M03_AXI_wstrb.bind(*p_4_M03_AXI_wstrb);
        p_4_M03_AXI_wstrb->set_sv_netview_offsetfromdp(19828824);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wlast.bind(*p_4_M03_AXI_wlast);
        p_4_M03_AXI_wlast->set_sv_netview_offsetfromdp(19828880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wuser.bind(*p_4_M03_AXI_wuser);
        p_4_M03_AXI_wuser->set_sv_netview_offsetfromdp(19828936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wvalid.bind(*p_4_M03_AXI_wvalid);
        p_4_M03_AXI_wvalid->set_sv_netview_offsetfromdp(19828992);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_wready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_wready.bind(*p_4_M03_AXI_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_wready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_bid.bind(*p_4_M03_AXI_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_bresp.bind(*p_4_M03_AXI_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_buser.bind(*p_4_M03_AXI_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_buser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_bvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_bvalid.bind(*p_4_M03_AXI_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_bvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_bready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_bready.bind(*p_4_M03_AXI_bready);
        p_4_M03_AXI_bready->set_sv_netview_offsetfromdp(19829328);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_arid.bind(*p_4_M03_AXI_arid);
        p_4_M03_AXI_arid->set_sv_netview_offsetfromdp(19829384);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_4_M03_AXI_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_4->M03_AXI_araddr.bind(*p_4_M03_AXI_araddr);
        p_4_M03_AXI_araddr->set_sv_netview_offsetfromdp(19829440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_4_M03_AXI_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_4->M03_AXI_arlen.bind(*p_4_M03_AXI_arlen);
        p_4_M03_AXI_arlen->set_sv_netview_offsetfromdp(19829496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_arsize.bind(*p_4_M03_AXI_arsize);
        p_4_M03_AXI_arsize->set_sv_netview_offsetfromdp(19829552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_arburst.bind(*p_4_M03_AXI_arburst);
        p_4_M03_AXI_arburst->set_sv_netview_offsetfromdp(19829608);
        xsim_sc_channel<0, bool > *p_4_M03_AXI_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_4->M03_AXI_arlock.bind(*p_4_M03_AXI_arlock);
        p_4_M03_AXI_arlock->set_sv_netview_offsetfromdp(19829664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_arcache.bind(*p_4_M03_AXI_arcache);
        p_4_M03_AXI_arcache->set_sv_netview_offsetfromdp(19829720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_4_M03_AXI_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_4->M03_AXI_arprot.bind(*p_4_M03_AXI_arprot);
        p_4_M03_AXI_arprot->set_sv_netview_offsetfromdp(19829776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_4_M03_AXI_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_4->M03_AXI_arqos.bind(*p_4_M03_AXI_arqos);
        p_4_M03_AXI_arqos->set_sv_netview_offsetfromdp(19829832);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_4_M03_AXI_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_4->M03_AXI_aruser.bind(*p_4_M03_AXI_aruser);
        p_4_M03_AXI_aruser->set_sv_netview_offsetfromdp(19829888);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_arvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_arvalid.bind(*p_4_M03_AXI_arvalid);
        p_4_M03_AXI_arvalid->set_sv_netview_offsetfromdp(19829944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_arready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_arready.bind(*p_4_M03_AXI_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_arready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_4_M03_AXI_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_4->M03_AXI_rid.bind(*p_4_M03_AXI_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_4_M03_AXI_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_4->M03_AXI_rdata.bind(*p_4_M03_AXI_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_4_M03_AXI_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_4->M03_AXI_rresp.bind(*p_4_M03_AXI_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_rresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rlast = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rlast.bind(*p_4_M03_AXI_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_ruser.bind(*p_4_M03_AXI_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_ruser);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rvalid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rvalid.bind(*p_4_M03_AXI_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_4_M03_AXI_rvalid);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_4_M03_AXI_rready = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_4->M03_AXI_rready.bind(*p_4_M03_AXI_rready);
        p_4_M03_AXI_rready->set_sv_netview_offsetfromdp(19830392);
        sc_inst_5 = new pfm_dynamic_sci(".emu_wrapper.emu_i.dynamic_region.pfm_dynamic_sci_inst");
        sc_inst_5->xsim_set_dbg_index(31);
        sc_inst_6 = new pfm_dynamic_sim_ddr_0_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_0");
        sc_inst_6->xsim_set_dbg_index(32);
        xsim_sc_channel<0, bool > *p_6_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ui_clk.bind(*p_6_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_awid.bind(*p_6_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_awaddr.bind(*p_6_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_awlen.bind(*p_6_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awsize.bind(*p_6_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_awburst.bind(*p_6_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awlock.bind(*p_6_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awcache.bind(*p_6_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_awprot.bind(*p_6_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awregion.bind(*p_6_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_awqos.bind(*p_6_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_awuser.bind(*p_6_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awvalid.bind(*p_6_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_awready.bind(*p_6_c0_ddr_saxi_awready);
        p_6_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(19831272);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_wdata.bind(*p_6_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_6_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_6->c0_ddr_saxi_wstrb.bind(*p_6_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wlast.bind(*p_6_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_wuser.bind(*p_6_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wvalid.bind(*p_6_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_wready.bind(*p_6_c0_ddr_saxi_wready);
        p_6_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(19831608);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_bid.bind(*p_6_c0_ddr_saxi_bid);
        p_6_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(19831664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_bresp.bind(*p_6_c0_ddr_saxi_bresp);
        p_6_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(19831720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_buser.bind(*p_6_c0_ddr_saxi_buser);
        p_6_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(19831776);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bvalid.bind(*p_6_c0_ddr_saxi_bvalid);
        p_6_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(19831832);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_bready.bind(*p_6_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_arid.bind(*p_6_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_6_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_6->c0_ddr_saxi_araddr.bind(*p_6_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->c0_ddr_saxi_arlen.bind(*p_6_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arsize.bind(*p_6_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_arburst.bind(*p_6_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arlock.bind(*p_6_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arcache.bind(*p_6_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->c0_ddr_saxi_arprot.bind(*p_6_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arregion.bind(*p_6_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->c0_ddr_saxi_arqos.bind(*p_6_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->c0_ddr_saxi_aruser.bind(*p_6_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arvalid.bind(*p_6_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_arready.bind(*p_6_c0_ddr_saxi_arready);
        p_6_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(19832616);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->c0_ddr_saxi_rid.bind(*p_6_c0_ddr_saxi_rid);
        p_6_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(19832672);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_6_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_6->c0_ddr_saxi_rdata.bind(*p_6_c0_ddr_saxi_rdata);
        p_6_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(19832728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->c0_ddr_saxi_rresp.bind(*p_6_c0_ddr_saxi_rresp);
        p_6_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(19832784);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rlast.bind(*p_6_c0_ddr_saxi_rlast);
        p_6_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(19832840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->c0_ddr_saxi_ruser.bind(*p_6_c0_ddr_saxi_ruser);
        p_6_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(19832896);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rvalid.bind(*p_6_c0_ddr_saxi_rvalid);
        p_6_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(19832952);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_rready.bind(*p_6_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aclk.bind(*p_6_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_6_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->c0_ddr_saxi_aresetn.bind(*p_6_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_awid.bind(*p_6_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awaddr.bind(*p_6_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_awlen.bind(*p_6_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awsize.bind(*p_6_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_awburst.bind(*p_6_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awlock.bind(*p_6_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awcache.bind(*p_6_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_awprot.bind(*p_6_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awregion.bind(*p_6_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_awqos.bind(*p_6_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_awuser.bind(*p_6_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awvalid.bind(*p_6_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_awready.bind(*p_6_s_xdma_axi_awready);
        p_6_s_xdma_axi_awready->set_sv_netview_offsetfromdp(19833848);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_wdata.bind(*p_6_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_wstrb.bind(*p_6_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wlast.bind(*p_6_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_wuser.bind(*p_6_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wvalid.bind(*p_6_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_wready.bind(*p_6_s_xdma_axi_wready);
        p_6_s_xdma_axi_wready->set_sv_netview_offsetfromdp(19834184);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_bid.bind(*p_6_s_xdma_axi_bid);
        p_6_s_xdma_axi_bid->set_sv_netview_offsetfromdp(19834240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_bresp.bind(*p_6_s_xdma_axi_bresp);
        p_6_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(19834296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_buser.bind(*p_6_s_xdma_axi_buser);
        p_6_s_xdma_axi_buser->set_sv_netview_offsetfromdp(19834352);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bvalid.bind(*p_6_s_xdma_axi_bvalid);
        p_6_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(19834408);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_bready.bind(*p_6_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_arid.bind(*p_6_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_araddr.bind(*p_6_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_6_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_6->s_xdma_axi_arlen.bind(*p_6_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arsize.bind(*p_6_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_arburst.bind(*p_6_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arlock.bind(*p_6_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arcache.bind(*p_6_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_6_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_6->s_xdma_axi_arprot.bind(*p_6_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arregion.bind(*p_6_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_6_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_6->s_xdma_axi_arqos.bind(*p_6_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_aruser.bind(*p_6_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arvalid.bind(*p_6_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_arready.bind(*p_6_s_xdma_axi_arready);
        p_6_s_xdma_axi_arready->set_sv_netview_offsetfromdp(19835192);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_6_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_6->s_xdma_axi_rid.bind(*p_6_s_xdma_axi_rid);
        p_6_s_xdma_axi_rid->set_sv_netview_offsetfromdp(19835248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_6_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_6->s_xdma_axi_rdata.bind(*p_6_s_xdma_axi_rdata);
        p_6_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(19835304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_6_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_6->s_xdma_axi_rresp.bind(*p_6_s_xdma_axi_rresp);
        p_6_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(19835360);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rlast.bind(*p_6_s_xdma_axi_rlast);
        p_6_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(19835416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_6_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_6->s_xdma_axi_ruser.bind(*p_6_s_xdma_axi_ruser);
        p_6_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(19835472);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rvalid.bind(*p_6_s_xdma_axi_rvalid);
        p_6_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(19835528);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_rready.bind(*p_6_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aclk.bind(*p_6_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_6_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_6->s_xdma_axi_aresetn.bind(*p_6_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_6_s_xdma_axi_aresetn);
        sc_inst_7 = new pfm_dynamic_sim_ddr_2_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_2");
        sc_inst_7->xsim_set_dbg_index(33);
        xsim_sc_channel<0, bool > *p_7_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ui_clk.bind(*p_7_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_awid.bind(*p_7_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_awaddr.bind(*p_7_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_awlen.bind(*p_7_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awsize.bind(*p_7_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_awburst.bind(*p_7_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awlock.bind(*p_7_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awcache.bind(*p_7_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_awprot.bind(*p_7_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awregion.bind(*p_7_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_awqos.bind(*p_7_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_awuser.bind(*p_7_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awvalid.bind(*p_7_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_awready.bind(*p_7_c0_ddr_saxi_awready);
        p_7_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(19836528);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_wdata.bind(*p_7_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_7_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_7->c0_ddr_saxi_wstrb.bind(*p_7_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wlast.bind(*p_7_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_wuser.bind(*p_7_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wvalid.bind(*p_7_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_wready.bind(*p_7_c0_ddr_saxi_wready);
        p_7_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(19836864);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_bid.bind(*p_7_c0_ddr_saxi_bid);
        p_7_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(19836920);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_bresp.bind(*p_7_c0_ddr_saxi_bresp);
        p_7_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(19836976);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_buser.bind(*p_7_c0_ddr_saxi_buser);
        p_7_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(19837032);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bvalid.bind(*p_7_c0_ddr_saxi_bvalid);
        p_7_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(19837088);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_bready.bind(*p_7_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_arid.bind(*p_7_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_7_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_7->c0_ddr_saxi_araddr.bind(*p_7_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->c0_ddr_saxi_arlen.bind(*p_7_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arsize.bind(*p_7_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_arburst.bind(*p_7_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arlock.bind(*p_7_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arcache.bind(*p_7_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->c0_ddr_saxi_arprot.bind(*p_7_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arregion.bind(*p_7_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->c0_ddr_saxi_arqos.bind(*p_7_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->c0_ddr_saxi_aruser.bind(*p_7_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arvalid.bind(*p_7_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_arready.bind(*p_7_c0_ddr_saxi_arready);
        p_7_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(19837872);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->c0_ddr_saxi_rid.bind(*p_7_c0_ddr_saxi_rid);
        p_7_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(19837928);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_7_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_7->c0_ddr_saxi_rdata.bind(*p_7_c0_ddr_saxi_rdata);
        p_7_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(19837984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->c0_ddr_saxi_rresp.bind(*p_7_c0_ddr_saxi_rresp);
        p_7_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(19838040);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rlast.bind(*p_7_c0_ddr_saxi_rlast);
        p_7_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(19838096);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->c0_ddr_saxi_ruser.bind(*p_7_c0_ddr_saxi_ruser);
        p_7_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(19838152);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rvalid.bind(*p_7_c0_ddr_saxi_rvalid);
        p_7_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(19838208);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_rready.bind(*p_7_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aclk.bind(*p_7_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_7_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->c0_ddr_saxi_aresetn.bind(*p_7_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_awid.bind(*p_7_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awaddr.bind(*p_7_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_awlen.bind(*p_7_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awsize.bind(*p_7_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_awburst.bind(*p_7_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awlock.bind(*p_7_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awcache.bind(*p_7_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_awprot.bind(*p_7_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awregion.bind(*p_7_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_awqos.bind(*p_7_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_awuser.bind(*p_7_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awvalid.bind(*p_7_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_awready.bind(*p_7_s_xdma_axi_awready);
        p_7_s_xdma_axi_awready->set_sv_netview_offsetfromdp(19839104);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_wdata.bind(*p_7_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_wstrb.bind(*p_7_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wlast.bind(*p_7_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_wuser.bind(*p_7_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wvalid.bind(*p_7_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_wready.bind(*p_7_s_xdma_axi_wready);
        p_7_s_xdma_axi_wready->set_sv_netview_offsetfromdp(19839440);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_bid.bind(*p_7_s_xdma_axi_bid);
        p_7_s_xdma_axi_bid->set_sv_netview_offsetfromdp(19839496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_bresp.bind(*p_7_s_xdma_axi_bresp);
        p_7_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(19839552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_buser.bind(*p_7_s_xdma_axi_buser);
        p_7_s_xdma_axi_buser->set_sv_netview_offsetfromdp(19839608);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bvalid.bind(*p_7_s_xdma_axi_bvalid);
        p_7_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(19839664);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_bready.bind(*p_7_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_arid.bind(*p_7_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_araddr.bind(*p_7_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_7_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_7->s_xdma_axi_arlen.bind(*p_7_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arsize.bind(*p_7_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_arburst.bind(*p_7_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arlock.bind(*p_7_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arcache.bind(*p_7_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_7_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_7->s_xdma_axi_arprot.bind(*p_7_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arregion.bind(*p_7_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_7_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_7->s_xdma_axi_arqos.bind(*p_7_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_aruser.bind(*p_7_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arvalid.bind(*p_7_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_arready.bind(*p_7_s_xdma_axi_arready);
        p_7_s_xdma_axi_arready->set_sv_netview_offsetfromdp(19840448);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_7_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_7->s_xdma_axi_rid.bind(*p_7_s_xdma_axi_rid);
        p_7_s_xdma_axi_rid->set_sv_netview_offsetfromdp(19840504);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_7_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_7->s_xdma_axi_rdata.bind(*p_7_s_xdma_axi_rdata);
        p_7_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(19840560);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_7_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_7->s_xdma_axi_rresp.bind(*p_7_s_xdma_axi_rresp);
        p_7_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(19840616);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rlast.bind(*p_7_s_xdma_axi_rlast);
        p_7_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(19840672);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_7_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_7->s_xdma_axi_ruser.bind(*p_7_s_xdma_axi_ruser);
        p_7_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(19840728);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rvalid.bind(*p_7_s_xdma_axi_rvalid);
        p_7_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(19840784);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_rready.bind(*p_7_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aclk.bind(*p_7_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_7_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_7->s_xdma_axi_aresetn.bind(*p_7_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_7_s_xdma_axi_aresetn);
        sc_inst_8 = new pfm_dynamic_sim_ddr_3_0(".emu_wrapper.emu_i.dynamic_region.sim_ddr_3");
        sc_inst_8->xsim_set_dbg_index(34);
        xsim_sc_channel<0, bool > *p_8_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ui_clk.bind(*p_8_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ui_clk);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_awid.bind(*p_8_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_awaddr.bind(*p_8_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_awlen.bind(*p_8_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awsize.bind(*p_8_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_awburst.bind(*p_8_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awlock.bind(*p_8_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awcache.bind(*p_8_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_awprot.bind(*p_8_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awregion.bind(*p_8_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_awqos.bind(*p_8_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_awuser.bind(*p_8_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awvalid.bind(*p_8_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_awready.bind(*p_8_c0_ddr_saxi_awready);
        p_8_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(19841784);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_wdata.bind(*p_8_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_8_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_8->c0_ddr_saxi_wstrb.bind(*p_8_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wlast.bind(*p_8_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_wuser.bind(*p_8_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wvalid.bind(*p_8_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_wready.bind(*p_8_c0_ddr_saxi_wready);
        p_8_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(19842120);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_bid.bind(*p_8_c0_ddr_saxi_bid);
        p_8_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(19842176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_bresp.bind(*p_8_c0_ddr_saxi_bresp);
        p_8_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(19842232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_buser.bind(*p_8_c0_ddr_saxi_buser);
        p_8_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(19842288);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bvalid.bind(*p_8_c0_ddr_saxi_bvalid);
        p_8_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(19842344);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_bready.bind(*p_8_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_arid.bind(*p_8_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_8_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_8->c0_ddr_saxi_araddr.bind(*p_8_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->c0_ddr_saxi_arlen.bind(*p_8_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arsize.bind(*p_8_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_arburst.bind(*p_8_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arlock.bind(*p_8_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arcache.bind(*p_8_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->c0_ddr_saxi_arprot.bind(*p_8_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arregion.bind(*p_8_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->c0_ddr_saxi_arqos.bind(*p_8_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_c0_ddr_saxi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->c0_ddr_saxi_aruser.bind(*p_8_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arvalid.bind(*p_8_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_arready.bind(*p_8_c0_ddr_saxi_arready);
        p_8_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(19843128);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_c0_ddr_saxi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->c0_ddr_saxi_rid.bind(*p_8_c0_ddr_saxi_rid);
        p_8_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(19843184);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_8_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_8->c0_ddr_saxi_rdata.bind(*p_8_c0_ddr_saxi_rdata);
        p_8_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(19843240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->c0_ddr_saxi_rresp.bind(*p_8_c0_ddr_saxi_rresp);
        p_8_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(19843296);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rlast.bind(*p_8_c0_ddr_saxi_rlast);
        p_8_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(19843352);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->c0_ddr_saxi_ruser.bind(*p_8_c0_ddr_saxi_ruser);
        p_8_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(19843408);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rvalid.bind(*p_8_c0_ddr_saxi_rvalid);
        p_8_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(19843464);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_rready.bind(*p_8_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aclk.bind(*p_8_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_8_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->c0_ddr_saxi_aresetn.bind(*p_8_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_awid.bind(*p_8_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awaddr.bind(*p_8_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_awlen.bind(*p_8_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awsize.bind(*p_8_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_awburst.bind(*p_8_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awlock.bind(*p_8_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awcache.bind(*p_8_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_awprot.bind(*p_8_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awregion.bind(*p_8_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_awqos.bind(*p_8_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_awuser.bind(*p_8_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awvalid.bind(*p_8_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_awready.bind(*p_8_s_xdma_axi_awready);
        p_8_s_xdma_axi_awready->set_sv_netview_offsetfromdp(19844360);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_wdata.bind(*p_8_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_wstrb.bind(*p_8_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wlast.bind(*p_8_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_wuser.bind(*p_8_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wvalid.bind(*p_8_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_wready.bind(*p_8_s_xdma_axi_wready);
        p_8_s_xdma_axi_wready->set_sv_netview_offsetfromdp(19844696);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_bid.bind(*p_8_s_xdma_axi_bid);
        p_8_s_xdma_axi_bid->set_sv_netview_offsetfromdp(19844752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_bresp.bind(*p_8_s_xdma_axi_bresp);
        p_8_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(19844808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_buser.bind(*p_8_s_xdma_axi_buser);
        p_8_s_xdma_axi_buser->set_sv_netview_offsetfromdp(19844864);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bvalid.bind(*p_8_s_xdma_axi_bvalid);
        p_8_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(19844920);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_bready.bind(*p_8_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_arid.bind(*p_8_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_araddr.bind(*p_8_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_8_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_8->s_xdma_axi_arlen.bind(*p_8_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arsize.bind(*p_8_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_arburst.bind(*p_8_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arlock.bind(*p_8_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arcache.bind(*p_8_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_8_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_8->s_xdma_axi_arprot.bind(*p_8_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arregion.bind(*p_8_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_8_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_8->s_xdma_axi_arqos.bind(*p_8_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_aruser.bind(*p_8_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arvalid.bind(*p_8_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_arready.bind(*p_8_s_xdma_axi_arready);
        p_8_s_xdma_axi_arready->set_sv_netview_offsetfromdp(19845704);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_8_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_8->s_xdma_axi_rid.bind(*p_8_s_xdma_axi_rid);
        p_8_s_xdma_axi_rid->set_sv_netview_offsetfromdp(19845760);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_8_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_8->s_xdma_axi_rdata.bind(*p_8_s_xdma_axi_rdata);
        p_8_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(19845816);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_8_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_8->s_xdma_axi_rresp.bind(*p_8_s_xdma_axi_rresp);
        p_8_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(19845872);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rlast.bind(*p_8_s_xdma_axi_rlast);
        p_8_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(19845928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_8_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_8->s_xdma_axi_ruser.bind(*p_8_s_xdma_axi_ruser);
        p_8_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(19845984);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rvalid.bind(*p_8_s_xdma_axi_rvalid);
        p_8_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(19846040);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_rready.bind(*p_8_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aclk.bind(*p_8_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_8_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_8->s_xdma_axi_aresetn.bind(*p_8_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_8_s_xdma_axi_aresetn);
        sc_inst_9 = new pfm_dynamic_icn_pass_0_0(".emu_wrapper.emu_i.dynamic_region.slr0.icn_pass_0");
        sc_inst_9->xsim_set_dbg_index(641);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awid.bind(*p_9_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_awaddr.bind(*p_9_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_awlen.bind(*p_9_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awsize.bind(*p_9_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_awburst.bind(*p_9_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awlock.bind(*p_9_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awcache.bind(*p_9_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_awprot.bind(*p_9_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awregion.bind(*p_9_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_awqos.bind(*p_9_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_awuser.bind(*p_9_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awvalid.bind(*p_9_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_awready.bind(*p_9_s00_axi_awready);
        p_9_s00_axi_awready->set_sv_netview_offsetfromdp(19906592);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_wdata.bind(*p_9_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_wstrb.bind(*p_9_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wlast.bind(*p_9_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_wuser.bind(*p_9_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wvalid.bind(*p_9_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_wready.bind(*p_9_s00_axi_wready);
        p_9_s00_axi_wready->set_sv_netview_offsetfromdp(19906928);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_bid.bind(*p_9_s00_axi_bid);
        p_9_s00_axi_bid->set_sv_netview_offsetfromdp(19906984);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_bresp.bind(*p_9_s00_axi_bresp);
        p_9_s00_axi_bresp->set_sv_netview_offsetfromdp(19907040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_buser.bind(*p_9_s00_axi_buser);
        p_9_s00_axi_buser->set_sv_netview_offsetfromdp(19907096);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bvalid.bind(*p_9_s00_axi_bvalid);
        p_9_s00_axi_bvalid->set_sv_netview_offsetfromdp(19907152);
        xsim_sc_channel<0, bool > *p_9_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_bready.bind(*p_9_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_arid.bind(*p_9_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_9_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_9->s00_axi_araddr.bind(*p_9_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->s00_axi_arlen.bind(*p_9_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arsize.bind(*p_9_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_arburst.bind(*p_9_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arlock.bind(*p_9_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arcache.bind(*p_9_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->s00_axi_arprot.bind(*p_9_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arregion.bind(*p_9_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->s00_axi_arqos.bind(*p_9_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_aruser.bind(*p_9_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arvalid.bind(*p_9_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_9_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_arready.bind(*p_9_s00_axi_arready);
        p_9_s00_axi_arready->set_sv_netview_offsetfromdp(19907936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_rid.bind(*p_9_s00_axi_rid);
        p_9_s00_axi_rid->set_sv_netview_offsetfromdp(19907992);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->s00_axi_rdata.bind(*p_9_s00_axi_rdata);
        p_9_s00_axi_rdata->set_sv_netview_offsetfromdp(19908048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->s00_axi_rresp.bind(*p_9_s00_axi_rresp);
        p_9_s00_axi_rresp->set_sv_netview_offsetfromdp(19908104);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rlast.bind(*p_9_s00_axi_rlast);
        p_9_s00_axi_rlast->set_sv_netview_offsetfromdp(19908160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->s00_axi_ruser.bind(*p_9_s00_axi_ruser);
        p_9_s00_axi_ruser->set_sv_netview_offsetfromdp(19908216);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rvalid.bind(*p_9_s00_axi_rvalid);
        p_9_s00_axi_rvalid->set_sv_netview_offsetfromdp(19908272);
        xsim_sc_channel<0, bool > *p_9_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_rready.bind(*p_9_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aclk.bind(*p_9_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->s00_axi_aresetn.bind(*p_9_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awid.bind(*p_9_m00_axi_awid);
        p_9_m00_axi_awid->set_sv_netview_offsetfromdp(19908496);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_awaddr.bind(*p_9_m00_axi_awaddr);
        p_9_m00_axi_awaddr->set_sv_netview_offsetfromdp(19908552);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_awlen.bind(*p_9_m00_axi_awlen);
        p_9_m00_axi_awlen->set_sv_netview_offsetfromdp(19908608);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awsize.bind(*p_9_m00_axi_awsize);
        p_9_m00_axi_awsize->set_sv_netview_offsetfromdp(19908664);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_awburst.bind(*p_9_m00_axi_awburst);
        p_9_m00_axi_awburst->set_sv_netview_offsetfromdp(19908720);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awlock.bind(*p_9_m00_axi_awlock);
        p_9_m00_axi_awlock->set_sv_netview_offsetfromdp(19908776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awcache.bind(*p_9_m00_axi_awcache);
        p_9_m00_axi_awcache->set_sv_netview_offsetfromdp(19908832);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_awprot.bind(*p_9_m00_axi_awprot);
        p_9_m00_axi_awprot->set_sv_netview_offsetfromdp(19908888);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_awqos.bind(*p_9_m00_axi_awqos);
        p_9_m00_axi_awqos->set_sv_netview_offsetfromdp(19908944);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_awuser.bind(*p_9_m00_axi_awuser);
        p_9_m00_axi_awuser->set_sv_netview_offsetfromdp(19909000);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awvalid.bind(*p_9_m00_axi_awvalid);
        p_9_m00_axi_awvalid->set_sv_netview_offsetfromdp(19909056);
        xsim_sc_channel<0, bool > *p_9_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_awready.bind(*p_9_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_wdata.bind(*p_9_m00_axi_wdata);
        p_9_m00_axi_wdata->set_sv_netview_offsetfromdp(19909168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_wstrb.bind(*p_9_m00_axi_wstrb);
        p_9_m00_axi_wstrb->set_sv_netview_offsetfromdp(19909224);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wlast.bind(*p_9_m00_axi_wlast);
        p_9_m00_axi_wlast->set_sv_netview_offsetfromdp(19909280);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_wuser.bind(*p_9_m00_axi_wuser);
        p_9_m00_axi_wuser->set_sv_netview_offsetfromdp(19909336);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wvalid.bind(*p_9_m00_axi_wvalid);
        p_9_m00_axi_wvalid->set_sv_netview_offsetfromdp(19909392);
        xsim_sc_channel<0, bool > *p_9_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_wready.bind(*p_9_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_bid.bind(*p_9_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_bresp.bind(*p_9_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_buser.bind(*p_9_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bvalid.bind(*p_9_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_bready.bind(*p_9_m00_axi_bready);
        p_9_m00_axi_bready->set_sv_netview_offsetfromdp(19909728);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_arid.bind(*p_9_m00_axi_arid);
        p_9_m00_axi_arid->set_sv_netview_offsetfromdp(19909784);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_9_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_9->m00_axi_araddr.bind(*p_9_m00_axi_araddr);
        p_9_m00_axi_araddr->set_sv_netview_offsetfromdp(19909840);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_9_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_9->m00_axi_arlen.bind(*p_9_m00_axi_arlen);
        p_9_m00_axi_arlen->set_sv_netview_offsetfromdp(19909896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arsize.bind(*p_9_m00_axi_arsize);
        p_9_m00_axi_arsize->set_sv_netview_offsetfromdp(19909952);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_arburst.bind(*p_9_m00_axi_arburst);
        p_9_m00_axi_arburst->set_sv_netview_offsetfromdp(19910008);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arlock.bind(*p_9_m00_axi_arlock);
        p_9_m00_axi_arlock->set_sv_netview_offsetfromdp(19910064);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arcache.bind(*p_9_m00_axi_arcache);
        p_9_m00_axi_arcache->set_sv_netview_offsetfromdp(19910120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_9_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_9->m00_axi_arprot.bind(*p_9_m00_axi_arprot);
        p_9_m00_axi_arprot->set_sv_netview_offsetfromdp(19910176);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_9_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_9->m00_axi_arqos.bind(*p_9_m00_axi_arqos);
        p_9_m00_axi_arqos->set_sv_netview_offsetfromdp(19910232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_aruser.bind(*p_9_m00_axi_aruser);
        p_9_m00_axi_aruser->set_sv_netview_offsetfromdp(19910288);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arvalid.bind(*p_9_m00_axi_arvalid);
        p_9_m00_axi_arvalid->set_sv_netview_offsetfromdp(19910344);
        xsim_sc_channel<0, bool > *p_9_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_arready.bind(*p_9_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_rid.bind(*p_9_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_9_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_9->m00_axi_rdata.bind(*p_9_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_9_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_9->m00_axi_rresp.bind(*p_9_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rlast.bind(*p_9_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_9_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_9->m00_axi_ruser.bind(*p_9_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rvalid.bind(*p_9_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_9_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_rready.bind(*p_9_m00_axi_rready);
        p_9_m00_axi_rready->set_sv_netview_offsetfromdp(19910792);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aclk.bind(*p_9_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_9_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_9->m00_axi_aresetn.bind(*p_9_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_9_m00_axi_aresetn);
        sc_inst_10 = new pfm_dynamic_icn_pass_1_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_1");
        sc_inst_10->xsim_set_dbg_index(755);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awid.bind(*p_10_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_awaddr.bind(*p_10_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_awlen.bind(*p_10_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awsize.bind(*p_10_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_awburst.bind(*p_10_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awlock.bind(*p_10_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awcache.bind(*p_10_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_awprot.bind(*p_10_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awregion.bind(*p_10_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_awqos.bind(*p_10_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_awuser.bind(*p_10_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awvalid.bind(*p_10_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_awready.bind(*p_10_s00_axi_awready);
        p_10_s00_axi_awready->set_sv_netview_offsetfromdp(20545064);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_wdata.bind(*p_10_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_wstrb.bind(*p_10_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wlast.bind(*p_10_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_wuser.bind(*p_10_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wvalid.bind(*p_10_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_wready.bind(*p_10_s00_axi_wready);
        p_10_s00_axi_wready->set_sv_netview_offsetfromdp(20545400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_bid.bind(*p_10_s00_axi_bid);
        p_10_s00_axi_bid->set_sv_netview_offsetfromdp(20545456);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_bresp.bind(*p_10_s00_axi_bresp);
        p_10_s00_axi_bresp->set_sv_netview_offsetfromdp(20545512);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_buser.bind(*p_10_s00_axi_buser);
        p_10_s00_axi_buser->set_sv_netview_offsetfromdp(20545568);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bvalid.bind(*p_10_s00_axi_bvalid);
        p_10_s00_axi_bvalid->set_sv_netview_offsetfromdp(20545624);
        xsim_sc_channel<0, bool > *p_10_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_bready.bind(*p_10_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_arid.bind(*p_10_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_10_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_10->s00_axi_araddr.bind(*p_10_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->s00_axi_arlen.bind(*p_10_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arsize.bind(*p_10_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_arburst.bind(*p_10_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arlock.bind(*p_10_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arcache.bind(*p_10_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->s00_axi_arprot.bind(*p_10_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arregion.bind(*p_10_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->s00_axi_arqos.bind(*p_10_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_aruser.bind(*p_10_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arvalid.bind(*p_10_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_10_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_arready.bind(*p_10_s00_axi_arready);
        p_10_s00_axi_arready->set_sv_netview_offsetfromdp(20546408);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_rid.bind(*p_10_s00_axi_rid);
        p_10_s00_axi_rid->set_sv_netview_offsetfromdp(20546464);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->s00_axi_rdata.bind(*p_10_s00_axi_rdata);
        p_10_s00_axi_rdata->set_sv_netview_offsetfromdp(20546520);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->s00_axi_rresp.bind(*p_10_s00_axi_rresp);
        p_10_s00_axi_rresp->set_sv_netview_offsetfromdp(20546576);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rlast.bind(*p_10_s00_axi_rlast);
        p_10_s00_axi_rlast->set_sv_netview_offsetfromdp(20546632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->s00_axi_ruser.bind(*p_10_s00_axi_ruser);
        p_10_s00_axi_ruser->set_sv_netview_offsetfromdp(20546688);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rvalid.bind(*p_10_s00_axi_rvalid);
        p_10_s00_axi_rvalid->set_sv_netview_offsetfromdp(20546744);
        xsim_sc_channel<0, bool > *p_10_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_rready.bind(*p_10_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aclk.bind(*p_10_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->s00_axi_aresetn.bind(*p_10_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awid.bind(*p_10_m00_axi_awid);
        p_10_m00_axi_awid->set_sv_netview_offsetfromdp(20546968);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_awaddr.bind(*p_10_m00_axi_awaddr);
        p_10_m00_axi_awaddr->set_sv_netview_offsetfromdp(20547024);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_awlen.bind(*p_10_m00_axi_awlen);
        p_10_m00_axi_awlen->set_sv_netview_offsetfromdp(20547080);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awsize.bind(*p_10_m00_axi_awsize);
        p_10_m00_axi_awsize->set_sv_netview_offsetfromdp(20547136);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_awburst.bind(*p_10_m00_axi_awburst);
        p_10_m00_axi_awburst->set_sv_netview_offsetfromdp(20547192);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awlock.bind(*p_10_m00_axi_awlock);
        p_10_m00_axi_awlock->set_sv_netview_offsetfromdp(20547248);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awcache.bind(*p_10_m00_axi_awcache);
        p_10_m00_axi_awcache->set_sv_netview_offsetfromdp(20547304);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_awprot.bind(*p_10_m00_axi_awprot);
        p_10_m00_axi_awprot->set_sv_netview_offsetfromdp(20547360);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_awqos.bind(*p_10_m00_axi_awqos);
        p_10_m00_axi_awqos->set_sv_netview_offsetfromdp(20547416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_awuser.bind(*p_10_m00_axi_awuser);
        p_10_m00_axi_awuser->set_sv_netview_offsetfromdp(20547472);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awvalid.bind(*p_10_m00_axi_awvalid);
        p_10_m00_axi_awvalid->set_sv_netview_offsetfromdp(20547528);
        xsim_sc_channel<0, bool > *p_10_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_awready.bind(*p_10_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_wdata.bind(*p_10_m00_axi_wdata);
        p_10_m00_axi_wdata->set_sv_netview_offsetfromdp(20547640);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_wstrb.bind(*p_10_m00_axi_wstrb);
        p_10_m00_axi_wstrb->set_sv_netview_offsetfromdp(20547696);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wlast.bind(*p_10_m00_axi_wlast);
        p_10_m00_axi_wlast->set_sv_netview_offsetfromdp(20547752);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_wuser.bind(*p_10_m00_axi_wuser);
        p_10_m00_axi_wuser->set_sv_netview_offsetfromdp(20547808);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wvalid.bind(*p_10_m00_axi_wvalid);
        p_10_m00_axi_wvalid->set_sv_netview_offsetfromdp(20547864);
        xsim_sc_channel<0, bool > *p_10_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_wready.bind(*p_10_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_bid.bind(*p_10_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_bresp.bind(*p_10_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_buser.bind(*p_10_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bvalid.bind(*p_10_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_bready.bind(*p_10_m00_axi_bready);
        p_10_m00_axi_bready->set_sv_netview_offsetfromdp(20548200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_arid.bind(*p_10_m00_axi_arid);
        p_10_m00_axi_arid->set_sv_netview_offsetfromdp(20548256);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_10_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_10->m00_axi_araddr.bind(*p_10_m00_axi_araddr);
        p_10_m00_axi_araddr->set_sv_netview_offsetfromdp(20548312);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_10_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_10->m00_axi_arlen.bind(*p_10_m00_axi_arlen);
        p_10_m00_axi_arlen->set_sv_netview_offsetfromdp(20548368);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arsize.bind(*p_10_m00_axi_arsize);
        p_10_m00_axi_arsize->set_sv_netview_offsetfromdp(20548424);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_arburst.bind(*p_10_m00_axi_arburst);
        p_10_m00_axi_arburst->set_sv_netview_offsetfromdp(20548480);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arlock.bind(*p_10_m00_axi_arlock);
        p_10_m00_axi_arlock->set_sv_netview_offsetfromdp(20548536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arcache.bind(*p_10_m00_axi_arcache);
        p_10_m00_axi_arcache->set_sv_netview_offsetfromdp(20548592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_10_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_10->m00_axi_arprot.bind(*p_10_m00_axi_arprot);
        p_10_m00_axi_arprot->set_sv_netview_offsetfromdp(20548648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_10_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_10->m00_axi_arqos.bind(*p_10_m00_axi_arqos);
        p_10_m00_axi_arqos->set_sv_netview_offsetfromdp(20548704);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_aruser.bind(*p_10_m00_axi_aruser);
        p_10_m00_axi_aruser->set_sv_netview_offsetfromdp(20548760);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arvalid.bind(*p_10_m00_axi_arvalid);
        p_10_m00_axi_arvalid->set_sv_netview_offsetfromdp(20548816);
        xsim_sc_channel<0, bool > *p_10_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_arready.bind(*p_10_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_rid.bind(*p_10_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_10_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_10->m00_axi_rdata.bind(*p_10_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_10_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_10->m00_axi_rresp.bind(*p_10_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rlast.bind(*p_10_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_10_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_10->m00_axi_ruser.bind(*p_10_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rvalid.bind(*p_10_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_10_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_rready.bind(*p_10_m00_axi_rready);
        p_10_m00_axi_rready->set_sv_netview_offsetfromdp(20549264);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aclk.bind(*p_10_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_10_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_10->m00_axi_aresetn.bind(*p_10_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_10_m00_axi_aresetn);
        sc_inst_11 = new pfm_dynamic_icn_pass_2_0(".emu_wrapper.emu_i.dynamic_region.slr1.icn_pass_2");
        sc_inst_11->xsim_set_dbg_index(756);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awid.bind(*p_11_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_awaddr.bind(*p_11_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_awlen.bind(*p_11_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awsize.bind(*p_11_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_awburst.bind(*p_11_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awlock.bind(*p_11_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awcache.bind(*p_11_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_awprot.bind(*p_11_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awregion.bind(*p_11_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_awqos.bind(*p_11_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_awuser.bind(*p_11_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awvalid.bind(*p_11_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_awready.bind(*p_11_s00_axi_awready);
        p_11_s00_axi_awready->set_sv_netview_offsetfromdp(20550152);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_wdata.bind(*p_11_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_wstrb.bind(*p_11_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wlast.bind(*p_11_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_wuser.bind(*p_11_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wvalid.bind(*p_11_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_wready.bind(*p_11_s00_axi_wready);
        p_11_s00_axi_wready->set_sv_netview_offsetfromdp(20550488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_bid.bind(*p_11_s00_axi_bid);
        p_11_s00_axi_bid->set_sv_netview_offsetfromdp(20550544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_bresp.bind(*p_11_s00_axi_bresp);
        p_11_s00_axi_bresp->set_sv_netview_offsetfromdp(20550600);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_buser.bind(*p_11_s00_axi_buser);
        p_11_s00_axi_buser->set_sv_netview_offsetfromdp(20550656);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bvalid.bind(*p_11_s00_axi_bvalid);
        p_11_s00_axi_bvalid->set_sv_netview_offsetfromdp(20550712);
        xsim_sc_channel<0, bool > *p_11_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_bready.bind(*p_11_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_arid.bind(*p_11_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_11_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_11->s00_axi_araddr.bind(*p_11_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->s00_axi_arlen.bind(*p_11_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arsize.bind(*p_11_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_arburst.bind(*p_11_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arlock.bind(*p_11_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arcache.bind(*p_11_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->s00_axi_arprot.bind(*p_11_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arregion.bind(*p_11_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->s00_axi_arqos.bind(*p_11_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_aruser.bind(*p_11_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arvalid.bind(*p_11_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_11_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_arready.bind(*p_11_s00_axi_arready);
        p_11_s00_axi_arready->set_sv_netview_offsetfromdp(20551496);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_rid.bind(*p_11_s00_axi_rid);
        p_11_s00_axi_rid->set_sv_netview_offsetfromdp(20551552);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->s00_axi_rdata.bind(*p_11_s00_axi_rdata);
        p_11_s00_axi_rdata->set_sv_netview_offsetfromdp(20551608);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->s00_axi_rresp.bind(*p_11_s00_axi_rresp);
        p_11_s00_axi_rresp->set_sv_netview_offsetfromdp(20551664);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rlast.bind(*p_11_s00_axi_rlast);
        p_11_s00_axi_rlast->set_sv_netview_offsetfromdp(20551720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->s00_axi_ruser.bind(*p_11_s00_axi_ruser);
        p_11_s00_axi_ruser->set_sv_netview_offsetfromdp(20551776);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rvalid.bind(*p_11_s00_axi_rvalid);
        p_11_s00_axi_rvalid->set_sv_netview_offsetfromdp(20551832);
        xsim_sc_channel<0, bool > *p_11_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_rready.bind(*p_11_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aclk.bind(*p_11_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->s00_axi_aresetn.bind(*p_11_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awid.bind(*p_11_m00_axi_awid);
        p_11_m00_axi_awid->set_sv_netview_offsetfromdp(20552056);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_awaddr.bind(*p_11_m00_axi_awaddr);
        p_11_m00_axi_awaddr->set_sv_netview_offsetfromdp(20552112);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_awlen.bind(*p_11_m00_axi_awlen);
        p_11_m00_axi_awlen->set_sv_netview_offsetfromdp(20552168);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awsize.bind(*p_11_m00_axi_awsize);
        p_11_m00_axi_awsize->set_sv_netview_offsetfromdp(20552224);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_awburst.bind(*p_11_m00_axi_awburst);
        p_11_m00_axi_awburst->set_sv_netview_offsetfromdp(20552280);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awlock.bind(*p_11_m00_axi_awlock);
        p_11_m00_axi_awlock->set_sv_netview_offsetfromdp(20552336);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awcache.bind(*p_11_m00_axi_awcache);
        p_11_m00_axi_awcache->set_sv_netview_offsetfromdp(20552392);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_awprot.bind(*p_11_m00_axi_awprot);
        p_11_m00_axi_awprot->set_sv_netview_offsetfromdp(20552448);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_awqos.bind(*p_11_m00_axi_awqos);
        p_11_m00_axi_awqos->set_sv_netview_offsetfromdp(20552504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_awuser.bind(*p_11_m00_axi_awuser);
        p_11_m00_axi_awuser->set_sv_netview_offsetfromdp(20552560);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awvalid.bind(*p_11_m00_axi_awvalid);
        p_11_m00_axi_awvalid->set_sv_netview_offsetfromdp(20552616);
        xsim_sc_channel<0, bool > *p_11_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_awready.bind(*p_11_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_wdata.bind(*p_11_m00_axi_wdata);
        p_11_m00_axi_wdata->set_sv_netview_offsetfromdp(20552728);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_wstrb.bind(*p_11_m00_axi_wstrb);
        p_11_m00_axi_wstrb->set_sv_netview_offsetfromdp(20552784);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wlast.bind(*p_11_m00_axi_wlast);
        p_11_m00_axi_wlast->set_sv_netview_offsetfromdp(20552840);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_wuser.bind(*p_11_m00_axi_wuser);
        p_11_m00_axi_wuser->set_sv_netview_offsetfromdp(20552896);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wvalid.bind(*p_11_m00_axi_wvalid);
        p_11_m00_axi_wvalid->set_sv_netview_offsetfromdp(20552952);
        xsim_sc_channel<0, bool > *p_11_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_wready.bind(*p_11_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_bid.bind(*p_11_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_bresp.bind(*p_11_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_buser.bind(*p_11_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bvalid.bind(*p_11_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_bready.bind(*p_11_m00_axi_bready);
        p_11_m00_axi_bready->set_sv_netview_offsetfromdp(20553288);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_arid.bind(*p_11_m00_axi_arid);
        p_11_m00_axi_arid->set_sv_netview_offsetfromdp(20553344);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_11_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_11->m00_axi_araddr.bind(*p_11_m00_axi_araddr);
        p_11_m00_axi_araddr->set_sv_netview_offsetfromdp(20553400);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_11_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_11->m00_axi_arlen.bind(*p_11_m00_axi_arlen);
        p_11_m00_axi_arlen->set_sv_netview_offsetfromdp(20553456);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arsize.bind(*p_11_m00_axi_arsize);
        p_11_m00_axi_arsize->set_sv_netview_offsetfromdp(20553512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_arburst.bind(*p_11_m00_axi_arburst);
        p_11_m00_axi_arburst->set_sv_netview_offsetfromdp(20553568);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arlock.bind(*p_11_m00_axi_arlock);
        p_11_m00_axi_arlock->set_sv_netview_offsetfromdp(20553624);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arcache.bind(*p_11_m00_axi_arcache);
        p_11_m00_axi_arcache->set_sv_netview_offsetfromdp(20553680);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_11_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_11->m00_axi_arprot.bind(*p_11_m00_axi_arprot);
        p_11_m00_axi_arprot->set_sv_netview_offsetfromdp(20553736);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_11_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_11->m00_axi_arqos.bind(*p_11_m00_axi_arqos);
        p_11_m00_axi_arqos->set_sv_netview_offsetfromdp(20553792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_aruser.bind(*p_11_m00_axi_aruser);
        p_11_m00_axi_aruser->set_sv_netview_offsetfromdp(20553848);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arvalid.bind(*p_11_m00_axi_arvalid);
        p_11_m00_axi_arvalid->set_sv_netview_offsetfromdp(20553904);
        xsim_sc_channel<0, bool > *p_11_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_arready.bind(*p_11_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_rid.bind(*p_11_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_11_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_11->m00_axi_rdata.bind(*p_11_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_11_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_11->m00_axi_rresp.bind(*p_11_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rlast.bind(*p_11_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_11_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_11->m00_axi_ruser.bind(*p_11_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rvalid.bind(*p_11_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_11_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_rready.bind(*p_11_m00_axi_rready);
        p_11_m00_axi_rready->set_sv_netview_offsetfromdp(20554352);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aclk.bind(*p_11_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_11_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_11->m00_axi_aresetn.bind(*p_11_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_11_m00_axi_aresetn);
        sc_inst_12 = new pfm_dynamic_icn_pass_3_0(".emu_wrapper.emu_i.dynamic_region.slr2.icn_pass_3");
        sc_inst_12->xsim_set_dbg_index(994);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awid.bind(*p_12_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_awaddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_awaddr.bind(*p_12_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_awlen.bind(*p_12_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awsize.bind(*p_12_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_awburst.bind(*p_12_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awlock.bind(*p_12_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awcache.bind(*p_12_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_awprot.bind(*p_12_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awregion.bind(*p_12_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_awqos.bind(*p_12_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_awuser.bind(*p_12_s00_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awvalid.bind(*p_12_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_awready.bind(*p_12_s00_axi_awready);
        p_12_s00_axi_awready->set_sv_netview_offsetfromdp(21032520);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_wdata.bind(*p_12_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_wstrb.bind(*p_12_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wlast.bind(*p_12_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_wuser.bind(*p_12_s00_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wuser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wvalid.bind(*p_12_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_wready.bind(*p_12_s00_axi_wready);
        p_12_s00_axi_wready->set_sv_netview_offsetfromdp(21032856);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_bid.bind(*p_12_s00_axi_bid);
        p_12_s00_axi_bid->set_sv_netview_offsetfromdp(21032912);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_bresp.bind(*p_12_s00_axi_bresp);
        p_12_s00_axi_bresp->set_sv_netview_offsetfromdp(21032968);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_buser.bind(*p_12_s00_axi_buser);
        p_12_s00_axi_buser->set_sv_netview_offsetfromdp(21033024);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bvalid.bind(*p_12_s00_axi_bvalid);
        p_12_s00_axi_bvalid->set_sv_netview_offsetfromdp(21033080);
        xsim_sc_channel<0, bool > *p_12_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_bready.bind(*p_12_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_arid.bind(*p_12_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arid);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_12_s00_axi_araddr = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_12->s00_axi_araddr.bind(*p_12_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->s00_axi_arlen.bind(*p_12_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arsize.bind(*p_12_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_arburst.bind(*p_12_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arlock.bind(*p_12_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arcache.bind(*p_12_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->s00_axi_arprot.bind(*p_12_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arregion.bind(*p_12_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->s00_axi_arqos.bind(*p_12_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_aruser.bind(*p_12_s00_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aruser);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arvalid.bind(*p_12_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_12_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_arready.bind(*p_12_s00_axi_arready);
        p_12_s00_axi_arready->set_sv_netview_offsetfromdp(21033864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_rid.bind(*p_12_s00_axi_rid);
        p_12_s00_axi_rid->set_sv_netview_offsetfromdp(21033920);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->s00_axi_rdata.bind(*p_12_s00_axi_rdata);
        p_12_s00_axi_rdata->set_sv_netview_offsetfromdp(21033976);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->s00_axi_rresp.bind(*p_12_s00_axi_rresp);
        p_12_s00_axi_rresp->set_sv_netview_offsetfromdp(21034032);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rlast.bind(*p_12_s00_axi_rlast);
        p_12_s00_axi_rlast->set_sv_netview_offsetfromdp(21034088);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_s00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->s00_axi_ruser.bind(*p_12_s00_axi_ruser);
        p_12_s00_axi_ruser->set_sv_netview_offsetfromdp(21034144);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rvalid.bind(*p_12_s00_axi_rvalid);
        p_12_s00_axi_rvalid->set_sv_netview_offsetfromdp(21034200);
        xsim_sc_channel<0, bool > *p_12_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_rready.bind(*p_12_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aclk.bind(*p_12_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->s00_axi_aresetn.bind(*p_12_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awid.bind(*p_12_m00_axi_awid);
        p_12_m00_axi_awid->set_sv_netview_offsetfromdp(21034424);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_awaddr.bind(*p_12_m00_axi_awaddr);
        p_12_m00_axi_awaddr->set_sv_netview_offsetfromdp(21034480);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_awlen.bind(*p_12_m00_axi_awlen);
        p_12_m00_axi_awlen->set_sv_netview_offsetfromdp(21034536);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awsize.bind(*p_12_m00_axi_awsize);
        p_12_m00_axi_awsize->set_sv_netview_offsetfromdp(21034592);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_awburst.bind(*p_12_m00_axi_awburst);
        p_12_m00_axi_awburst->set_sv_netview_offsetfromdp(21034648);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awlock.bind(*p_12_m00_axi_awlock);
        p_12_m00_axi_awlock->set_sv_netview_offsetfromdp(21034704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awcache.bind(*p_12_m00_axi_awcache);
        p_12_m00_axi_awcache->set_sv_netview_offsetfromdp(21034760);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_awprot.bind(*p_12_m00_axi_awprot);
        p_12_m00_axi_awprot->set_sv_netview_offsetfromdp(21034816);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_awqos.bind(*p_12_m00_axi_awqos);
        p_12_m00_axi_awqos->set_sv_netview_offsetfromdp(21034872);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_awuser.bind(*p_12_m00_axi_awuser);
        p_12_m00_axi_awuser->set_sv_netview_offsetfromdp(21034928);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awvalid.bind(*p_12_m00_axi_awvalid);
        p_12_m00_axi_awvalid->set_sv_netview_offsetfromdp(21034984);
        xsim_sc_channel<0, bool > *p_12_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_awready.bind(*p_12_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_wdata.bind(*p_12_m00_axi_wdata);
        p_12_m00_axi_wdata->set_sv_netview_offsetfromdp(21035096);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_wstrb.bind(*p_12_m00_axi_wstrb);
        p_12_m00_axi_wstrb->set_sv_netview_offsetfromdp(21035152);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wlast.bind(*p_12_m00_axi_wlast);
        p_12_m00_axi_wlast->set_sv_netview_offsetfromdp(21035208);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_wuser.bind(*p_12_m00_axi_wuser);
        p_12_m00_axi_wuser->set_sv_netview_offsetfromdp(21035264);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wvalid.bind(*p_12_m00_axi_wvalid);
        p_12_m00_axi_wvalid->set_sv_netview_offsetfromdp(21035320);
        xsim_sc_channel<0, bool > *p_12_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_wready.bind(*p_12_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_bid.bind(*p_12_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_bresp.bind(*p_12_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_buser.bind(*p_12_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bvalid.bind(*p_12_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_bready.bind(*p_12_m00_axi_bready);
        p_12_m00_axi_bready->set_sv_netview_offsetfromdp(21035656);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_arid.bind(*p_12_m00_axi_arid);
        p_12_m00_axi_arid->set_sv_netview_offsetfromdp(21035712);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_12_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_12->m00_axi_araddr.bind(*p_12_m00_axi_araddr);
        p_12_m00_axi_araddr->set_sv_netview_offsetfromdp(21035768);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_12_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_12->m00_axi_arlen.bind(*p_12_m00_axi_arlen);
        p_12_m00_axi_arlen->set_sv_netview_offsetfromdp(21035824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arsize.bind(*p_12_m00_axi_arsize);
        p_12_m00_axi_arsize->set_sv_netview_offsetfromdp(21035880);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_arburst.bind(*p_12_m00_axi_arburst);
        p_12_m00_axi_arburst->set_sv_netview_offsetfromdp(21035936);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arlock.bind(*p_12_m00_axi_arlock);
        p_12_m00_axi_arlock->set_sv_netview_offsetfromdp(21035992);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arcache.bind(*p_12_m00_axi_arcache);
        p_12_m00_axi_arcache->set_sv_netview_offsetfromdp(21036048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_12_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_12->m00_axi_arprot.bind(*p_12_m00_axi_arprot);
        p_12_m00_axi_arprot->set_sv_netview_offsetfromdp(21036104);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_12_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_12->m00_axi_arqos.bind(*p_12_m00_axi_arqos);
        p_12_m00_axi_arqos->set_sv_netview_offsetfromdp(21036160);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_aruser.bind(*p_12_m00_axi_aruser);
        p_12_m00_axi_aruser->set_sv_netview_offsetfromdp(21036216);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arvalid.bind(*p_12_m00_axi_arvalid);
        p_12_m00_axi_arvalid->set_sv_netview_offsetfromdp(21036272);
        xsim_sc_channel<0, bool > *p_12_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_arready.bind(*p_12_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_rid.bind(*p_12_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_12_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_12->m00_axi_rdata.bind(*p_12_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_12_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_12->m00_axi_rresp.bind(*p_12_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rlast.bind(*p_12_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_12_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_12->m00_axi_ruser.bind(*p_12_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rvalid.bind(*p_12_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_12_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_rready.bind(*p_12_m00_axi_rready);
        p_12_m00_axi_rready->set_sv_netview_offsetfromdp(21036720);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aclk.bind(*p_12_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_12_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_12->m00_axi_aresetn.bind(*p_12_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_12_m00_axi_aresetn);
        sc_inst_13 = new pfm_dynamic_xtlm_simple_intercon_0_0(".emu_wrapper.emu_i.dynamic_region.xtlm_simple_intercon_0");
        sc_inst_13->xsim_set_dbg_index(39);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_awid.bind(*p_13_s00_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s00_axi_awaddr.bind(*p_13_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_awlen.bind(*p_13_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awsize.bind(*p_13_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_awburst.bind(*p_13_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awlock.bind(*p_13_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awcache.bind(*p_13_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_awprot.bind(*p_13_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awregion.bind(*p_13_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_awqos.bind(*p_13_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awvalid.bind(*p_13_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_awready.bind(*p_13_s00_axi_awready);
        p_13_s00_axi_awready->set_sv_netview_offsetfromdp(21761952);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_wdata.bind(*p_13_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_wstrb.bind(*p_13_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wlast.bind(*p_13_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wvalid.bind(*p_13_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_wready.bind(*p_13_s00_axi_wready);
        p_13_s00_axi_wready->set_sv_netview_offsetfromdp(21762232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_bid.bind(*p_13_s00_axi_bid);
        p_13_s00_axi_bid->set_sv_netview_offsetfromdp(21762288);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_bresp.bind(*p_13_s00_axi_bresp);
        p_13_s00_axi_bresp->set_sv_netview_offsetfromdp(21762344);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bvalid.bind(*p_13_s00_axi_bvalid);
        p_13_s00_axi_bvalid->set_sv_netview_offsetfromdp(21762400);
        xsim_sc_channel<0, bool > *p_13_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_bready.bind(*p_13_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_arid.bind(*p_13_s00_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s00_axi_araddr.bind(*p_13_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s00_axi_arlen.bind(*p_13_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arsize.bind(*p_13_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_arburst.bind(*p_13_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arlock.bind(*p_13_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arcache.bind(*p_13_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s00_axi_arprot.bind(*p_13_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arregion.bind(*p_13_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s00_axi_arqos.bind(*p_13_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arvalid.bind(*p_13_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_arready.bind(*p_13_s00_axi_arready);
        p_13_s00_axi_arready->set_sv_netview_offsetfromdp(21763128);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s00_axi_rid.bind(*p_13_s00_axi_rid);
        p_13_s00_axi_rid->set_sv_netview_offsetfromdp(21763184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_s00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->s00_axi_rdata.bind(*p_13_s00_axi_rdata);
        p_13_s00_axi_rdata->set_sv_netview_offsetfromdp(21763240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s00_axi_rresp.bind(*p_13_s00_axi_rresp);
        p_13_s00_axi_rresp->set_sv_netview_offsetfromdp(21763296);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rlast.bind(*p_13_s00_axi_rlast);
        p_13_s00_axi_rlast->set_sv_netview_offsetfromdp(21763352);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rvalid.bind(*p_13_s00_axi_rvalid);
        p_13_s00_axi_rvalid->set_sv_netview_offsetfromdp(21763408);
        xsim_sc_channel<0, bool > *p_13_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_rready.bind(*p_13_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aclk.bind(*p_13_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s00_axi_aresetn.bind(*p_13_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awid.bind(*p_13_m00_axi_awid);
        p_13_m00_axi_awid->set_sv_netview_offsetfromdp(21763632);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_awaddr.bind(*p_13_m00_axi_awaddr);
        p_13_m00_axi_awaddr->set_sv_netview_offsetfromdp(21763688);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_awlen.bind(*p_13_m00_axi_awlen);
        p_13_m00_axi_awlen->set_sv_netview_offsetfromdp(21763744);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awsize.bind(*p_13_m00_axi_awsize);
        p_13_m00_axi_awsize->set_sv_netview_offsetfromdp(21763800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_awburst.bind(*p_13_m00_axi_awburst);
        p_13_m00_axi_awburst->set_sv_netview_offsetfromdp(21763856);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awlock.bind(*p_13_m00_axi_awlock);
        p_13_m00_axi_awlock->set_sv_netview_offsetfromdp(21763912);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awcache.bind(*p_13_m00_axi_awcache);
        p_13_m00_axi_awcache->set_sv_netview_offsetfromdp(21763968);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_awprot.bind(*p_13_m00_axi_awprot);
        p_13_m00_axi_awprot->set_sv_netview_offsetfromdp(21764024);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_awqos.bind(*p_13_m00_axi_awqos);
        p_13_m00_axi_awqos->set_sv_netview_offsetfromdp(21764080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_awuser.bind(*p_13_m00_axi_awuser);
        p_13_m00_axi_awuser->set_sv_netview_offsetfromdp(21764136);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awvalid.bind(*p_13_m00_axi_awvalid);
        p_13_m00_axi_awvalid->set_sv_netview_offsetfromdp(21764192);
        xsim_sc_channel<0, bool > *p_13_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_awready.bind(*p_13_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_wdata.bind(*p_13_m00_axi_wdata);
        p_13_m00_axi_wdata->set_sv_netview_offsetfromdp(21764304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_wstrb.bind(*p_13_m00_axi_wstrb);
        p_13_m00_axi_wstrb->set_sv_netview_offsetfromdp(21764360);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wlast.bind(*p_13_m00_axi_wlast);
        p_13_m00_axi_wlast->set_sv_netview_offsetfromdp(21764416);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_wuser.bind(*p_13_m00_axi_wuser);
        p_13_m00_axi_wuser->set_sv_netview_offsetfromdp(21764472);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wvalid.bind(*p_13_m00_axi_wvalid);
        p_13_m00_axi_wvalid->set_sv_netview_offsetfromdp(21764528);
        xsim_sc_channel<0, bool > *p_13_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_wready.bind(*p_13_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_bid.bind(*p_13_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_bresp.bind(*p_13_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_buser.bind(*p_13_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bvalid.bind(*p_13_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_bready.bind(*p_13_m00_axi_bready);
        p_13_m00_axi_bready->set_sv_netview_offsetfromdp(21764864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_arid.bind(*p_13_m00_axi_arid);
        p_13_m00_axi_arid->set_sv_netview_offsetfromdp(21764920);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m00_axi_araddr.bind(*p_13_m00_axi_araddr);
        p_13_m00_axi_araddr->set_sv_netview_offsetfromdp(21764976);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m00_axi_arlen.bind(*p_13_m00_axi_arlen);
        p_13_m00_axi_arlen->set_sv_netview_offsetfromdp(21765032);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arsize.bind(*p_13_m00_axi_arsize);
        p_13_m00_axi_arsize->set_sv_netview_offsetfromdp(21765088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_arburst.bind(*p_13_m00_axi_arburst);
        p_13_m00_axi_arburst->set_sv_netview_offsetfromdp(21765144);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arlock.bind(*p_13_m00_axi_arlock);
        p_13_m00_axi_arlock->set_sv_netview_offsetfromdp(21765200);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arcache.bind(*p_13_m00_axi_arcache);
        p_13_m00_axi_arcache->set_sv_netview_offsetfromdp(21765256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m00_axi_arprot.bind(*p_13_m00_axi_arprot);
        p_13_m00_axi_arprot->set_sv_netview_offsetfromdp(21765312);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m00_axi_arqos.bind(*p_13_m00_axi_arqos);
        p_13_m00_axi_arqos->set_sv_netview_offsetfromdp(21765368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_aruser.bind(*p_13_m00_axi_aruser);
        p_13_m00_axi_aruser->set_sv_netview_offsetfromdp(21765424);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arvalid.bind(*p_13_m00_axi_arvalid);
        p_13_m00_axi_arvalid->set_sv_netview_offsetfromdp(21765480);
        xsim_sc_channel<0, bool > *p_13_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_arready.bind(*p_13_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_rid.bind(*p_13_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m00_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m00_axi_rdata.bind(*p_13_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m00_axi_rresp.bind(*p_13_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rlast.bind(*p_13_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m00_axi_ruser.bind(*p_13_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rvalid.bind(*p_13_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_rready.bind(*p_13_m00_axi_rready);
        p_13_m00_axi_rready->set_sv_netview_offsetfromdp(21765928);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aclk.bind(*p_13_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m00_axi_aresetn.bind(*p_13_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_awid.bind(*p_13_m02_axi_awid);
        p_13_m02_axi_awid->set_sv_netview_offsetfromdp(21766096);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m02_axi_awaddr.bind(*p_13_m02_axi_awaddr);
        p_13_m02_axi_awaddr->set_sv_netview_offsetfromdp(21766152);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m02_axi_awlen.bind(*p_13_m02_axi_awlen);
        p_13_m02_axi_awlen->set_sv_netview_offsetfromdp(21766208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_awsize.bind(*p_13_m02_axi_awsize);
        p_13_m02_axi_awsize->set_sv_netview_offsetfromdp(21766264);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_awburst.bind(*p_13_m02_axi_awburst);
        p_13_m02_axi_awburst->set_sv_netview_offsetfromdp(21766320);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awlock.bind(*p_13_m02_axi_awlock);
        p_13_m02_axi_awlock->set_sv_netview_offsetfromdp(21766376);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_awcache.bind(*p_13_m02_axi_awcache);
        p_13_m02_axi_awcache->set_sv_netview_offsetfromdp(21766432);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_awprot.bind(*p_13_m02_axi_awprot);
        p_13_m02_axi_awprot->set_sv_netview_offsetfromdp(21766488);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_awqos.bind(*p_13_m02_axi_awqos);
        p_13_m02_axi_awqos->set_sv_netview_offsetfromdp(21766544);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_awuser.bind(*p_13_m02_axi_awuser);
        p_13_m02_axi_awuser->set_sv_netview_offsetfromdp(21766600);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awvalid.bind(*p_13_m02_axi_awvalid);
        p_13_m02_axi_awvalid->set_sv_netview_offsetfromdp(21766656);
        xsim_sc_channel<0, bool > *p_13_m02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_awready.bind(*p_13_m02_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m02_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m02_axi_wdata.bind(*p_13_m02_axi_wdata);
        p_13_m02_axi_wdata->set_sv_netview_offsetfromdp(21766768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_wstrb.bind(*p_13_m02_axi_wstrb);
        p_13_m02_axi_wstrb->set_sv_netview_offsetfromdp(21766824);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wlast.bind(*p_13_m02_axi_wlast);
        p_13_m02_axi_wlast->set_sv_netview_offsetfromdp(21766880);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_wuser.bind(*p_13_m02_axi_wuser);
        p_13_m02_axi_wuser->set_sv_netview_offsetfromdp(21766936);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wvalid.bind(*p_13_m02_axi_wvalid);
        p_13_m02_axi_wvalid->set_sv_netview_offsetfromdp(21766992);
        xsim_sc_channel<0, bool > *p_13_m02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_wready.bind(*p_13_m02_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_bid.bind(*p_13_m02_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_bresp.bind(*p_13_m02_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_buser.bind(*p_13_m02_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_bvalid.bind(*p_13_m02_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_bready.bind(*p_13_m02_axi_bready);
        p_13_m02_axi_bready->set_sv_netview_offsetfromdp(21767328);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_arid.bind(*p_13_m02_axi_arid);
        p_13_m02_axi_arid->set_sv_netview_offsetfromdp(21767384);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m02_axi_araddr.bind(*p_13_m02_axi_araddr);
        p_13_m02_axi_araddr->set_sv_netview_offsetfromdp(21767440);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m02_axi_arlen.bind(*p_13_m02_axi_arlen);
        p_13_m02_axi_arlen->set_sv_netview_offsetfromdp(21767496);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_arsize.bind(*p_13_m02_axi_arsize);
        p_13_m02_axi_arsize->set_sv_netview_offsetfromdp(21767552);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_arburst.bind(*p_13_m02_axi_arburst);
        p_13_m02_axi_arburst->set_sv_netview_offsetfromdp(21767608);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arlock.bind(*p_13_m02_axi_arlock);
        p_13_m02_axi_arlock->set_sv_netview_offsetfromdp(21767664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_arcache.bind(*p_13_m02_axi_arcache);
        p_13_m02_axi_arcache->set_sv_netview_offsetfromdp(21767720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m02_axi_arprot.bind(*p_13_m02_axi_arprot);
        p_13_m02_axi_arprot->set_sv_netview_offsetfromdp(21767776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m02_axi_arqos.bind(*p_13_m02_axi_arqos);
        p_13_m02_axi_arqos->set_sv_netview_offsetfromdp(21767832);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_aruser.bind(*p_13_m02_axi_aruser);
        p_13_m02_axi_aruser->set_sv_netview_offsetfromdp(21767888);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arvalid.bind(*p_13_m02_axi_arvalid);
        p_13_m02_axi_arvalid->set_sv_netview_offsetfromdp(21767944);
        xsim_sc_channel<0, bool > *p_13_m02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_arready.bind(*p_13_m02_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_rid.bind(*p_13_m02_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m02_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m02_axi_rdata.bind(*p_13_m02_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m02_axi_rresp.bind(*p_13_m02_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rlast.bind(*p_13_m02_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m02_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m02_axi_ruser.bind(*p_13_m02_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rvalid.bind(*p_13_m02_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_rready.bind(*p_13_m02_axi_rready);
        p_13_m02_axi_rready->set_sv_netview_offsetfromdp(21768392);
        xsim_sc_channel<0, bool > *p_13_m02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_aclk.bind(*p_13_m02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m02_axi_aresetn.bind(*p_13_m02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_awid.bind(*p_13_m03_axi_awid);
        p_13_m03_axi_awid->set_sv_netview_offsetfromdp(21768560);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m03_axi_awaddr.bind(*p_13_m03_axi_awaddr);
        p_13_m03_axi_awaddr->set_sv_netview_offsetfromdp(21768616);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m03_axi_awlen.bind(*p_13_m03_axi_awlen);
        p_13_m03_axi_awlen->set_sv_netview_offsetfromdp(21768672);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_awsize.bind(*p_13_m03_axi_awsize);
        p_13_m03_axi_awsize->set_sv_netview_offsetfromdp(21768728);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_awburst.bind(*p_13_m03_axi_awburst);
        p_13_m03_axi_awburst->set_sv_netview_offsetfromdp(21768784);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awlock.bind(*p_13_m03_axi_awlock);
        p_13_m03_axi_awlock->set_sv_netview_offsetfromdp(21768840);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_awcache.bind(*p_13_m03_axi_awcache);
        p_13_m03_axi_awcache->set_sv_netview_offsetfromdp(21768896);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_awprot.bind(*p_13_m03_axi_awprot);
        p_13_m03_axi_awprot->set_sv_netview_offsetfromdp(21768952);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_awqos.bind(*p_13_m03_axi_awqos);
        p_13_m03_axi_awqos->set_sv_netview_offsetfromdp(21769008);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_awuser.bind(*p_13_m03_axi_awuser);
        p_13_m03_axi_awuser->set_sv_netview_offsetfromdp(21769064);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awvalid.bind(*p_13_m03_axi_awvalid);
        p_13_m03_axi_awvalid->set_sv_netview_offsetfromdp(21769120);
        xsim_sc_channel<0, bool > *p_13_m03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_awready.bind(*p_13_m03_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m03_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m03_axi_wdata.bind(*p_13_m03_axi_wdata);
        p_13_m03_axi_wdata->set_sv_netview_offsetfromdp(21769232);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_wstrb.bind(*p_13_m03_axi_wstrb);
        p_13_m03_axi_wstrb->set_sv_netview_offsetfromdp(21769288);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wlast.bind(*p_13_m03_axi_wlast);
        p_13_m03_axi_wlast->set_sv_netview_offsetfromdp(21769344);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_wuser.bind(*p_13_m03_axi_wuser);
        p_13_m03_axi_wuser->set_sv_netview_offsetfromdp(21769400);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wvalid.bind(*p_13_m03_axi_wvalid);
        p_13_m03_axi_wvalid->set_sv_netview_offsetfromdp(21769456);
        xsim_sc_channel<0, bool > *p_13_m03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_wready.bind(*p_13_m03_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_bid.bind(*p_13_m03_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_bresp.bind(*p_13_m03_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_buser.bind(*p_13_m03_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_bvalid.bind(*p_13_m03_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_bready.bind(*p_13_m03_axi_bready);
        p_13_m03_axi_bready->set_sv_netview_offsetfromdp(21769792);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_arid.bind(*p_13_m03_axi_arid);
        p_13_m03_axi_arid->set_sv_netview_offsetfromdp(21769848);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m03_axi_araddr.bind(*p_13_m03_axi_araddr);
        p_13_m03_axi_araddr->set_sv_netview_offsetfromdp(21769904);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m03_axi_arlen.bind(*p_13_m03_axi_arlen);
        p_13_m03_axi_arlen->set_sv_netview_offsetfromdp(21769960);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_arsize.bind(*p_13_m03_axi_arsize);
        p_13_m03_axi_arsize->set_sv_netview_offsetfromdp(21770016);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_arburst.bind(*p_13_m03_axi_arburst);
        p_13_m03_axi_arburst->set_sv_netview_offsetfromdp(21770072);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arlock.bind(*p_13_m03_axi_arlock);
        p_13_m03_axi_arlock->set_sv_netview_offsetfromdp(21770128);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_arcache.bind(*p_13_m03_axi_arcache);
        p_13_m03_axi_arcache->set_sv_netview_offsetfromdp(21770184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m03_axi_arprot.bind(*p_13_m03_axi_arprot);
        p_13_m03_axi_arprot->set_sv_netview_offsetfromdp(21770240);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m03_axi_arqos.bind(*p_13_m03_axi_arqos);
        p_13_m03_axi_arqos->set_sv_netview_offsetfromdp(21770296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_aruser.bind(*p_13_m03_axi_aruser);
        p_13_m03_axi_aruser->set_sv_netview_offsetfromdp(21770352);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arvalid.bind(*p_13_m03_axi_arvalid);
        p_13_m03_axi_arvalid->set_sv_netview_offsetfromdp(21770408);
        xsim_sc_channel<0, bool > *p_13_m03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_arready.bind(*p_13_m03_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_rid.bind(*p_13_m03_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m03_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m03_axi_rdata.bind(*p_13_m03_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m03_axi_rresp.bind(*p_13_m03_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rlast.bind(*p_13_m03_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m03_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m03_axi_ruser.bind(*p_13_m03_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rvalid.bind(*p_13_m03_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_rready.bind(*p_13_m03_axi_rready);
        p_13_m03_axi_rready->set_sv_netview_offsetfromdp(21770856);
        xsim_sc_channel<0, bool > *p_13_m03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_aclk.bind(*p_13_m03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m03_axi_aresetn.bind(*p_13_m03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_awid.bind(*p_13_m04_axi_awid);
        p_13_m04_axi_awid->set_sv_netview_offsetfromdp(21771024);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m04_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m04_axi_awaddr.bind(*p_13_m04_axi_awaddr);
        p_13_m04_axi_awaddr->set_sv_netview_offsetfromdp(21771080);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_awlen.bind(*p_13_m04_axi_awlen);
        p_13_m04_axi_awlen->set_sv_netview_offsetfromdp(21771136);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_awsize.bind(*p_13_m04_axi_awsize);
        p_13_m04_axi_awsize->set_sv_netview_offsetfromdp(21771192);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_awburst.bind(*p_13_m04_axi_awburst);
        p_13_m04_axi_awburst->set_sv_netview_offsetfromdp(21771248);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awlock.bind(*p_13_m04_axi_awlock);
        p_13_m04_axi_awlock->set_sv_netview_offsetfromdp(21771304);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_awcache.bind(*p_13_m04_axi_awcache);
        p_13_m04_axi_awcache->set_sv_netview_offsetfromdp(21771360);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_awprot.bind(*p_13_m04_axi_awprot);
        p_13_m04_axi_awprot->set_sv_netview_offsetfromdp(21771416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_awqos.bind(*p_13_m04_axi_awqos);
        p_13_m04_axi_awqos->set_sv_netview_offsetfromdp(21771472);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_awuser.bind(*p_13_m04_axi_awuser);
        p_13_m04_axi_awuser->set_sv_netview_offsetfromdp(21771528);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awvalid.bind(*p_13_m04_axi_awvalid);
        p_13_m04_axi_awvalid->set_sv_netview_offsetfromdp(21771584);
        xsim_sc_channel<0, bool > *p_13_m04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_awready.bind(*p_13_m04_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_awready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m04_axi_wdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m04_axi_wdata.bind(*p_13_m04_axi_wdata);
        p_13_m04_axi_wdata->set_sv_netview_offsetfromdp(21771696);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_wstrb = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_wstrb.bind(*p_13_m04_axi_wstrb);
        p_13_m04_axi_wstrb->set_sv_netview_offsetfromdp(21771752);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wlast.bind(*p_13_m04_axi_wlast);
        p_13_m04_axi_wlast->set_sv_netview_offsetfromdp(21771808);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_wuser.bind(*p_13_m04_axi_wuser);
        p_13_m04_axi_wuser->set_sv_netview_offsetfromdp(21771864);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wvalid.bind(*p_13_m04_axi_wvalid);
        p_13_m04_axi_wvalid->set_sv_netview_offsetfromdp(21771920);
        xsim_sc_channel<0, bool > *p_13_m04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_wready.bind(*p_13_m04_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_bid.bind(*p_13_m04_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_bresp.bind(*p_13_m04_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_buser.bind(*p_13_m04_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_bvalid.bind(*p_13_m04_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_bready.bind(*p_13_m04_axi_bready);
        p_13_m04_axi_bready->set_sv_netview_offsetfromdp(21772256);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_arid.bind(*p_13_m04_axi_arid);
        p_13_m04_axi_arid->set_sv_netview_offsetfromdp(21772312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m04_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m04_axi_araddr.bind(*p_13_m04_axi_araddr);
        p_13_m04_axi_araddr->set_sv_netview_offsetfromdp(21772368);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m04_axi_arlen.bind(*p_13_m04_axi_arlen);
        p_13_m04_axi_arlen->set_sv_netview_offsetfromdp(21772424);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_arsize.bind(*p_13_m04_axi_arsize);
        p_13_m04_axi_arsize->set_sv_netview_offsetfromdp(21772480);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_arburst.bind(*p_13_m04_axi_arburst);
        p_13_m04_axi_arburst->set_sv_netview_offsetfromdp(21772536);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arlock.bind(*p_13_m04_axi_arlock);
        p_13_m04_axi_arlock->set_sv_netview_offsetfromdp(21772592);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_arcache.bind(*p_13_m04_axi_arcache);
        p_13_m04_axi_arcache->set_sv_netview_offsetfromdp(21772648);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m04_axi_arprot.bind(*p_13_m04_axi_arprot);
        p_13_m04_axi_arprot->set_sv_netview_offsetfromdp(21772704);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m04_axi_arqos.bind(*p_13_m04_axi_arqos);
        p_13_m04_axi_arqos->set_sv_netview_offsetfromdp(21772760);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_aruser.bind(*p_13_m04_axi_aruser);
        p_13_m04_axi_aruser->set_sv_netview_offsetfromdp(21772816);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arvalid.bind(*p_13_m04_axi_arvalid);
        p_13_m04_axi_arvalid->set_sv_netview_offsetfromdp(21772872);
        xsim_sc_channel<0, bool > *p_13_m04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_arready.bind(*p_13_m04_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_rid.bind(*p_13_m04_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_rid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m04_axi_rdata = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m04_axi_rdata.bind(*p_13_m04_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m04_axi_rresp.bind(*p_13_m04_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rlast.bind(*p_13_m04_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m04_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m04_axi_ruser.bind(*p_13_m04_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rvalid.bind(*p_13_m04_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_rready.bind(*p_13_m04_axi_rready);
        p_13_m04_axi_rready->set_sv_netview_offsetfromdp(21773320);
        xsim_sc_channel<0, bool > *p_13_m04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_aclk.bind(*p_13_m04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m04_axi_aresetn.bind(*p_13_m04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m04_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_awid.bind(*p_13_m01_axi_awid);
        p_13_m01_axi_awid->set_sv_netview_offsetfromdp(21773488);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m01_axi_awaddr.bind(*p_13_m01_axi_awaddr);
        p_13_m01_axi_awaddr->set_sv_netview_offsetfromdp(21773544);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m01_axi_awlen.bind(*p_13_m01_axi_awlen);
        p_13_m01_axi_awlen->set_sv_netview_offsetfromdp(21773600);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_awsize.bind(*p_13_m01_axi_awsize);
        p_13_m01_axi_awsize->set_sv_netview_offsetfromdp(21773656);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_awburst.bind(*p_13_m01_axi_awburst);
        p_13_m01_axi_awburst->set_sv_netview_offsetfromdp(21773712);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awlock.bind(*p_13_m01_axi_awlock);
        p_13_m01_axi_awlock->set_sv_netview_offsetfromdp(21773768);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_awcache.bind(*p_13_m01_axi_awcache);
        p_13_m01_axi_awcache->set_sv_netview_offsetfromdp(21773824);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_awprot.bind(*p_13_m01_axi_awprot);
        p_13_m01_axi_awprot->set_sv_netview_offsetfromdp(21773880);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_awqos.bind(*p_13_m01_axi_awqos);
        p_13_m01_axi_awqos->set_sv_netview_offsetfromdp(21773936);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_awuser.bind(*p_13_m01_axi_awuser);
        p_13_m01_axi_awuser->set_sv_netview_offsetfromdp(21773992);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awvalid.bind(*p_13_m01_axi_awvalid);
        p_13_m01_axi_awvalid->set_sv_netview_offsetfromdp(21774048);
        xsim_sc_channel<0, bool > *p_13_m01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_awready.bind(*p_13_m01_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m01_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m01_axi_wdata.bind(*p_13_m01_axi_wdata);
        p_13_m01_axi_wdata->set_sv_netview_offsetfromdp(21774160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_wstrb.bind(*p_13_m01_axi_wstrb);
        p_13_m01_axi_wstrb->set_sv_netview_offsetfromdp(21774216);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wlast.bind(*p_13_m01_axi_wlast);
        p_13_m01_axi_wlast->set_sv_netview_offsetfromdp(21774272);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_wuser.bind(*p_13_m01_axi_wuser);
        p_13_m01_axi_wuser->set_sv_netview_offsetfromdp(21774328);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wvalid.bind(*p_13_m01_axi_wvalid);
        p_13_m01_axi_wvalid->set_sv_netview_offsetfromdp(21774384);
        xsim_sc_channel<0, bool > *p_13_m01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_wready.bind(*p_13_m01_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_bid.bind(*p_13_m01_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_bresp.bind(*p_13_m01_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_buser.bind(*p_13_m01_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_buser);
        xsim_sc_channel<0, bool > *p_13_m01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_bvalid.bind(*p_13_m01_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_bvalid);
        xsim_sc_channel<0, bool > *p_13_m01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_bready.bind(*p_13_m01_axi_bready);
        p_13_m01_axi_bready->set_sv_netview_offsetfromdp(21774720);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_arid.bind(*p_13_m01_axi_arid);
        p_13_m01_axi_arid->set_sv_netview_offsetfromdp(21774776);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_m01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->m01_axi_araddr.bind(*p_13_m01_axi_araddr);
        p_13_m01_axi_araddr->set_sv_netview_offsetfromdp(21774832);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_m01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->m01_axi_arlen.bind(*p_13_m01_axi_arlen);
        p_13_m01_axi_arlen->set_sv_netview_offsetfromdp(21774888);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_arsize.bind(*p_13_m01_axi_arsize);
        p_13_m01_axi_arsize->set_sv_netview_offsetfromdp(21774944);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_arburst.bind(*p_13_m01_axi_arburst);
        p_13_m01_axi_arburst->set_sv_netview_offsetfromdp(21775000);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arlock.bind(*p_13_m01_axi_arlock);
        p_13_m01_axi_arlock->set_sv_netview_offsetfromdp(21775056);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_arcache.bind(*p_13_m01_axi_arcache);
        p_13_m01_axi_arcache->set_sv_netview_offsetfromdp(21775112);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_m01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->m01_axi_arprot.bind(*p_13_m01_axi_arprot);
        p_13_m01_axi_arprot->set_sv_netview_offsetfromdp(21775168);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_m01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->m01_axi_arqos.bind(*p_13_m01_axi_arqos);
        p_13_m01_axi_arqos->set_sv_netview_offsetfromdp(21775224);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_aruser.bind(*p_13_m01_axi_aruser);
        p_13_m01_axi_aruser->set_sv_netview_offsetfromdp(21775280);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arvalid.bind(*p_13_m01_axi_arvalid);
        p_13_m01_axi_arvalid->set_sv_netview_offsetfromdp(21775336);
        xsim_sc_channel<0, bool > *p_13_m01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_arready.bind(*p_13_m01_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_rid.bind(*p_13_m01_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_13_m01_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_13->m01_axi_rdata.bind(*p_13_m01_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_m01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->m01_axi_rresp.bind(*p_13_m01_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_rresp);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rlast.bind(*p_13_m01_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_m01_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->m01_axi_ruser.bind(*p_13_m01_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_ruser);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rvalid.bind(*p_13_m01_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_rvalid);
        xsim_sc_channel<0, bool > *p_13_m01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_rready.bind(*p_13_m01_axi_rready);
        p_13_m01_axi_rready->set_sv_netview_offsetfromdp(21775784);
        xsim_sc_channel<0, bool > *p_13_m01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_aclk.bind(*p_13_m01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_m01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->m01_axi_aresetn.bind(*p_13_m01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_m01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_awid.bind(*p_13_s03_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_awaddr.bind(*p_13_s03_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s03_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s03_axi_awlen.bind(*p_13_s03_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_awsize.bind(*p_13_s03_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_awburst.bind(*p_13_s03_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awlock.bind(*p_13_s03_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awcache.bind(*p_13_s03_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_awprot.bind(*p_13_s03_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awregion.bind(*p_13_s03_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_awqos.bind(*p_13_s03_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awvalid.bind(*p_13_s03_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_awready.bind(*p_13_s03_axi_awready);
        p_13_s03_axi_awready->set_sv_netview_offsetfromdp(21776568);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s03_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s03_axi_wdata.bind(*p_13_s03_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_wstrb.bind(*p_13_s03_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wlast.bind(*p_13_s03_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wvalid.bind(*p_13_s03_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_wready.bind(*p_13_s03_axi_wready);
        p_13_s03_axi_wready->set_sv_netview_offsetfromdp(21776848);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_bid.bind(*p_13_s03_axi_bid);
        p_13_s03_axi_bid->set_sv_netview_offsetfromdp(21776904);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_bresp.bind(*p_13_s03_axi_bresp);
        p_13_s03_axi_bresp->set_sv_netview_offsetfromdp(21776960);
        xsim_sc_channel<0, bool > *p_13_s03_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_bvalid.bind(*p_13_s03_axi_bvalid);
        p_13_s03_axi_bvalid->set_sv_netview_offsetfromdp(21777016);
        xsim_sc_channel<0, bool > *p_13_s03_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_bready.bind(*p_13_s03_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_arid.bind(*p_13_s03_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s03_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s03_axi_araddr.bind(*p_13_s03_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s03_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s03_axi_arlen.bind(*p_13_s03_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_arsize.bind(*p_13_s03_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_arburst.bind(*p_13_s03_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arlock.bind(*p_13_s03_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arcache.bind(*p_13_s03_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s03_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s03_axi_arprot.bind(*p_13_s03_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arregion.bind(*p_13_s03_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s03_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s03_axi_arqos.bind(*p_13_s03_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arvalid.bind(*p_13_s03_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s03_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_arready.bind(*p_13_s03_axi_arready);
        p_13_s03_axi_arready->set_sv_netview_offsetfromdp(21777744);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s03_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s03_axi_rid.bind(*p_13_s03_axi_rid);
        p_13_s03_axi_rid->set_sv_netview_offsetfromdp(21777800);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s03_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s03_axi_rdata.bind(*p_13_s03_axi_rdata);
        p_13_s03_axi_rdata->set_sv_netview_offsetfromdp(21777856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s03_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s03_axi_rresp.bind(*p_13_s03_axi_rresp);
        p_13_s03_axi_rresp->set_sv_netview_offsetfromdp(21777912);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rlast.bind(*p_13_s03_axi_rlast);
        p_13_s03_axi_rlast->set_sv_netview_offsetfromdp(21777968);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rvalid.bind(*p_13_s03_axi_rvalid);
        p_13_s03_axi_rvalid->set_sv_netview_offsetfromdp(21778024);
        xsim_sc_channel<0, bool > *p_13_s03_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_rready.bind(*p_13_s03_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s03_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_aclk.bind(*p_13_s03_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s03_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s03_axi_aresetn.bind(*p_13_s03_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s03_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_awid.bind(*p_13_s01_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_awaddr.bind(*p_13_s01_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s01_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s01_axi_awlen.bind(*p_13_s01_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_awsize.bind(*p_13_s01_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_awburst.bind(*p_13_s01_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awlock.bind(*p_13_s01_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awcache.bind(*p_13_s01_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_awprot.bind(*p_13_s01_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awregion.bind(*p_13_s01_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_awqos.bind(*p_13_s01_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awvalid.bind(*p_13_s01_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_awready.bind(*p_13_s01_axi_awready);
        p_13_s01_axi_awready->set_sv_netview_offsetfromdp(21778864);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s01_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s01_axi_wdata.bind(*p_13_s01_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_wstrb.bind(*p_13_s01_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wlast.bind(*p_13_s01_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wvalid.bind(*p_13_s01_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_wready.bind(*p_13_s01_axi_wready);
        p_13_s01_axi_wready->set_sv_netview_offsetfromdp(21779144);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_bid.bind(*p_13_s01_axi_bid);
        p_13_s01_axi_bid->set_sv_netview_offsetfromdp(21779200);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_bresp.bind(*p_13_s01_axi_bresp);
        p_13_s01_axi_bresp->set_sv_netview_offsetfromdp(21779256);
        xsim_sc_channel<0, bool > *p_13_s01_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_bvalid.bind(*p_13_s01_axi_bvalid);
        p_13_s01_axi_bvalid->set_sv_netview_offsetfromdp(21779312);
        xsim_sc_channel<0, bool > *p_13_s01_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_bready.bind(*p_13_s01_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_arid.bind(*p_13_s01_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s01_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s01_axi_araddr.bind(*p_13_s01_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s01_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s01_axi_arlen.bind(*p_13_s01_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_arsize.bind(*p_13_s01_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_arburst.bind(*p_13_s01_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arlock.bind(*p_13_s01_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arcache.bind(*p_13_s01_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s01_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s01_axi_arprot.bind(*p_13_s01_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arregion.bind(*p_13_s01_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s01_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s01_axi_arqos.bind(*p_13_s01_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arvalid.bind(*p_13_s01_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s01_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_arready.bind(*p_13_s01_axi_arready);
        p_13_s01_axi_arready->set_sv_netview_offsetfromdp(21780040);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s01_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s01_axi_rid.bind(*p_13_s01_axi_rid);
        p_13_s01_axi_rid->set_sv_netview_offsetfromdp(21780096);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s01_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s01_axi_rdata.bind(*p_13_s01_axi_rdata);
        p_13_s01_axi_rdata->set_sv_netview_offsetfromdp(21780152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s01_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s01_axi_rresp.bind(*p_13_s01_axi_rresp);
        p_13_s01_axi_rresp->set_sv_netview_offsetfromdp(21780208);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rlast.bind(*p_13_s01_axi_rlast);
        p_13_s01_axi_rlast->set_sv_netview_offsetfromdp(21780264);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rvalid.bind(*p_13_s01_axi_rvalid);
        p_13_s01_axi_rvalid->set_sv_netview_offsetfromdp(21780320);
        xsim_sc_channel<0, bool > *p_13_s01_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_rready.bind(*p_13_s01_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s01_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_aclk.bind(*p_13_s01_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s01_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s01_axi_aresetn.bind(*p_13_s01_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s01_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_awid.bind(*p_13_s02_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_awaddr.bind(*p_13_s02_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s02_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s02_axi_awlen.bind(*p_13_s02_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_awsize.bind(*p_13_s02_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_awburst.bind(*p_13_s02_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awlock.bind(*p_13_s02_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awcache.bind(*p_13_s02_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_awprot.bind(*p_13_s02_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awregion.bind(*p_13_s02_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_awqos.bind(*p_13_s02_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awvalid.bind(*p_13_s02_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_awready.bind(*p_13_s02_axi_awready);
        p_13_s02_axi_awready->set_sv_netview_offsetfromdp(21781160);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s02_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s02_axi_wdata.bind(*p_13_s02_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_wstrb.bind(*p_13_s02_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wlast.bind(*p_13_s02_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wvalid.bind(*p_13_s02_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_wready.bind(*p_13_s02_axi_wready);
        p_13_s02_axi_wready->set_sv_netview_offsetfromdp(21781440);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_bid.bind(*p_13_s02_axi_bid);
        p_13_s02_axi_bid->set_sv_netview_offsetfromdp(21781496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_bresp.bind(*p_13_s02_axi_bresp);
        p_13_s02_axi_bresp->set_sv_netview_offsetfromdp(21781552);
        xsim_sc_channel<0, bool > *p_13_s02_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_bvalid.bind(*p_13_s02_axi_bvalid);
        p_13_s02_axi_bvalid->set_sv_netview_offsetfromdp(21781608);
        xsim_sc_channel<0, bool > *p_13_s02_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_bready.bind(*p_13_s02_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_arid.bind(*p_13_s02_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s02_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s02_axi_araddr.bind(*p_13_s02_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s02_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s02_axi_arlen.bind(*p_13_s02_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_arsize.bind(*p_13_s02_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_arburst.bind(*p_13_s02_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arlock.bind(*p_13_s02_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arcache.bind(*p_13_s02_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s02_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s02_axi_arprot.bind(*p_13_s02_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arregion.bind(*p_13_s02_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s02_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s02_axi_arqos.bind(*p_13_s02_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arvalid.bind(*p_13_s02_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s02_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_arready.bind(*p_13_s02_axi_arready);
        p_13_s02_axi_arready->set_sv_netview_offsetfromdp(21782336);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s02_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s02_axi_rid.bind(*p_13_s02_axi_rid);
        p_13_s02_axi_rid->set_sv_netview_offsetfromdp(21782392);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s02_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s02_axi_rdata.bind(*p_13_s02_axi_rdata);
        p_13_s02_axi_rdata->set_sv_netview_offsetfromdp(21782448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s02_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s02_axi_rresp.bind(*p_13_s02_axi_rresp);
        p_13_s02_axi_rresp->set_sv_netview_offsetfromdp(21782504);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rlast.bind(*p_13_s02_axi_rlast);
        p_13_s02_axi_rlast->set_sv_netview_offsetfromdp(21782560);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rvalid.bind(*p_13_s02_axi_rvalid);
        p_13_s02_axi_rvalid->set_sv_netview_offsetfromdp(21782616);
        xsim_sc_channel<0, bool > *p_13_s02_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_rready.bind(*p_13_s02_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s02_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_aclk.bind(*p_13_s02_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s02_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s02_axi_aresetn.bind(*p_13_s02_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s02_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_awid.bind(*p_13_s04_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_awaddr.bind(*p_13_s04_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s04_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s04_axi_awlen.bind(*p_13_s04_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_awsize.bind(*p_13_s04_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_awburst.bind(*p_13_s04_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awburst);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awlock.bind(*p_13_s04_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awcache.bind(*p_13_s04_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_awprot.bind(*p_13_s04_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awregion.bind(*p_13_s04_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_awqos.bind(*p_13_s04_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awqos);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awvalid.bind(*p_13_s04_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_awvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_awready.bind(*p_13_s04_axi_awready);
        p_13_s04_axi_awready->set_sv_netview_offsetfromdp(21783456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s04_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s04_axi_wdata.bind(*p_13_s04_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_wstrb.bind(*p_13_s04_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_wstrb);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wlast.bind(*p_13_s04_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_wlast);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wvalid.bind(*p_13_s04_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_wvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_wready.bind(*p_13_s04_axi_wready);
        p_13_s04_axi_wready->set_sv_netview_offsetfromdp(21783736);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_bid.bind(*p_13_s04_axi_bid);
        p_13_s04_axi_bid->set_sv_netview_offsetfromdp(21783792);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_bresp.bind(*p_13_s04_axi_bresp);
        p_13_s04_axi_bresp->set_sv_netview_offsetfromdp(21783848);
        xsim_sc_channel<0, bool > *p_13_s04_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_bvalid.bind(*p_13_s04_axi_bvalid);
        p_13_s04_axi_bvalid->set_sv_netview_offsetfromdp(21783904);
        xsim_sc_channel<0, bool > *p_13_s04_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_bready.bind(*p_13_s04_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_arid.bind(*p_13_s04_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arid);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_13_s04_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_13->s04_axi_araddr.bind(*p_13_s04_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_13_s04_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_13->s04_axi_arlen.bind(*p_13_s04_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_arsize.bind(*p_13_s04_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_arburst.bind(*p_13_s04_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arburst);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arlock.bind(*p_13_s04_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arcache.bind(*p_13_s04_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_13_s04_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_13->s04_axi_arprot.bind(*p_13_s04_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arregion.bind(*p_13_s04_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_13_s04_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_13->s04_axi_arqos.bind(*p_13_s04_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arqos);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arvalid.bind(*p_13_s04_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_arvalid);
        xsim_sc_channel<0, bool > *p_13_s04_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_arready.bind(*p_13_s04_axi_arready);
        p_13_s04_axi_arready->set_sv_netview_offsetfromdp(21784632);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_13_s04_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_13->s04_axi_rid.bind(*p_13_s04_axi_rid);
        p_13_s04_axi_rid->set_sv_netview_offsetfromdp(21784688);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_13_s04_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_13->s04_axi_rdata.bind(*p_13_s04_axi_rdata);
        p_13_s04_axi_rdata->set_sv_netview_offsetfromdp(21784744);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_13_s04_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_13->s04_axi_rresp.bind(*p_13_s04_axi_rresp);
        p_13_s04_axi_rresp->set_sv_netview_offsetfromdp(21784800);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rlast.bind(*p_13_s04_axi_rlast);
        p_13_s04_axi_rlast->set_sv_netview_offsetfromdp(21784856);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rvalid.bind(*p_13_s04_axi_rvalid);
        p_13_s04_axi_rvalid->set_sv_netview_offsetfromdp(21784912);
        xsim_sc_channel<0, bool > *p_13_s04_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_rready.bind(*p_13_s04_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_rready);
        xsim_sc_channel<0, bool > *p_13_s04_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_aclk.bind(*p_13_s04_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_aclk);
        xsim_sc_channel<0, bool > *p_13_s04_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_13->s04_axi_aresetn.bind(*p_13_s04_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_13_s04_axi_aresetn);
        sc_inst_14 = new emu_sci(".emu_wrapper.emu_i.emu_sci_inst");
        sc_inst_14->xsim_set_dbg_index(23);
        sc_inst_15 = new emu_sim_embedded_scheduler_sw_0_0(".emu_wrapper.emu_i.static_region.embedded_schedular.sim_embedded_scheduler_sw_0");
        sc_inst_15->xsim_set_dbg_index(1544);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_saxi_lite_cq_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->saxi_lite_cq_awaddr.bind(*p_15_saxi_lite_cq_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_awaddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_saxi_lite_cq_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->saxi_lite_cq_awprot.bind(*p_15_saxi_lite_cq_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_awprot);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_awvalid.bind(*p_15_saxi_lite_cq_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_awvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_awready.bind(*p_15_saxi_lite_cq_awready);
        p_15_saxi_lite_cq_awready->set_sv_netview_offsetfromdp(23903632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_saxi_lite_cq_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->saxi_lite_cq_wdata.bind(*p_15_saxi_lite_cq_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_saxi_lite_cq_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->saxi_lite_cq_wstrb.bind(*p_15_saxi_lite_cq_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_wstrb);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_wvalid.bind(*p_15_saxi_lite_cq_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_wvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_wready.bind(*p_15_saxi_lite_cq_wready);
        p_15_saxi_lite_cq_wready->set_sv_netview_offsetfromdp(23903856);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_saxi_lite_cq_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->saxi_lite_cq_bresp.bind(*p_15_saxi_lite_cq_bresp);
        p_15_saxi_lite_cq_bresp->set_sv_netview_offsetfromdp(23903912);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_bvalid.bind(*p_15_saxi_lite_cq_bvalid);
        p_15_saxi_lite_cq_bvalid->set_sv_netview_offsetfromdp(23903968);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_bready.bind(*p_15_saxi_lite_cq_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_saxi_lite_cq_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->saxi_lite_cq_araddr.bind(*p_15_saxi_lite_cq_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_araddr);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_saxi_lite_cq_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->saxi_lite_cq_arprot.bind(*p_15_saxi_lite_cq_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_arprot);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_arvalid.bind(*p_15_saxi_lite_cq_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_arvalid);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_arready.bind(*p_15_saxi_lite_cq_arready);
        p_15_saxi_lite_cq_arready->set_sv_netview_offsetfromdp(23904248);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_saxi_lite_cq_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->saxi_lite_cq_rdata.bind(*p_15_saxi_lite_cq_rdata);
        p_15_saxi_lite_cq_rdata->set_sv_netview_offsetfromdp(23904304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_saxi_lite_cq_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->saxi_lite_cq_rresp.bind(*p_15_saxi_lite_cq_rresp);
        p_15_saxi_lite_cq_rresp->set_sv_netview_offsetfromdp(23904360);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_rvalid.bind(*p_15_saxi_lite_cq_rvalid);
        p_15_saxi_lite_cq_rvalid->set_sv_netview_offsetfromdp(23904416);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_rready.bind(*p_15_saxi_lite_cq_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_rready);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_aclk.bind(*p_15_saxi_lite_cq_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_aclk);
        xsim_sc_channel<0, bool > *p_15_saxi_lite_cq_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->saxi_lite_cq_aresetn.bind(*p_15_saxi_lite_cq_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_saxi_lite_cq_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_maxi_lite_mb_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->maxi_lite_mb_awaddr.bind(*p_15_maxi_lite_mb_awaddr);
        p_15_maxi_lite_mb_awaddr->set_sv_netview_offsetfromdp(23904640);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_maxi_lite_mb_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->maxi_lite_mb_awprot.bind(*p_15_maxi_lite_mb_awprot);
        p_15_maxi_lite_mb_awprot->set_sv_netview_offsetfromdp(23904696);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_awvalid.bind(*p_15_maxi_lite_mb_awvalid);
        p_15_maxi_lite_mb_awvalid->set_sv_netview_offsetfromdp(23904752);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_awready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_awready.bind(*p_15_maxi_lite_mb_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_maxi_lite_mb_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->maxi_lite_mb_wdata.bind(*p_15_maxi_lite_mb_wdata);
        p_15_maxi_lite_mb_wdata->set_sv_netview_offsetfromdp(23904864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_15_maxi_lite_mb_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_15->maxi_lite_mb_wstrb.bind(*p_15_maxi_lite_mb_wstrb);
        p_15_maxi_lite_mb_wstrb->set_sv_netview_offsetfromdp(23904920);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_wvalid.bind(*p_15_maxi_lite_mb_wvalid);
        p_15_maxi_lite_mb_wvalid->set_sv_netview_offsetfromdp(23904976);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_wready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_wready.bind(*p_15_maxi_lite_mb_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_maxi_lite_mb_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->maxi_lite_mb_bresp.bind(*p_15_maxi_lite_mb_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_bresp);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_bvalid.bind(*p_15_maxi_lite_mb_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_bvalid);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_bready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_bready.bind(*p_15_maxi_lite_mb_bready);
        p_15_maxi_lite_mb_bready->set_sv_netview_offsetfromdp(23905200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_15_maxi_lite_mb_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_15->maxi_lite_mb_araddr.bind(*p_15_maxi_lite_mb_araddr);
        p_15_maxi_lite_mb_araddr->set_sv_netview_offsetfromdp(23905256);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_15_maxi_lite_mb_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_15->maxi_lite_mb_arprot.bind(*p_15_maxi_lite_mb_arprot);
        p_15_maxi_lite_mb_arprot->set_sv_netview_offsetfromdp(23905312);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_arvalid.bind(*p_15_maxi_lite_mb_arvalid);
        p_15_maxi_lite_mb_arvalid->set_sv_netview_offsetfromdp(23905368);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_arready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_arready.bind(*p_15_maxi_lite_mb_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_15_maxi_lite_mb_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_15->maxi_lite_mb_rdata.bind(*p_15_maxi_lite_mb_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_15_maxi_lite_mb_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_15->maxi_lite_mb_rresp.bind(*p_15_maxi_lite_mb_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_rresp);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_rvalid.bind(*p_15_maxi_lite_mb_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_rvalid);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_rready = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_rready.bind(*p_15_maxi_lite_mb_rready);
        p_15_maxi_lite_mb_rready->set_sv_netview_offsetfromdp(23905648);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_aclk.bind(*p_15_maxi_lite_mb_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_aclk);
        xsim_sc_channel<0, bool > *p_15_maxi_lite_mb_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_15->maxi_lite_mb_aresetn.bind(*p_15_maxi_lite_mb_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_15_maxi_lite_mb_aresetn);
        xsim_sc_channel<0, bool > *p_15_irq = new xsim_sc_channel<0, bool >();
        sc_inst_15->irq.bind(*p_15_irq);
        (*_glb_hdl_sc_channel_map).push_back(p_15_irq);
        sc_inst_16 = new emu_icn_pass_0_0(".emu_wrapper.emu_i.static_region.icn_pass_0");
        sc_inst_16->xsim_set_dbg_index(291);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_awaddr.bind(*p_16_s00_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_awlen.bind(*p_16_s00_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awsize.bind(*p_16_s00_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_awburst.bind(*p_16_s00_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awlock.bind(*p_16_s00_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awcache.bind(*p_16_s00_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_awprot.bind(*p_16_s00_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awregion.bind(*p_16_s00_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_awqos.bind(*p_16_s00_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awvalid.bind(*p_16_s00_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_awvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_awready.bind(*p_16_s00_axi_awready);
        p_16_s00_axi_awready->set_sv_netview_offsetfromdp(23944616);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s00_axi_wdata.bind(*p_16_s00_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_wstrb.bind(*p_16_s00_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wstrb);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wlast.bind(*p_16_s00_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wlast);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wvalid.bind(*p_16_s00_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_wvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_wready.bind(*p_16_s00_axi_wready);
        p_16_s00_axi_wready->set_sv_netview_offsetfromdp(23944896);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_bresp.bind(*p_16_s00_axi_bresp);
        p_16_s00_axi_bresp->set_sv_netview_offsetfromdp(23944952);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bvalid.bind(*p_16_s00_axi_bvalid);
        p_16_s00_axi_bvalid->set_sv_netview_offsetfromdp(23945008);
        xsim_sc_channel<0, bool > *p_16_s00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_bready.bind(*p_16_s00_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_bready);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_s00_axi_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->s00_axi_araddr.bind(*p_16_s00_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_s00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->s00_axi_arlen.bind(*p_16_s00_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arsize.bind(*p_16_s00_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_arburst.bind(*p_16_s00_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arburst);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arlock.bind(*p_16_s00_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arcache.bind(*p_16_s00_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_s00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->s00_axi_arprot.bind(*p_16_s00_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arregion.bind(*p_16_s00_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_s00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->s00_axi_arqos.bind(*p_16_s00_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arqos);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arvalid.bind(*p_16_s00_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_arvalid);
        xsim_sc_channel<0, bool > *p_16_s00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_arready.bind(*p_16_s00_axi_arready);
        p_16_s00_axi_arready->set_sv_netview_offsetfromdp(23945680);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_s00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->s00_axi_rdata.bind(*p_16_s00_axi_rdata);
        p_16_s00_axi_rdata->set_sv_netview_offsetfromdp(23945736);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_s00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->s00_axi_rresp.bind(*p_16_s00_axi_rresp);
        p_16_s00_axi_rresp->set_sv_netview_offsetfromdp(23945792);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rlast.bind(*p_16_s00_axi_rlast);
        p_16_s00_axi_rlast->set_sv_netview_offsetfromdp(23945848);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rvalid.bind(*p_16_s00_axi_rvalid);
        p_16_s00_axi_rvalid->set_sv_netview_offsetfromdp(23945904);
        xsim_sc_channel<0, bool > *p_16_s00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_rready.bind(*p_16_s00_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_rready);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aclk.bind(*p_16_s00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_s00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->s00_axi_aresetn.bind(*p_16_s00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_s00_axi_aresetn);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awid.bind(*p_16_m00_axi_awid);
        p_16_m00_axi_awid->set_sv_netview_offsetfromdp(23946128);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_16_m00_axi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_16->m00_axi_awaddr.bind(*p_16_m00_axi_awaddr);
        p_16_m00_axi_awaddr->set_sv_netview_offsetfromdp(23946184);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_awlen.bind(*p_16_m00_axi_awlen);
        p_16_m00_axi_awlen->set_sv_netview_offsetfromdp(23946240);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awsize.bind(*p_16_m00_axi_awsize);
        p_16_m00_axi_awsize->set_sv_netview_offsetfromdp(23946296);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_awburst.bind(*p_16_m00_axi_awburst);
        p_16_m00_axi_awburst->set_sv_netview_offsetfromdp(23946352);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awlock.bind(*p_16_m00_axi_awlock);
        p_16_m00_axi_awlock->set_sv_netview_offsetfromdp(23946408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awcache.bind(*p_16_m00_axi_awcache);
        p_16_m00_axi_awcache->set_sv_netview_offsetfromdp(23946464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_awprot.bind(*p_16_m00_axi_awprot);
        p_16_m00_axi_awprot->set_sv_netview_offsetfromdp(23946520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_awqos.bind(*p_16_m00_axi_awqos);
        p_16_m00_axi_awqos->set_sv_netview_offsetfromdp(23946576);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_awuser.bind(*p_16_m00_axi_awuser);
        p_16_m00_axi_awuser->set_sv_netview_offsetfromdp(23946632);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awvalid.bind(*p_16_m00_axi_awvalid);
        p_16_m00_axi_awvalid->set_sv_netview_offsetfromdp(23946688);
        xsim_sc_channel<0, bool > *p_16_m00_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_awready.bind(*p_16_m00_axi_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_awready);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m00_axi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m00_axi_wdata.bind(*p_16_m00_axi_wdata);
        p_16_m00_axi_wdata->set_sv_netview_offsetfromdp(23946800);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_16_m00_axi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_16->m00_axi_wstrb.bind(*p_16_m00_axi_wstrb);
        p_16_m00_axi_wstrb->set_sv_netview_offsetfromdp(23946856);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wlast.bind(*p_16_m00_axi_wlast);
        p_16_m00_axi_wlast->set_sv_netview_offsetfromdp(23946912);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_wuser.bind(*p_16_m00_axi_wuser);
        p_16_m00_axi_wuser->set_sv_netview_offsetfromdp(23946968);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wvalid.bind(*p_16_m00_axi_wvalid);
        p_16_m00_axi_wvalid->set_sv_netview_offsetfromdp(23947024);
        xsim_sc_channel<0, bool > *p_16_m00_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_wready.bind(*p_16_m00_axi_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_bid.bind(*p_16_m00_axi_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_bresp.bind(*p_16_m00_axi_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_buser.bind(*p_16_m00_axi_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_buser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bvalid.bind(*p_16_m00_axi_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_bvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_bready.bind(*p_16_m00_axi_bready);
        p_16_m00_axi_bready->set_sv_netview_offsetfromdp(23947360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_arid.bind(*p_16_m00_axi_arid);
        p_16_m00_axi_arid->set_sv_netview_offsetfromdp(23947416);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_16_m00_axi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_16->m00_axi_araddr.bind(*p_16_m00_axi_araddr);
        p_16_m00_axi_araddr->set_sv_netview_offsetfromdp(23947472);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_16_m00_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_16->m00_axi_arlen.bind(*p_16_m00_axi_arlen);
        p_16_m00_axi_arlen->set_sv_netview_offsetfromdp(23947528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arsize.bind(*p_16_m00_axi_arsize);
        p_16_m00_axi_arsize->set_sv_netview_offsetfromdp(23947584);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_arburst.bind(*p_16_m00_axi_arburst);
        p_16_m00_axi_arburst->set_sv_netview_offsetfromdp(23947640);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arlock.bind(*p_16_m00_axi_arlock);
        p_16_m00_axi_arlock->set_sv_netview_offsetfromdp(23947696);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arcache.bind(*p_16_m00_axi_arcache);
        p_16_m00_axi_arcache->set_sv_netview_offsetfromdp(23947752);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_16_m00_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_16->m00_axi_arprot.bind(*p_16_m00_axi_arprot);
        p_16_m00_axi_arprot->set_sv_netview_offsetfromdp(23947808);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_16_m00_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_16->m00_axi_arqos.bind(*p_16_m00_axi_arqos);
        p_16_m00_axi_arqos->set_sv_netview_offsetfromdp(23947864);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_aruser.bind(*p_16_m00_axi_aruser);
        p_16_m00_axi_aruser->set_sv_netview_offsetfromdp(23947920);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arvalid.bind(*p_16_m00_axi_arvalid);
        p_16_m00_axi_arvalid->set_sv_netview_offsetfromdp(23947976);
        xsim_sc_channel<0, bool > *p_16_m00_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_arready.bind(*p_16_m00_axi_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_rid.bind(*p_16_m00_axi_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rid);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_16_m00_axi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_16->m00_axi_rdata.bind(*p_16_m00_axi_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_16_m00_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_16->m00_axi_rresp.bind(*p_16_m00_axi_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rresp);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rlast.bind(*p_16_m00_axi_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_16_m00_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_16->m00_axi_ruser.bind(*p_16_m00_axi_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_ruser);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rvalid.bind(*p_16_m00_axi_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_rvalid);
        xsim_sc_channel<0, bool > *p_16_m00_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_rready.bind(*p_16_m00_axi_rready);
        p_16_m00_axi_rready->set_sv_netview_offsetfromdp(23948424);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aclk.bind(*p_16_m00_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aclk);
        xsim_sc_channel<0, bool > *p_16_m00_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_16->m00_axi_aresetn.bind(*p_16_m00_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_16_m00_axi_aresetn);
        sc_inst_17 = new emu_sim_copy_kernel_0_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_0");
        sc_inst_17->xsim_set_dbg_index(293);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_AWADDR.bind(*p_17_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWVALID.bind(*p_17_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_AWREADY.bind(*p_17_s_axi_control_AWREADY);
        p_17_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(23994928);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_WDATA.bind(*p_17_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->s_axi_control_WSTRB.bind(*p_17_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WVALID.bind(*p_17_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_WREADY.bind(*p_17_s_axi_control_WREADY);
        p_17_s_axi_control_WREADY->set_sv_netview_offsetfromdp(23995152);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_BRESP.bind(*p_17_s_axi_control_BRESP);
        p_17_s_axi_control_BRESP->set_sv_netview_offsetfromdp(23995208);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BVALID.bind(*p_17_s_axi_control_BVALID);
        p_17_s_axi_control_BVALID->set_sv_netview_offsetfromdp(23995264);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_BREADY.bind(*p_17_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_17_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_17->s_axi_control_ARADDR.bind(*p_17_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARVALID.bind(*p_17_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_ARREADY.bind(*p_17_s_axi_control_ARREADY);
        p_17_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(23995488);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_17_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_17->s_axi_control_RDATA.bind(*p_17_s_axi_control_RDATA);
        p_17_s_axi_control_RDATA->set_sv_netview_offsetfromdp(23995544);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->s_axi_control_RRESP.bind(*p_17_s_axi_control_RRESP);
        p_17_s_axi_control_RRESP->set_sv_netview_offsetfromdp(23995600);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RVALID.bind(*p_17_s_axi_control_RVALID);
        p_17_s_axi_control_RVALID->set_sv_netview_offsetfromdp(23995656);
        xsim_sc_channel<0, bool > *p_17_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->s_axi_control_RREADY.bind(*p_17_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_17_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_clk.bind(*p_17_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_17_ap_clk);
        xsim_sc_channel<0, bool > *p_17_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_17->ap_rst_n.bind(*p_17_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_17_ap_rst_n);
        xsim_sc_channel<0, bool > *p_17_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_17->interrupt.bind(*p_17_interrupt);
        p_17_interrupt->set_sv_netview_offsetfromdp(23995880);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_AWADDR.bind(*p_17_m_axi_gmem_AWADDR);
        p_17_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(23995936);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_AWLEN.bind(*p_17_m_axi_gmem_AWLEN);
        p_17_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(23995992);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWSIZE.bind(*p_17_m_axi_gmem_AWSIZE);
        p_17_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(23996048);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_AWBURST.bind(*p_17_m_axi_gmem_AWBURST);
        p_17_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(23996104);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_AWLOCK.bind(*p_17_m_axi_gmem_AWLOCK);
        p_17_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(23996160);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWREGION.bind(*p_17_m_axi_gmem_AWREGION);
        p_17_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(23996216);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWCACHE.bind(*p_17_m_axi_gmem_AWCACHE);
        p_17_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(23996272);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_AWPROT.bind(*p_17_m_axi_gmem_AWPROT);
        p_17_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(23996328);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_AWQOS.bind(*p_17_m_axi_gmem_AWQOS);
        p_17_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(23996384);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWVALID.bind(*p_17_m_axi_gmem_AWVALID);
        p_17_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(23996440);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_AWREADY.bind(*p_17_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_WDATA.bind(*p_17_m_axi_gmem_WDATA);
        p_17_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(23996552);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_WSTRB.bind(*p_17_m_axi_gmem_WSTRB);
        p_17_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(23996608);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WLAST.bind(*p_17_m_axi_gmem_WLAST);
        p_17_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(23996664);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WVALID.bind(*p_17_m_axi_gmem_WVALID);
        p_17_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(23996720);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_WREADY.bind(*p_17_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_BRESP.bind(*p_17_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BVALID.bind(*p_17_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_BREADY.bind(*p_17_m_axi_gmem_BREADY);
        p_17_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(23996944);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_17_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_17->m_axi_gmem_ARADDR.bind(*p_17_m_axi_gmem_ARADDR);
        p_17_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(23997000);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_17_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_17->m_axi_gmem_ARLEN.bind(*p_17_m_axi_gmem_ARLEN);
        p_17_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(23997056);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARSIZE.bind(*p_17_m_axi_gmem_ARSIZE);
        p_17_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(23997112);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_ARBURST.bind(*p_17_m_axi_gmem_ARBURST);
        p_17_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(23997168);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_17_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_17->m_axi_gmem_ARLOCK.bind(*p_17_m_axi_gmem_ARLOCK);
        p_17_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(23997224);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARREGION.bind(*p_17_m_axi_gmem_ARREGION);
        p_17_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(23997280);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARCACHE.bind(*p_17_m_axi_gmem_ARCACHE);
        p_17_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(23997336);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_17_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_17->m_axi_gmem_ARPROT.bind(*p_17_m_axi_gmem_ARPROT);
        p_17_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(23997392);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_17_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_17->m_axi_gmem_ARQOS.bind(*p_17_m_axi_gmem_ARQOS);
        p_17_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(23997448);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARVALID.bind(*p_17_m_axi_gmem_ARVALID);
        p_17_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(23997504);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_ARREADY.bind(*p_17_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_17_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_17->m_axi_gmem_RDATA.bind(*p_17_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_17_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_17->m_axi_gmem_RRESP.bind(*p_17_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RLAST.bind(*p_17_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RVALID.bind(*p_17_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_17_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_17_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_17->m_axi_gmem_RREADY.bind(*p_17_m_axi_gmem_RREADY);
        p_17_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(23997840);
        sc_inst_18 = new emu_sim_copy_kernel_1_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_1");
        sc_inst_18->xsim_set_dbg_index(294);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_AWADDR.bind(*p_18_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWVALID.bind(*p_18_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_AWREADY.bind(*p_18_s_axi_control_AWREADY);
        p_18_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(23998056);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_WDATA.bind(*p_18_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->s_axi_control_WSTRB.bind(*p_18_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WVALID.bind(*p_18_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_WREADY.bind(*p_18_s_axi_control_WREADY);
        p_18_s_axi_control_WREADY->set_sv_netview_offsetfromdp(23998280);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_BRESP.bind(*p_18_s_axi_control_BRESP);
        p_18_s_axi_control_BRESP->set_sv_netview_offsetfromdp(23998336);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BVALID.bind(*p_18_s_axi_control_BVALID);
        p_18_s_axi_control_BVALID->set_sv_netview_offsetfromdp(23998392);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_BREADY.bind(*p_18_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_18_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_18->s_axi_control_ARADDR.bind(*p_18_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARVALID.bind(*p_18_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_ARREADY.bind(*p_18_s_axi_control_ARREADY);
        p_18_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(23998616);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_18_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_18->s_axi_control_RDATA.bind(*p_18_s_axi_control_RDATA);
        p_18_s_axi_control_RDATA->set_sv_netview_offsetfromdp(23998672);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->s_axi_control_RRESP.bind(*p_18_s_axi_control_RRESP);
        p_18_s_axi_control_RRESP->set_sv_netview_offsetfromdp(23998728);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RVALID.bind(*p_18_s_axi_control_RVALID);
        p_18_s_axi_control_RVALID->set_sv_netview_offsetfromdp(23998784);
        xsim_sc_channel<0, bool > *p_18_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->s_axi_control_RREADY.bind(*p_18_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_18_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_clk.bind(*p_18_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_clk);
        xsim_sc_channel<0, bool > *p_18_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_18->ap_rst_n.bind(*p_18_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_18_ap_rst_n);
        xsim_sc_channel<0, bool > *p_18_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_18->interrupt.bind(*p_18_interrupt);
        p_18_interrupt->set_sv_netview_offsetfromdp(23999008);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_AWADDR.bind(*p_18_m_axi_gmem_AWADDR);
        p_18_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(23999064);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_AWLEN.bind(*p_18_m_axi_gmem_AWLEN);
        p_18_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(23999120);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWSIZE.bind(*p_18_m_axi_gmem_AWSIZE);
        p_18_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(23999176);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_AWBURST.bind(*p_18_m_axi_gmem_AWBURST);
        p_18_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(23999232);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_AWLOCK.bind(*p_18_m_axi_gmem_AWLOCK);
        p_18_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(23999288);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWREGION.bind(*p_18_m_axi_gmem_AWREGION);
        p_18_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(23999344);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWCACHE.bind(*p_18_m_axi_gmem_AWCACHE);
        p_18_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(23999400);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_AWPROT.bind(*p_18_m_axi_gmem_AWPROT);
        p_18_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(23999456);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_AWQOS.bind(*p_18_m_axi_gmem_AWQOS);
        p_18_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(23999512);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWVALID.bind(*p_18_m_axi_gmem_AWVALID);
        p_18_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(23999568);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_AWREADY.bind(*p_18_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_WDATA.bind(*p_18_m_axi_gmem_WDATA);
        p_18_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(23999680);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_WSTRB.bind(*p_18_m_axi_gmem_WSTRB);
        p_18_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(23999736);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WLAST.bind(*p_18_m_axi_gmem_WLAST);
        p_18_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(23999792);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WVALID.bind(*p_18_m_axi_gmem_WVALID);
        p_18_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(23999848);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_WREADY.bind(*p_18_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_BRESP.bind(*p_18_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BVALID.bind(*p_18_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_BREADY.bind(*p_18_m_axi_gmem_BREADY);
        p_18_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(24000072);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_18_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_18->m_axi_gmem_ARADDR.bind(*p_18_m_axi_gmem_ARADDR);
        p_18_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(24000128);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_18_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_18->m_axi_gmem_ARLEN.bind(*p_18_m_axi_gmem_ARLEN);
        p_18_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(24000184);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARSIZE.bind(*p_18_m_axi_gmem_ARSIZE);
        p_18_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(24000240);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_ARBURST.bind(*p_18_m_axi_gmem_ARBURST);
        p_18_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(24000296);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_18_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_18->m_axi_gmem_ARLOCK.bind(*p_18_m_axi_gmem_ARLOCK);
        p_18_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(24000352);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARREGION.bind(*p_18_m_axi_gmem_ARREGION);
        p_18_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(24000408);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARCACHE.bind(*p_18_m_axi_gmem_ARCACHE);
        p_18_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(24000464);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_18_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_18->m_axi_gmem_ARPROT.bind(*p_18_m_axi_gmem_ARPROT);
        p_18_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(24000520);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_18_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_18->m_axi_gmem_ARQOS.bind(*p_18_m_axi_gmem_ARQOS);
        p_18_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(24000576);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARVALID.bind(*p_18_m_axi_gmem_ARVALID);
        p_18_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(24000632);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_ARREADY.bind(*p_18_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_18_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_18->m_axi_gmem_RDATA.bind(*p_18_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_18_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_18->m_axi_gmem_RRESP.bind(*p_18_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RLAST.bind(*p_18_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RVALID.bind(*p_18_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_18_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_18_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_18->m_axi_gmem_RREADY.bind(*p_18_m_axi_gmem_RREADY);
        p_18_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(24000968);
        sc_inst_19 = new emu_sim_copy_kernel_2_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_2");
        sc_inst_19->xsim_set_dbg_index(295);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_AWADDR.bind(*p_19_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWVALID.bind(*p_19_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_AWREADY.bind(*p_19_s_axi_control_AWREADY);
        p_19_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(24001184);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_WDATA.bind(*p_19_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->s_axi_control_WSTRB.bind(*p_19_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WVALID.bind(*p_19_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_WREADY.bind(*p_19_s_axi_control_WREADY);
        p_19_s_axi_control_WREADY->set_sv_netview_offsetfromdp(24001408);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_BRESP.bind(*p_19_s_axi_control_BRESP);
        p_19_s_axi_control_BRESP->set_sv_netview_offsetfromdp(24001464);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BVALID.bind(*p_19_s_axi_control_BVALID);
        p_19_s_axi_control_BVALID->set_sv_netview_offsetfromdp(24001520);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_BREADY.bind(*p_19_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_19_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_19->s_axi_control_ARADDR.bind(*p_19_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARVALID.bind(*p_19_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_ARREADY.bind(*p_19_s_axi_control_ARREADY);
        p_19_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(24001744);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_19_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_19->s_axi_control_RDATA.bind(*p_19_s_axi_control_RDATA);
        p_19_s_axi_control_RDATA->set_sv_netview_offsetfromdp(24001800);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->s_axi_control_RRESP.bind(*p_19_s_axi_control_RRESP);
        p_19_s_axi_control_RRESP->set_sv_netview_offsetfromdp(24001856);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RVALID.bind(*p_19_s_axi_control_RVALID);
        p_19_s_axi_control_RVALID->set_sv_netview_offsetfromdp(24001912);
        xsim_sc_channel<0, bool > *p_19_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->s_axi_control_RREADY.bind(*p_19_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_19_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_clk.bind(*p_19_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_clk);
        xsim_sc_channel<0, bool > *p_19_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_19->ap_rst_n.bind(*p_19_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_19_ap_rst_n);
        xsim_sc_channel<0, bool > *p_19_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_19->interrupt.bind(*p_19_interrupt);
        p_19_interrupt->set_sv_netview_offsetfromdp(24002136);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_AWADDR.bind(*p_19_m_axi_gmem_AWADDR);
        p_19_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(24002192);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_AWLEN.bind(*p_19_m_axi_gmem_AWLEN);
        p_19_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(24002248);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWSIZE.bind(*p_19_m_axi_gmem_AWSIZE);
        p_19_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(24002304);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_AWBURST.bind(*p_19_m_axi_gmem_AWBURST);
        p_19_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(24002360);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_AWLOCK.bind(*p_19_m_axi_gmem_AWLOCK);
        p_19_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(24002416);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWREGION.bind(*p_19_m_axi_gmem_AWREGION);
        p_19_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(24002472);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWCACHE.bind(*p_19_m_axi_gmem_AWCACHE);
        p_19_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(24002528);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_AWPROT.bind(*p_19_m_axi_gmem_AWPROT);
        p_19_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(24002584);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_AWQOS.bind(*p_19_m_axi_gmem_AWQOS);
        p_19_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(24002640);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWVALID.bind(*p_19_m_axi_gmem_AWVALID);
        p_19_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(24002696);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_AWREADY.bind(*p_19_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_WDATA.bind(*p_19_m_axi_gmem_WDATA);
        p_19_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(24002808);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_WSTRB.bind(*p_19_m_axi_gmem_WSTRB);
        p_19_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(24002864);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WLAST.bind(*p_19_m_axi_gmem_WLAST);
        p_19_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(24002920);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WVALID.bind(*p_19_m_axi_gmem_WVALID);
        p_19_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(24002976);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_WREADY.bind(*p_19_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_BRESP.bind(*p_19_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BVALID.bind(*p_19_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_BREADY.bind(*p_19_m_axi_gmem_BREADY);
        p_19_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(24003200);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_19_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_19->m_axi_gmem_ARADDR.bind(*p_19_m_axi_gmem_ARADDR);
        p_19_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(24003256);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_19_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_19->m_axi_gmem_ARLEN.bind(*p_19_m_axi_gmem_ARLEN);
        p_19_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(24003312);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARSIZE.bind(*p_19_m_axi_gmem_ARSIZE);
        p_19_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(24003368);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_ARBURST.bind(*p_19_m_axi_gmem_ARBURST);
        p_19_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(24003424);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_19_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_19->m_axi_gmem_ARLOCK.bind(*p_19_m_axi_gmem_ARLOCK);
        p_19_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(24003480);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARREGION.bind(*p_19_m_axi_gmem_ARREGION);
        p_19_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(24003536);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARCACHE.bind(*p_19_m_axi_gmem_ARCACHE);
        p_19_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(24003592);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_19_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_19->m_axi_gmem_ARPROT.bind(*p_19_m_axi_gmem_ARPROT);
        p_19_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(24003648);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_19_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_19->m_axi_gmem_ARQOS.bind(*p_19_m_axi_gmem_ARQOS);
        p_19_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(24003704);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARVALID.bind(*p_19_m_axi_gmem_ARVALID);
        p_19_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(24003760);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_ARREADY.bind(*p_19_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_19_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_19->m_axi_gmem_RDATA.bind(*p_19_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_19_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_19->m_axi_gmem_RRESP.bind(*p_19_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RLAST.bind(*p_19_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RVALID.bind(*p_19_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_19_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_19_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_19->m_axi_gmem_RREADY.bind(*p_19_m_axi_gmem_RREADY);
        p_19_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(24004096);
        sc_inst_20 = new emu_sim_copy_kernel_3_0(".emu_wrapper.emu_i.static_region.sim_copy_kernel_3");
        sc_inst_20->xsim_set_dbg_index(296);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_AWADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_AWADDR.bind(*p_20_s_axi_control_AWADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWVALID.bind(*p_20_s_axi_control_AWVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_AWVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_AWREADY.bind(*p_20_s_axi_control_AWREADY);
        p_20_s_axi_control_AWREADY->set_sv_netview_offsetfromdp(24004312);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_WDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_WDATA.bind(*p_20_s_axi_control_WDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WDATA);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_s_axi_control_WSTRB = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->s_axi_control_WSTRB.bind(*p_20_s_axi_control_WSTRB);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WSTRB);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WVALID.bind(*p_20_s_axi_control_WVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_WVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_WREADY.bind(*p_20_s_axi_control_WREADY);
        p_20_s_axi_control_WREADY->set_sv_netview_offsetfromdp(24004536);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_BRESP.bind(*p_20_s_axi_control_BRESP);
        p_20_s_axi_control_BRESP->set_sv_netview_offsetfromdp(24004592);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BVALID.bind(*p_20_s_axi_control_BVALID);
        p_20_s_axi_control_BVALID->set_sv_netview_offsetfromdp(24004648);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_BREADY.bind(*p_20_s_axi_control_BREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_BREADY);
        xsim_sc_channel<6, sc_dt::sc_bv<6> > *p_20_s_axi_control_ARADDR = new xsim_sc_channel<6, sc_dt::sc_bv<6> >();
        sc_inst_20->s_axi_control_ARADDR.bind(*p_20_s_axi_control_ARADDR);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARADDR);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARVALID.bind(*p_20_s_axi_control_ARVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_ARVALID);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_ARREADY.bind(*p_20_s_axi_control_ARREADY);
        p_20_s_axi_control_ARREADY->set_sv_netview_offsetfromdp(24004872);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_20_s_axi_control_RDATA = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_20->s_axi_control_RDATA.bind(*p_20_s_axi_control_RDATA);
        p_20_s_axi_control_RDATA->set_sv_netview_offsetfromdp(24004928);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_s_axi_control_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->s_axi_control_RRESP.bind(*p_20_s_axi_control_RRESP);
        p_20_s_axi_control_RRESP->set_sv_netview_offsetfromdp(24004984);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RVALID.bind(*p_20_s_axi_control_RVALID);
        p_20_s_axi_control_RVALID->set_sv_netview_offsetfromdp(24005040);
        xsim_sc_channel<0, bool > *p_20_s_axi_control_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->s_axi_control_RREADY.bind(*p_20_s_axi_control_RREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_s_axi_control_RREADY);
        xsim_sc_channel<0, bool > *p_20_ap_clk = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_clk.bind(*p_20_ap_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_clk);
        xsim_sc_channel<0, bool > *p_20_ap_rst_n = new xsim_sc_channel<0, bool >();
        sc_inst_20->ap_rst_n.bind(*p_20_ap_rst_n);
        (*_glb_hdl_sc_channel_map).push_back(p_20_ap_rst_n);
        xsim_sc_channel<0, bool > *p_20_interrupt = new xsim_sc_channel<0, bool >();
        sc_inst_20->interrupt.bind(*p_20_interrupt);
        p_20_interrupt->set_sv_netview_offsetfromdp(24005264);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_AWADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_AWADDR.bind(*p_20_m_axi_gmem_AWADDR);
        p_20_m_axi_gmem_AWADDR->set_sv_netview_offsetfromdp(24005320);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_AWLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_AWLEN.bind(*p_20_m_axi_gmem_AWLEN);
        p_20_m_axi_gmem_AWLEN->set_sv_netview_offsetfromdp(24005376);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWSIZE.bind(*p_20_m_axi_gmem_AWSIZE);
        p_20_m_axi_gmem_AWSIZE->set_sv_netview_offsetfromdp(24005432);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_AWBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_AWBURST.bind(*p_20_m_axi_gmem_AWBURST);
        p_20_m_axi_gmem_AWBURST->set_sv_netview_offsetfromdp(24005488);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_AWLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_AWLOCK.bind(*p_20_m_axi_gmem_AWLOCK);
        p_20_m_axi_gmem_AWLOCK->set_sv_netview_offsetfromdp(24005544);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWREGION.bind(*p_20_m_axi_gmem_AWREGION);
        p_20_m_axi_gmem_AWREGION->set_sv_netview_offsetfromdp(24005600);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWCACHE.bind(*p_20_m_axi_gmem_AWCACHE);
        p_20_m_axi_gmem_AWCACHE->set_sv_netview_offsetfromdp(24005656);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_AWPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_AWPROT.bind(*p_20_m_axi_gmem_AWPROT);
        p_20_m_axi_gmem_AWPROT->set_sv_netview_offsetfromdp(24005712);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_AWQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_AWQOS.bind(*p_20_m_axi_gmem_AWQOS);
        p_20_m_axi_gmem_AWQOS->set_sv_netview_offsetfromdp(24005768);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWVALID.bind(*p_20_m_axi_gmem_AWVALID);
        p_20_m_axi_gmem_AWVALID->set_sv_netview_offsetfromdp(24005824);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_AWREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_AWREADY.bind(*p_20_m_axi_gmem_AWREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_AWREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_WDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_WDATA.bind(*p_20_m_axi_gmem_WDATA);
        p_20_m_axi_gmem_WDATA->set_sv_netview_offsetfromdp(24005936);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_WSTRB = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_WSTRB.bind(*p_20_m_axi_gmem_WSTRB);
        p_20_m_axi_gmem_WSTRB->set_sv_netview_offsetfromdp(24005992);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WLAST.bind(*p_20_m_axi_gmem_WLAST);
        p_20_m_axi_gmem_WLAST->set_sv_netview_offsetfromdp(24006048);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WVALID.bind(*p_20_m_axi_gmem_WVALID);
        p_20_m_axi_gmem_WVALID->set_sv_netview_offsetfromdp(24006104);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_WREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_WREADY.bind(*p_20_m_axi_gmem_WREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_WREADY);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_BRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_BRESP.bind(*p_20_m_axi_gmem_BRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BVALID.bind(*p_20_m_axi_gmem_BVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_BVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_BREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_BREADY.bind(*p_20_m_axi_gmem_BREADY);
        p_20_m_axi_gmem_BREADY->set_sv_netview_offsetfromdp(24006328);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_20_m_axi_gmem_ARADDR = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_20->m_axi_gmem_ARADDR.bind(*p_20_m_axi_gmem_ARADDR);
        p_20_m_axi_gmem_ARADDR->set_sv_netview_offsetfromdp(24006384);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_20_m_axi_gmem_ARLEN = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_20->m_axi_gmem_ARLEN.bind(*p_20_m_axi_gmem_ARLEN);
        p_20_m_axi_gmem_ARLEN->set_sv_netview_offsetfromdp(24006440);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARSIZE = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARSIZE.bind(*p_20_m_axi_gmem_ARSIZE);
        p_20_m_axi_gmem_ARSIZE->set_sv_netview_offsetfromdp(24006496);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_ARBURST = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_ARBURST.bind(*p_20_m_axi_gmem_ARBURST);
        p_20_m_axi_gmem_ARBURST->set_sv_netview_offsetfromdp(24006552);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_20_m_axi_gmem_ARLOCK = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_20->m_axi_gmem_ARLOCK.bind(*p_20_m_axi_gmem_ARLOCK);
        p_20_m_axi_gmem_ARLOCK->set_sv_netview_offsetfromdp(24006608);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARREGION = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARREGION.bind(*p_20_m_axi_gmem_ARREGION);
        p_20_m_axi_gmem_ARREGION->set_sv_netview_offsetfromdp(24006664);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARCACHE = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARCACHE.bind(*p_20_m_axi_gmem_ARCACHE);
        p_20_m_axi_gmem_ARCACHE->set_sv_netview_offsetfromdp(24006720);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_20_m_axi_gmem_ARPROT = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_20->m_axi_gmem_ARPROT.bind(*p_20_m_axi_gmem_ARPROT);
        p_20_m_axi_gmem_ARPROT->set_sv_netview_offsetfromdp(24006776);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_20_m_axi_gmem_ARQOS = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_20->m_axi_gmem_ARQOS.bind(*p_20_m_axi_gmem_ARQOS);
        p_20_m_axi_gmem_ARQOS->set_sv_netview_offsetfromdp(24006832);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARVALID.bind(*p_20_m_axi_gmem_ARVALID);
        p_20_m_axi_gmem_ARVALID->set_sv_netview_offsetfromdp(24006888);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_ARREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_ARREADY.bind(*p_20_m_axi_gmem_ARREADY);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_ARREADY);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_20_m_axi_gmem_RDATA = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_20->m_axi_gmem_RDATA.bind(*p_20_m_axi_gmem_RDATA);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RDATA);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_20_m_axi_gmem_RRESP = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_20->m_axi_gmem_RRESP.bind(*p_20_m_axi_gmem_RRESP);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RRESP);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RLAST = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RLAST.bind(*p_20_m_axi_gmem_RLAST);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RLAST);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RVALID = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RVALID.bind(*p_20_m_axi_gmem_RVALID);
        (*_glb_hdl_sc_channel_map).push_back(p_20_m_axi_gmem_RVALID);
        xsim_sc_channel<0, bool > *p_20_m_axi_gmem_RREADY = new xsim_sc_channel<0, bool >();
        sc_inst_20->m_axi_gmem_RREADY.bind(*p_20_m_axi_gmem_RREADY);
        p_20_m_axi_gmem_RREADY->set_sv_netview_offsetfromdp(24007224);
        sc_inst_21 = new emu_sim_ddr_1_0(".emu_wrapper.emu_i.static_region.sim_ddr_1");
        sc_inst_21->xsim_set_dbg_index(297);
        xsim_sc_channel<0, bool > *p_21_c0_ui_clk = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ui_clk.bind(*p_21_c0_ui_clk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ui_clk);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_awid.bind(*p_21_c0_ddr_saxi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_21_c0_ddr_saxi_awaddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_21->c0_ddr_saxi_awaddr.bind(*p_21_c0_ddr_saxi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_c0_ddr_saxi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->c0_ddr_saxi_awlen.bind(*p_21_c0_ddr_saxi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_awsize.bind(*p_21_c0_ddr_saxi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_awburst.bind(*p_21_c0_ddr_saxi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awburst);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awlock.bind(*p_21_c0_ddr_saxi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awcache.bind(*p_21_c0_ddr_saxi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_awprot.bind(*p_21_c0_ddr_saxi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awregion.bind(*p_21_c0_ddr_saxi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_awqos.bind(*p_21_c0_ddr_saxi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_awuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_awuser.bind(*p_21_c0_ddr_saxi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awuser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awvalid.bind(*p_21_c0_ddr_saxi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_awvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_awready.bind(*p_21_c0_ddr_saxi_awready);
        p_21_c0_ddr_saxi_awready->set_sv_netview_offsetfromdp(24008056);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_c0_ddr_saxi_wdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->c0_ddr_saxi_wdata.bind(*p_21_c0_ddr_saxi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_wdata);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_21_c0_ddr_saxi_wstrb = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_21->c0_ddr_saxi_wstrb.bind(*p_21_c0_ddr_saxi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_wstrb);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wlast.bind(*p_21_c0_ddr_saxi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_wuser.bind(*p_21_c0_ddr_saxi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_wuser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wvalid.bind(*p_21_c0_ddr_saxi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_wvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_wready.bind(*p_21_c0_ddr_saxi_wready);
        p_21_c0_ddr_saxi_wready->set_sv_netview_offsetfromdp(24008392);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_bid.bind(*p_21_c0_ddr_saxi_bid);
        p_21_c0_ddr_saxi_bid->set_sv_netview_offsetfromdp(24008448);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_bresp.bind(*p_21_c0_ddr_saxi_bresp);
        p_21_c0_ddr_saxi_bresp->set_sv_netview_offsetfromdp(24008504);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_buser.bind(*p_21_c0_ddr_saxi_buser);
        p_21_c0_ddr_saxi_buser->set_sv_netview_offsetfromdp(24008560);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_bvalid.bind(*p_21_c0_ddr_saxi_bvalid);
        p_21_c0_ddr_saxi_bvalid->set_sv_netview_offsetfromdp(24008616);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_bready.bind(*p_21_c0_ddr_saxi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_bready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_arid.bind(*p_21_c0_ddr_saxi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arid);
        xsim_sc_channel<34, sc_dt::sc_bv<34> > *p_21_c0_ddr_saxi_araddr = new xsim_sc_channel<34, sc_dt::sc_bv<34> >();
        sc_inst_21->c0_ddr_saxi_araddr.bind(*p_21_c0_ddr_saxi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_c0_ddr_saxi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->c0_ddr_saxi_arlen.bind(*p_21_c0_ddr_saxi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_arsize.bind(*p_21_c0_ddr_saxi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_arburst.bind(*p_21_c0_ddr_saxi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arburst);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arlock.bind(*p_21_c0_ddr_saxi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arcache.bind(*p_21_c0_ddr_saxi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_c0_ddr_saxi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->c0_ddr_saxi_arprot.bind(*p_21_c0_ddr_saxi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arregion.bind(*p_21_c0_ddr_saxi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_c0_ddr_saxi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->c0_ddr_saxi_arqos.bind(*p_21_c0_ddr_saxi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arqos);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_aruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_aruser.bind(*p_21_c0_ddr_saxi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_aruser);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arvalid.bind(*p_21_c0_ddr_saxi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_arvalid);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_arready.bind(*p_21_c0_ddr_saxi_arready);
        p_21_c0_ddr_saxi_arready->set_sv_netview_offsetfromdp(24009400);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_rid.bind(*p_21_c0_ddr_saxi_rid);
        p_21_c0_ddr_saxi_rid->set_sv_netview_offsetfromdp(24009456);
        xsim_sc_channel<512, sc_dt::sc_bv<512> > *p_21_c0_ddr_saxi_rdata = new xsim_sc_channel<512, sc_dt::sc_bv<512> >();
        sc_inst_21->c0_ddr_saxi_rdata.bind(*p_21_c0_ddr_saxi_rdata);
        p_21_c0_ddr_saxi_rdata->set_sv_netview_offsetfromdp(24009512);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_c0_ddr_saxi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->c0_ddr_saxi_rresp.bind(*p_21_c0_ddr_saxi_rresp);
        p_21_c0_ddr_saxi_rresp->set_sv_netview_offsetfromdp(24009568);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rlast.bind(*p_21_c0_ddr_saxi_rlast);
        p_21_c0_ddr_saxi_rlast->set_sv_netview_offsetfromdp(24009624);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_c0_ddr_saxi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->c0_ddr_saxi_ruser.bind(*p_21_c0_ddr_saxi_ruser);
        p_21_c0_ddr_saxi_ruser->set_sv_netview_offsetfromdp(24009680);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rvalid.bind(*p_21_c0_ddr_saxi_rvalid);
        p_21_c0_ddr_saxi_rvalid->set_sv_netview_offsetfromdp(24009736);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_rready.bind(*p_21_c0_ddr_saxi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_rready);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_aclk.bind(*p_21_c0_ddr_saxi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_aclk);
        xsim_sc_channel<0, bool > *p_21_c0_ddr_saxi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->c0_ddr_saxi_aresetn.bind(*p_21_c0_ddr_saxi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_c0_ddr_saxi_aresetn);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_awid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_awid.bind(*p_21_s_xdma_axi_awid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_awaddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_awaddr.bind(*p_21_s_xdma_axi_awaddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awaddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_xdma_axi_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_xdma_axi_awlen.bind(*p_21_s_xdma_axi_awlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_awsize.bind(*p_21_s_xdma_axi_awsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_awburst.bind(*p_21_s_xdma_axi_awburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awburst);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awlock.bind(*p_21_s_xdma_axi_awlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awcache.bind(*p_21_s_xdma_axi_awcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_awprot.bind(*p_21_s_xdma_axi_awprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awregion.bind(*p_21_s_xdma_axi_awregion);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_awqos.bind(*p_21_s_xdma_axi_awqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_awuser.bind(*p_21_s_xdma_axi_awuser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awuser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awvalid.bind(*p_21_s_xdma_axi_awvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_awvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_awready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_awready.bind(*p_21_s_xdma_axi_awready);
        p_21_s_xdma_axi_awready->set_sv_netview_offsetfromdp(24010632);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_wdata.bind(*p_21_s_xdma_axi_wdata);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_wdata);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_wstrb.bind(*p_21_s_xdma_axi_wstrb);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_wstrb);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wlast.bind(*p_21_s_xdma_axi_wlast);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_wlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_wuser.bind(*p_21_s_xdma_axi_wuser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_wuser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wvalid.bind(*p_21_s_xdma_axi_wvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_wvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_wready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_wready.bind(*p_21_s_xdma_axi_wready);
        p_21_s_xdma_axi_wready->set_sv_netview_offsetfromdp(24010968);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_bid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_bid.bind(*p_21_s_xdma_axi_bid);
        p_21_s_xdma_axi_bid->set_sv_netview_offsetfromdp(24011024);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_bresp.bind(*p_21_s_xdma_axi_bresp);
        p_21_s_xdma_axi_bresp->set_sv_netview_offsetfromdp(24011080);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_buser.bind(*p_21_s_xdma_axi_buser);
        p_21_s_xdma_axi_buser->set_sv_netview_offsetfromdp(24011136);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_bvalid.bind(*p_21_s_xdma_axi_bvalid);
        p_21_s_xdma_axi_bvalid->set_sv_netview_offsetfromdp(24011192);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_bready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_bready.bind(*p_21_s_xdma_axi_bready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_bready);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_arid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_arid.bind(*p_21_s_xdma_axi_arid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_araddr = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_araddr.bind(*p_21_s_xdma_axi_araddr);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_araddr);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_21_s_xdma_axi_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_21->s_xdma_axi_arlen.bind(*p_21_s_xdma_axi_arlen);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arlen);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_arsize.bind(*p_21_s_xdma_axi_arsize);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arsize);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_arburst.bind(*p_21_s_xdma_axi_arburst);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arburst);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arlock.bind(*p_21_s_xdma_axi_arlock);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arlock);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arcache.bind(*p_21_s_xdma_axi_arcache);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arcache);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_21_s_xdma_axi_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_21->s_xdma_axi_arprot.bind(*p_21_s_xdma_axi_arprot);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arprot);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arregion = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arregion.bind(*p_21_s_xdma_axi_arregion);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arregion);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_21_s_xdma_axi_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_21->s_xdma_axi_arqos.bind(*p_21_s_xdma_axi_arqos);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arqos);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_aruser.bind(*p_21_s_xdma_axi_aruser);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_aruser);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arvalid.bind(*p_21_s_xdma_axi_arvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_arvalid);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_arready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_arready.bind(*p_21_s_xdma_axi_arready);
        p_21_s_xdma_axi_arready->set_sv_netview_offsetfromdp(24011976);
        xsim_sc_channel<5, sc_dt::sc_bv<5> > *p_21_s_xdma_axi_rid = new xsim_sc_channel<5, sc_dt::sc_bv<5> >();
        sc_inst_21->s_xdma_axi_rid.bind(*p_21_s_xdma_axi_rid);
        p_21_s_xdma_axi_rid->set_sv_netview_offsetfromdp(24012032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_21_s_xdma_axi_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_21->s_xdma_axi_rdata.bind(*p_21_s_xdma_axi_rdata);
        p_21_s_xdma_axi_rdata->set_sv_netview_offsetfromdp(24012088);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_21_s_xdma_axi_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_21->s_xdma_axi_rresp.bind(*p_21_s_xdma_axi_rresp);
        p_21_s_xdma_axi_rresp->set_sv_netview_offsetfromdp(24012144);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rlast.bind(*p_21_s_xdma_axi_rlast);
        p_21_s_xdma_axi_rlast->set_sv_netview_offsetfromdp(24012200);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_21_s_xdma_axi_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_21->s_xdma_axi_ruser.bind(*p_21_s_xdma_axi_ruser);
        p_21_s_xdma_axi_ruser->set_sv_netview_offsetfromdp(24012256);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rvalid.bind(*p_21_s_xdma_axi_rvalid);
        p_21_s_xdma_axi_rvalid->set_sv_netview_offsetfromdp(24012312);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_rready = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_rready.bind(*p_21_s_xdma_axi_rready);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_rready);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_aclk.bind(*p_21_s_xdma_axi_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_aclk);
        xsim_sc_channel<0, bool > *p_21_s_xdma_axi_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_21->s_xdma_axi_aresetn.bind(*p_21_s_xdma_axi_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_21_s_xdma_axi_aresetn);
        sc_inst_22 = new emu_sim_xdma_0_0(".emu_wrapper.emu_i.static_region.sim_xdma_0");
        sc_inst_22->xsim_set_dbg_index(298);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_awid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_awid.bind(*p_22_m_aximm_awid);
        p_22_m_aximm_awid->set_sv_netview_offsetfromdp(24012584);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_aximm_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_aximm_awaddr.bind(*p_22_m_aximm_awaddr);
        p_22_m_aximm_awaddr->set_sv_netview_offsetfromdp(24012640);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_aximm_awlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_aximm_awlen.bind(*p_22_m_aximm_awlen);
        p_22_m_aximm_awlen->set_sv_netview_offsetfromdp(24012696);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_awsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_awsize.bind(*p_22_m_aximm_awsize);
        p_22_m_aximm_awsize->set_sv_netview_offsetfromdp(24012752);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_awburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_awburst.bind(*p_22_m_aximm_awburst);
        p_22_m_aximm_awburst->set_sv_netview_offsetfromdp(24012808);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awlock.bind(*p_22_m_aximm_awlock);
        p_22_m_aximm_awlock->set_sv_netview_offsetfromdp(24012864);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_awcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_awcache.bind(*p_22_m_aximm_awcache);
        p_22_m_aximm_awcache->set_sv_netview_offsetfromdp(24012920);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_awprot.bind(*p_22_m_aximm_awprot);
        p_22_m_aximm_awprot->set_sv_netview_offsetfromdp(24012976);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_awqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_awqos.bind(*p_22_m_aximm_awqos);
        p_22_m_aximm_awqos->set_sv_netview_offsetfromdp(24013032);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_awuser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_awuser.bind(*p_22_m_aximm_awuser);
        p_22_m_aximm_awuser->set_sv_netview_offsetfromdp(24013088);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awvalid.bind(*p_22_m_aximm_awvalid);
        p_22_m_aximm_awvalid->set_sv_netview_offsetfromdp(24013144);
        xsim_sc_channel<0, bool > *p_22_m_aximm_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_awready.bind(*p_22_m_aximm_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_wdata.bind(*p_22_m_aximm_wdata);
        p_22_m_aximm_wdata->set_sv_netview_offsetfromdp(24013256);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_wstrb.bind(*p_22_m_aximm_wstrb);
        p_22_m_aximm_wstrb->set_sv_netview_offsetfromdp(24013312);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wlast.bind(*p_22_m_aximm_wlast);
        p_22_m_aximm_wlast->set_sv_netview_offsetfromdp(24013368);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_wuser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_wuser.bind(*p_22_m_aximm_wuser);
        p_22_m_aximm_wuser->set_sv_netview_offsetfromdp(24013424);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wvalid.bind(*p_22_m_aximm_wvalid);
        p_22_m_aximm_wvalid->set_sv_netview_offsetfromdp(24013480);
        xsim_sc_channel<0, bool > *p_22_m_aximm_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_wready.bind(*p_22_m_aximm_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_wready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_bid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_bid.bind(*p_22_m_aximm_bid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_bid);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_bresp.bind(*p_22_m_aximm_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_bresp);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_buser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_buser.bind(*p_22_m_aximm_buser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_buser);
        xsim_sc_channel<0, bool > *p_22_m_aximm_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_bvalid.bind(*p_22_m_aximm_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_aximm_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_bready.bind(*p_22_m_aximm_bready);
        p_22_m_aximm_bready->set_sv_netview_offsetfromdp(24013816);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_arid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_arid.bind(*p_22_m_aximm_arid);
        p_22_m_aximm_arid->set_sv_netview_offsetfromdp(24013872);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_aximm_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_aximm_araddr.bind(*p_22_m_aximm_araddr);
        p_22_m_aximm_araddr->set_sv_netview_offsetfromdp(24013928);
        xsim_sc_channel<8, sc_dt::sc_bv<8> > *p_22_m_aximm_arlen = new xsim_sc_channel<8, sc_dt::sc_bv<8> >();
        sc_inst_22->m_aximm_arlen.bind(*p_22_m_aximm_arlen);
        p_22_m_aximm_arlen->set_sv_netview_offsetfromdp(24013984);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_arsize = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_arsize.bind(*p_22_m_aximm_arsize);
        p_22_m_aximm_arsize->set_sv_netview_offsetfromdp(24014040);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_arburst = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_arburst.bind(*p_22_m_aximm_arburst);
        p_22_m_aximm_arburst->set_sv_netview_offsetfromdp(24014096);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arlock = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arlock.bind(*p_22_m_aximm_arlock);
        p_22_m_aximm_arlock->set_sv_netview_offsetfromdp(24014152);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_arcache = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_arcache.bind(*p_22_m_aximm_arcache);
        p_22_m_aximm_arcache->set_sv_netview_offsetfromdp(24014208);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_aximm_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_aximm_arprot.bind(*p_22_m_aximm_arprot);
        p_22_m_aximm_arprot->set_sv_netview_offsetfromdp(24014264);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_aximm_arqos = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_aximm_arqos.bind(*p_22_m_aximm_arqos);
        p_22_m_aximm_arqos->set_sv_netview_offsetfromdp(24014320);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_aruser = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_aruser.bind(*p_22_m_aximm_aruser);
        p_22_m_aximm_aruser->set_sv_netview_offsetfromdp(24014376);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arvalid.bind(*p_22_m_aximm_arvalid);
        p_22_m_aximm_arvalid->set_sv_netview_offsetfromdp(24014432);
        xsim_sc_channel<0, bool > *p_22_m_aximm_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_arready.bind(*p_22_m_aximm_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_arready);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_rid = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_rid.bind(*p_22_m_aximm_rid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_rid);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_aximm_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_aximm_rdata.bind(*p_22_m_aximm_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_aximm_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_aximm_rresp.bind(*p_22_m_aximm_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_rresp);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rlast = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rlast.bind(*p_22_m_aximm_rlast);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_rlast);
        xsim_sc_channel<1, sc_dt::sc_bv<1> > *p_22_m_aximm_ruser = new xsim_sc_channel<1, sc_dt::sc_bv<1> >();
        sc_inst_22->m_aximm_ruser.bind(*p_22_m_aximm_ruser);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_ruser);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rvalid.bind(*p_22_m_aximm_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_aximm_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_rready.bind(*p_22_m_aximm_rready);
        p_22_m_aximm_rready->set_sv_netview_offsetfromdp(24014880);
        xsim_sc_channel<0, bool > *p_22_m_aximm_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_aclk.bind(*p_22_m_aximm_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_aclk);
        xsim_sc_channel<0, bool > *p_22_m_aximm_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_aximm_aresetn.bind(*p_22_m_aximm_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_aximm_aresetn);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axictrl_awaddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axictrl_awaddr.bind(*p_22_m_axictrl_awaddr);
        p_22_m_axictrl_awaddr->set_sv_netview_offsetfromdp(24015048);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axictrl_awprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axictrl_awprot.bind(*p_22_m_axictrl_awprot);
        p_22_m_axictrl_awprot->set_sv_netview_offsetfromdp(24015104);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_awvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_awvalid.bind(*p_22_m_axictrl_awvalid);
        p_22_m_axictrl_awvalid->set_sv_netview_offsetfromdp(24015160);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_awready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_awready.bind(*p_22_m_axictrl_awready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_awready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axictrl_wdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axictrl_wdata.bind(*p_22_m_axictrl_wdata);
        p_22_m_axictrl_wdata->set_sv_netview_offsetfromdp(24015272);
        xsim_sc_channel<4, sc_dt::sc_bv<4> > *p_22_m_axictrl_wstrb = new xsim_sc_channel<4, sc_dt::sc_bv<4> >();
        sc_inst_22->m_axictrl_wstrb.bind(*p_22_m_axictrl_wstrb);
        p_22_m_axictrl_wstrb->set_sv_netview_offsetfromdp(24015328);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_wvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_wvalid.bind(*p_22_m_axictrl_wvalid);
        p_22_m_axictrl_wvalid->set_sv_netview_offsetfromdp(24015384);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_wready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_wready.bind(*p_22_m_axictrl_wready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_wready);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axictrl_bresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axictrl_bresp.bind(*p_22_m_axictrl_bresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_bresp);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_bvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_bvalid.bind(*p_22_m_axictrl_bvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_bvalid);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_bready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_bready.bind(*p_22_m_axictrl_bready);
        p_22_m_axictrl_bready->set_sv_netview_offsetfromdp(24015608);
        xsim_sc_channel<64, sc_dt::sc_bv<64> > *p_22_m_axictrl_araddr = new xsim_sc_channel<64, sc_dt::sc_bv<64> >();
        sc_inst_22->m_axictrl_araddr.bind(*p_22_m_axictrl_araddr);
        p_22_m_axictrl_araddr->set_sv_netview_offsetfromdp(24015664);
        xsim_sc_channel<3, sc_dt::sc_bv<3> > *p_22_m_axictrl_arprot = new xsim_sc_channel<3, sc_dt::sc_bv<3> >();
        sc_inst_22->m_axictrl_arprot.bind(*p_22_m_axictrl_arprot);
        p_22_m_axictrl_arprot->set_sv_netview_offsetfromdp(24015720);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_arvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_arvalid.bind(*p_22_m_axictrl_arvalid);
        p_22_m_axictrl_arvalid->set_sv_netview_offsetfromdp(24015776);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_arready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_arready.bind(*p_22_m_axictrl_arready);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_arready);
        xsim_sc_channel<32, sc_dt::sc_bv<32> > *p_22_m_axictrl_rdata = new xsim_sc_channel<32, sc_dt::sc_bv<32> >();
        sc_inst_22->m_axictrl_rdata.bind(*p_22_m_axictrl_rdata);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_rdata);
        xsim_sc_channel<2, sc_dt::sc_bv<2> > *p_22_m_axictrl_rresp = new xsim_sc_channel<2, sc_dt::sc_bv<2> >();
        sc_inst_22->m_axictrl_rresp.bind(*p_22_m_axictrl_rresp);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_rresp);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_rvalid = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_rvalid.bind(*p_22_m_axictrl_rvalid);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_rvalid);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_rready = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_rready.bind(*p_22_m_axictrl_rready);
        p_22_m_axictrl_rready->set_sv_netview_offsetfromdp(24016056);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_aclk = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_aclk.bind(*p_22_m_axictrl_aclk);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_aclk);
        xsim_sc_channel<0, bool > *p_22_m_axictrl_aresetn = new xsim_sc_channel<0, bool >();
        sc_inst_22->m_axictrl_aresetn.bind(*p_22_m_axictrl_aresetn);
        (*_glb_hdl_sc_channel_map).push_back(p_22_m_axictrl_aresetn);
    }


extern "C"
    void implicit_HDL_SCcleanup()
    {
        delete sc_inst_1;
        delete sc_inst_2;
        delete sc_inst_3;
        delete sc_inst_4;
        delete sc_inst_5;
        delete sc_inst_6;
        delete sc_inst_7;
        delete sc_inst_8;
        delete sc_inst_9;
        delete sc_inst_10;
        delete sc_inst_11;
        delete sc_inst_12;
        delete sc_inst_13;
        delete sc_inst_14;
        delete sc_inst_15;
        delete sc_inst_16;
        delete sc_inst_17;
        delete sc_inst_18;
        delete sc_inst_19;
        delete sc_inst_20;
        delete sc_inst_21;
        delete sc_inst_22;
    }
