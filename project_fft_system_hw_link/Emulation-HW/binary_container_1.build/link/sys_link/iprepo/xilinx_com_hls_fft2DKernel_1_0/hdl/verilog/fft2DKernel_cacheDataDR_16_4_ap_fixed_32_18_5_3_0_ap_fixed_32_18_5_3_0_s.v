// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft2DKernel_cacheDataDR_16_4_ap_fixed_32_18_5_3_0_ap_fixed_32_18_5_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_inData_0_0_0_0_0_dout,
        p_inData_0_0_0_0_0_empty_n,
        p_inData_0_0_0_0_0_read,
        p_inData_0_1_0_0_0_dout,
        p_inData_0_1_0_0_0_empty_n,
        p_inData_0_1_0_0_0_read,
        p_inData_0_0_0_0_01_dout,
        p_inData_0_0_0_0_01_empty_n,
        p_inData_0_0_0_0_01_read,
        p_inData_0_1_0_0_04_dout,
        p_inData_0_1_0_0_04_empty_n,
        p_inData_0_1_0_0_04_read,
        p_inData_0_0_0_0_02_dout,
        p_inData_0_0_0_0_02_empty_n,
        p_inData_0_0_0_0_02_read,
        p_inData_0_1_0_0_05_dout,
        p_inData_0_1_0_0_05_empty_n,
        p_inData_0_1_0_0_05_read,
        p_inData_0_0_0_0_03_dout,
        p_inData_0_0_0_0_03_empty_n,
        p_inData_0_0_0_0_03_read,
        p_inData_0_1_0_0_06_dout,
        p_inData_0_1_0_0_06_empty_n,
        p_inData_0_1_0_0_06_read,
        p_digitReseversedOutputBuff_M_real_address0,
        p_digitReseversedOutputBuff_M_real_ce0,
        p_digitReseversedOutputBuff_M_real_we0,
        p_digitReseversedOutputBuff_M_real_d0,
        p_digitReseversedOutputBuff_M_real7_address0,
        p_digitReseversedOutputBuff_M_real7_ce0,
        p_digitReseversedOutputBuff_M_real7_we0,
        p_digitReseversedOutputBuff_M_real7_d0,
        p_digitReseversedOutputBuff_M_real8_address0,
        p_digitReseversedOutputBuff_M_real8_ce0,
        p_digitReseversedOutputBuff_M_real8_we0,
        p_digitReseversedOutputBuff_M_real8_d0,
        p_digitReseversedOutputBuff_M_real9_address0,
        p_digitReseversedOutputBuff_M_real9_ce0,
        p_digitReseversedOutputBuff_M_real9_we0,
        p_digitReseversedOutputBuff_M_real9_d0,
        p_digitReseversedOutputBuff_M_imag_address0,
        p_digitReseversedOutputBuff_M_imag_ce0,
        p_digitReseversedOutputBuff_M_imag_we0,
        p_digitReseversedOutputBuff_M_imag_d0,
        p_digitReseversedOutputBuff_M_imag10_address0,
        p_digitReseversedOutputBuff_M_imag10_ce0,
        p_digitReseversedOutputBuff_M_imag10_we0,
        p_digitReseversedOutputBuff_M_imag10_d0,
        p_digitReseversedOutputBuff_M_imag11_address0,
        p_digitReseversedOutputBuff_M_imag11_ce0,
        p_digitReseversedOutputBuff_M_imag11_we0,
        p_digitReseversedOutputBuff_M_imag11_d0,
        p_digitReseversedOutputBuff_M_imag12_address0,
        p_digitReseversedOutputBuff_M_imag12_ce0,
        p_digitReseversedOutputBuff_M_imag12_we0,
        p_digitReseversedOutputBuff_M_imag12_d0,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] p_inData_0_0_0_0_0_dout;
input   p_inData_0_0_0_0_0_empty_n;
output   p_inData_0_0_0_0_0_read;
input  [31:0] p_inData_0_1_0_0_0_dout;
input   p_inData_0_1_0_0_0_empty_n;
output   p_inData_0_1_0_0_0_read;
input  [31:0] p_inData_0_0_0_0_01_dout;
input   p_inData_0_0_0_0_01_empty_n;
output   p_inData_0_0_0_0_01_read;
input  [31:0] p_inData_0_1_0_0_04_dout;
input   p_inData_0_1_0_0_04_empty_n;
output   p_inData_0_1_0_0_04_read;
input  [31:0] p_inData_0_0_0_0_02_dout;
input   p_inData_0_0_0_0_02_empty_n;
output   p_inData_0_0_0_0_02_read;
input  [31:0] p_inData_0_1_0_0_05_dout;
input   p_inData_0_1_0_0_05_empty_n;
output   p_inData_0_1_0_0_05_read;
input  [31:0] p_inData_0_0_0_0_03_dout;
input   p_inData_0_0_0_0_03_empty_n;
output   p_inData_0_0_0_0_03_read;
input  [31:0] p_inData_0_1_0_0_06_dout;
input   p_inData_0_1_0_0_06_empty_n;
output   p_inData_0_1_0_0_06_read;
output  [1:0] p_digitReseversedOutputBuff_M_real_address0;
output   p_digitReseversedOutputBuff_M_real_ce0;
output   p_digitReseversedOutputBuff_M_real_we0;
output  [31:0] p_digitReseversedOutputBuff_M_real_d0;
output  [1:0] p_digitReseversedOutputBuff_M_real7_address0;
output   p_digitReseversedOutputBuff_M_real7_ce0;
output   p_digitReseversedOutputBuff_M_real7_we0;
output  [31:0] p_digitReseversedOutputBuff_M_real7_d0;
output  [1:0] p_digitReseversedOutputBuff_M_real8_address0;
output   p_digitReseversedOutputBuff_M_real8_ce0;
output   p_digitReseversedOutputBuff_M_real8_we0;
output  [31:0] p_digitReseversedOutputBuff_M_real8_d0;
output  [1:0] p_digitReseversedOutputBuff_M_real9_address0;
output   p_digitReseversedOutputBuff_M_real9_ce0;
output   p_digitReseversedOutputBuff_M_real9_we0;
output  [31:0] p_digitReseversedOutputBuff_M_real9_d0;
output  [1:0] p_digitReseversedOutputBuff_M_imag_address0;
output   p_digitReseversedOutputBuff_M_imag_ce0;
output   p_digitReseversedOutputBuff_M_imag_we0;
output  [31:0] p_digitReseversedOutputBuff_M_imag_d0;
output  [1:0] p_digitReseversedOutputBuff_M_imag10_address0;
output   p_digitReseversedOutputBuff_M_imag10_ce0;
output   p_digitReseversedOutputBuff_M_imag10_we0;
output  [31:0] p_digitReseversedOutputBuff_M_imag10_d0;
output  [1:0] p_digitReseversedOutputBuff_M_imag11_address0;
output   p_digitReseversedOutputBuff_M_imag11_ce0;
output   p_digitReseversedOutputBuff_M_imag11_we0;
output  [31:0] p_digitReseversedOutputBuff_M_imag11_d0;
output  [1:0] p_digitReseversedOutputBuff_M_imag12_address0;
output   p_digitReseversedOutputBuff_M_imag12_ce0;
output   p_digitReseversedOutputBuff_M_imag12_we0;
output  [31:0] p_digitReseversedOutputBuff_M_imag12_d0;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_inData_0_0_0_0_0_read;
reg p_inData_0_1_0_0_0_read;
reg p_inData_0_0_0_0_01_read;
reg p_inData_0_1_0_0_04_read;
reg p_inData_0_0_0_0_02_read;
reg p_inData_0_1_0_0_05_read;
reg p_inData_0_0_0_0_03_read;
reg p_inData_0_1_0_0_06_read;
reg p_digitReseversedOutputBuff_M_real_ce0;
reg p_digitReseversedOutputBuff_M_real_we0;
reg p_digitReseversedOutputBuff_M_real7_ce0;
reg p_digitReseversedOutputBuff_M_real7_we0;
reg p_digitReseversedOutputBuff_M_real8_ce0;
reg p_digitReseversedOutputBuff_M_real8_we0;
reg p_digitReseversedOutputBuff_M_real9_ce0;
reg p_digitReseversedOutputBuff_M_real9_we0;
reg p_digitReseversedOutputBuff_M_imag_ce0;
reg p_digitReseversedOutputBuff_M_imag_we0;
reg p_digitReseversedOutputBuff_M_imag10_ce0;
reg p_digitReseversedOutputBuff_M_imag10_we0;
reg p_digitReseversedOutputBuff_M_imag11_ce0;
reg p_digitReseversedOutputBuff_M_imag11_we0;
reg p_digitReseversedOutputBuff_M_imag12_ce0;
reg p_digitReseversedOutputBuff_M_imag12_we0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln171_fu_806_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    io_acc_block_signal_op28;
wire    io_acc_block_signal_op32;
reg    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op83;
wire    io_acc_block_signal_op102;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg    p_inData_0_0_0_0_0_blk_n;
wire    ap_block_pp0_stage0;
reg    p_inData_0_0_0_0_01_blk_n;
reg    p_inData_0_0_0_0_02_blk_n;
reg    p_inData_0_0_0_0_03_blk_n;
reg    p_inData_0_1_0_0_0_blk_n;
reg    p_inData_0_1_0_0_04_blk_n;
reg    p_inData_0_1_0_0_05_blk_n;
reg    p_inData_0_1_0_0_06_blk_n;
reg   [1:0] r53_reg_265;
reg   [1:0] r53_reg_265_pp0_iter1_reg;
reg   [31:0] temp_M_real_V_3_4_reg_640;
reg   [31:0] temp_M_real_V_2_4_reg_658;
reg   [31:0] temp_M_real_V_1_4_reg_676;
reg   [31:0] temp_M_real_V_0_4_reg_694;
reg   [31:0] temp_M_imag_V_3_4_reg_712;
reg   [31:0] temp_M_imag_V_2_4_reg_730;
reg   [31:0] temp_M_imag_V_1_4_reg_748;
reg   [31:0] temp_M_imag_V_0_4_reg_766;
reg   [31:0] temp_M_real_V_0_reg_1000;
reg   [31:0] temp_M_imag_V_0_reg_1008;
wire   [1:0] r_fu_792_p2;
reg   [1:0] r_reg_1016;
reg   [31:0] temp_M_real_V_0_7_reg_1021;
reg   [31:0] temp_M_imag_V_0_7_reg_1029;
reg   [0:0] icmp_ln171_reg_1037;
reg   [0:0] icmp_ln171_reg_1037_pp0_iter1_reg;
wire   [1:0] xor_ln184_fu_860_p2;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
reg   [1:0] ap_phi_mux_r53_phi_fu_269_p6;
reg   [31:0] ap_phi_mux_temp_M_real_V_3_1_phi_fu_283_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_3_1_reg_280;
reg   [31:0] ap_phi_mux_temp_M_real_V_2_1_phi_fu_296_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_2_1_reg_293;
reg   [31:0] ap_phi_mux_temp_M_real_V_1_1_phi_fu_309_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_1_1_reg_306;
reg   [31:0] ap_phi_mux_temp_M_real_V_0_1_phi_fu_322_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_0_1_reg_319;
reg   [31:0] ap_phi_mux_temp_M_imag_V_3_1_phi_fu_335_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_3_1_reg_332;
reg   [31:0] ap_phi_mux_temp_M_imag_V_2_1_phi_fu_348_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_2_1_reg_345;
reg   [31:0] ap_phi_mux_temp_M_imag_V_1_1_phi_fu_361_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_1_1_reg_358;
reg   [31:0] ap_phi_mux_temp_M_imag_V_0_1_phi_fu_374_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_0_1_reg_371;
reg   [31:0] ap_phi_mux_temp_M_real_V_3_2_phi_fu_387_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_3_2_reg_384;
reg   [31:0] ap_phi_mux_temp_M_real_V_2_2_phi_fu_403_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_2_2_reg_400;
reg   [31:0] ap_phi_mux_temp_M_real_V_1_2_phi_fu_419_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_1_2_reg_416;
reg   [31:0] ap_phi_mux_temp_M_real_V_0_2_phi_fu_435_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_0_2_reg_432;
reg   [31:0] ap_phi_mux_temp_M_imag_V_3_2_phi_fu_451_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_3_2_reg_448;
reg   [31:0] ap_phi_mux_temp_M_imag_V_2_2_phi_fu_467_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_2_2_reg_464;
reg   [31:0] ap_phi_mux_temp_M_imag_V_1_2_phi_fu_483_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_1_2_reg_480;
reg   [31:0] ap_phi_mux_temp_M_imag_V_0_2_phi_fu_499_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_0_2_reg_496;
reg   [31:0] ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_3_3_reg_512;
reg   [31:0] ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_2_3_reg_528;
reg   [31:0] ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_1_3_reg_544;
reg   [31:0] ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_0_3_reg_560;
reg   [31:0] ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_3_3_reg_576;
reg   [31:0] ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_2_3_reg_592;
reg   [31:0] ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_1_3_reg_608;
reg   [31:0] ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_0_3_reg_624;
reg   [31:0] ap_phi_mux_temp_M_real_V_3_4_phi_fu_644_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_3_4_reg_640;
reg   [31:0] ap_phi_mux_temp_M_real_V_2_4_phi_fu_662_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_2_4_reg_658;
reg   [31:0] ap_phi_mux_temp_M_real_V_1_4_phi_fu_680_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_1_4_reg_676;
reg   [31:0] ap_phi_mux_temp_M_real_V_0_4_phi_fu_698_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_real_V_0_4_reg_694;
reg   [31:0] ap_phi_mux_temp_M_imag_V_3_4_phi_fu_716_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_3_4_reg_712;
reg   [31:0] ap_phi_mux_temp_M_imag_V_2_4_phi_fu_734_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_2_4_reg_730;
reg   [31:0] ap_phi_mux_temp_M_imag_V_1_4_phi_fu_752_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_1_4_reg_748;
reg   [31:0] ap_phi_mux_temp_M_imag_V_0_4_phi_fu_770_p8;
wire   [31:0] ap_phi_reg_pp0_iter1_temp_M_imag_V_0_4_reg_766;
wire   [63:0] zext_ln171_fu_938_p1;
reg   [31:0] temp_M_imag_V_3_fu_82;
reg   [31:0] temp_M_imag_V_3_15_fu_86;
reg   [31:0] temp_M_imag_V_3_16_fu_90;
reg   [31:0] temp_M_imag_V_3_17_fu_94;
reg   [31:0] temp_M_real_V_3_fu_98;
reg   [31:0] temp_M_real_V_3_15_fu_102;
reg   [31:0] temp_M_real_V_3_16_fu_106;
reg   [31:0] temp_M_real_V_3_17_fu_110;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_157;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln171_reg_1037 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r53_reg_265 <= r_reg_1016;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln171_reg_1037 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        r53_reg_265 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1))) begin
        temp_M_imag_V_0_4_reg_766 <= p_inData_0_1_0_0_06_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_imag_V_0_4_reg_766 <= ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_imag_V_0_4_reg_766 <= ap_phi_reg_pp0_iter1_temp_M_imag_V_0_4_reg_766;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2))) begin
        temp_M_imag_V_1_4_reg_748 <= p_inData_0_1_0_0_06_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_imag_V_1_4_reg_748 <= ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_imag_V_1_4_reg_748 <= ap_phi_reg_pp0_iter1_temp_M_imag_V_1_4_reg_748;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3))) begin
        temp_M_imag_V_2_4_reg_730 <= p_inData_0_1_0_0_06_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)))) begin
        temp_M_imag_V_2_4_reg_730 <= ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_imag_V_2_4_reg_730 <= ap_phi_reg_pp0_iter1_temp_M_imag_V_2_4_reg_730;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_imag_V_3_4_reg_712 <= ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0))) begin
        temp_M_imag_V_3_4_reg_712 <= p_inData_0_1_0_0_06_dout;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_imag_V_3_4_reg_712 <= ap_phi_reg_pp0_iter1_temp_M_imag_V_3_4_reg_712;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1))) begin
        temp_M_real_V_0_4_reg_694 <= p_inData_0_0_0_0_03_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_real_V_0_4_reg_694 <= ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_real_V_0_4_reg_694 <= ap_phi_reg_pp0_iter1_temp_M_real_V_0_4_reg_694;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2))) begin
        temp_M_real_V_1_4_reg_676 <= p_inData_0_0_0_0_03_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_real_V_1_4_reg_676 <= ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_real_V_1_4_reg_676 <= ap_phi_reg_pp0_iter1_temp_M_real_V_1_4_reg_676;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3))) begin
        temp_M_real_V_2_4_reg_658 <= p_inData_0_0_0_0_03_dout;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)))) begin
        temp_M_real_V_2_4_reg_658 <= ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_real_V_2_4_reg_658 <= ap_phi_reg_pp0_iter1_temp_M_real_V_2_4_reg_658;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd3)))) begin
        temp_M_real_V_3_4_reg_640 <= ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (r53_reg_265 == 2'd0))) begin
        temp_M_real_V_3_4_reg_640 <= p_inData_0_0_0_0_03_dout;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_real_V_3_4_reg_640 <= ap_phi_reg_pp0_iter1_temp_M_real_V_3_4_reg_640;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln171_reg_1037 <= icmp_ln171_fu_806_p2;
        icmp_ln171_reg_1037_pp0_iter1_reg <= icmp_ln171_reg_1037;
        r53_reg_265_pp0_iter1_reg <= r53_reg_265;
        temp_M_imag_V_0_7_reg_1029 <= p_inData_0_1_0_0_04_dout;
        temp_M_imag_V_0_reg_1008 <= p_inData_0_1_0_0_0_dout;
        temp_M_real_V_0_7_reg_1021 <= p_inData_0_0_0_0_01_dout;
        temp_M_real_V_0_reg_1000 <= p_inData_0_0_0_0_0_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        r_reg_1016 <= r_fu_792_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln171_reg_1037 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        temp_M_imag_V_3_15_fu_86 <= ap_phi_mux_temp_M_imag_V_2_4_phi_fu_734_p8;
        temp_M_imag_V_3_16_fu_90 <= ap_phi_mux_temp_M_imag_V_1_4_phi_fu_752_p8;
        temp_M_imag_V_3_17_fu_94 <= ap_phi_mux_temp_M_imag_V_0_4_phi_fu_770_p8;
        temp_M_imag_V_3_fu_82 <= ap_phi_mux_temp_M_imag_V_3_4_phi_fu_716_p8;
        temp_M_real_V_3_15_fu_102 <= ap_phi_mux_temp_M_real_V_2_4_phi_fu_662_p8;
        temp_M_real_V_3_16_fu_106 <= ap_phi_mux_temp_M_real_V_1_4_phi_fu_680_p8;
        temp_M_real_V_3_17_fu_110 <= ap_phi_mux_temp_M_real_V_0_4_phi_fu_698_p8;
        temp_M_real_V_3_fu_98 <= ap_phi_mux_temp_M_real_V_3_4_phi_fu_644_p8;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln171_reg_1037_pp0_iter1_reg == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_157)) begin
        if ((icmp_ln171_reg_1037 == 1'd1)) begin
            ap_phi_mux_r53_phi_fu_269_p6 = 2'd0;
        end else if ((icmp_ln171_reg_1037 == 1'd0)) begin
            ap_phi_mux_r53_phi_fu_269_p6 = r_reg_1016;
        end else begin
            ap_phi_mux_r53_phi_fu_269_p6 = r53_reg_265;
        end
    end else begin
        ap_phi_mux_r53_phi_fu_269_p6 = r53_reg_265;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_imag_V_0_1_phi_fu_374_p8 = temp_M_imag_V_0_reg_1008;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_imag_V_0_1_phi_fu_374_p8 = temp_M_imag_V_3_17_fu_94;
    end else begin
        ap_phi_mux_temp_M_imag_V_0_1_phi_fu_374_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_0_1_reg_371;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_imag_V_0_2_phi_fu_499_p8 = temp_M_imag_V_0_7_reg_1029;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_0_2_phi_fu_499_p8 = ap_phi_mux_temp_M_imag_V_0_1_phi_fu_374_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_0_2_phi_fu_499_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_0_2_reg_496;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd0)) begin
        ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8 = p_inData_0_1_0_0_05_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd3))) begin
        ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8 = ap_phi_mux_temp_M_imag_V_0_2_phi_fu_499_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_0_3_reg_624;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_imag_V_0_4_phi_fu_770_p8 = p_inData_0_1_0_0_06_dout;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_0_4_phi_fu_770_p8 = ap_phi_mux_temp_M_imag_V_0_3_phi_fu_627_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_0_4_phi_fu_770_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_0_4_reg_766;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_imag_V_1_1_phi_fu_361_p8 = temp_M_imag_V_0_reg_1008;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_1_1_phi_fu_361_p8 = temp_M_imag_V_3_16_fu_90;
    end else begin
        ap_phi_mux_temp_M_imag_V_1_1_phi_fu_361_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_1_1_reg_358;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_imag_V_1_2_phi_fu_483_p8 = temp_M_imag_V_0_7_reg_1029;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_imag_V_1_2_phi_fu_483_p8 = ap_phi_mux_temp_M_imag_V_1_1_phi_fu_361_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_1_2_phi_fu_483_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_1_2_reg_480;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd1)) begin
        ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8 = p_inData_0_1_0_0_05_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd3) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8 = ap_phi_mux_temp_M_imag_V_1_2_phi_fu_483_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_1_3_reg_608;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_imag_V_1_4_phi_fu_752_p8 = p_inData_0_1_0_0_06_dout;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_1_4_phi_fu_752_p8 = ap_phi_mux_temp_M_imag_V_1_3_phi_fu_611_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_1_4_phi_fu_752_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_1_4_reg_748;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_imag_V_2_1_phi_fu_348_p8 = temp_M_imag_V_0_reg_1008;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_2_1_phi_fu_348_p8 = temp_M_imag_V_3_15_fu_86;
    end else begin
        ap_phi_mux_temp_M_imag_V_2_1_phi_fu_348_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_2_1_reg_345;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_imag_V_2_2_phi_fu_467_p8 = temp_M_imag_V_0_7_reg_1029;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_2_2_phi_fu_467_p8 = ap_phi_mux_temp_M_imag_V_2_1_phi_fu_348_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_2_2_phi_fu_467_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_2_2_reg_464;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd2)) begin
        ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8 = p_inData_0_1_0_0_05_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd3) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8 = ap_phi_mux_temp_M_imag_V_2_2_phi_fu_467_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_2_3_reg_592;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_imag_V_2_4_phi_fu_734_p8 = p_inData_0_1_0_0_06_dout;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_2_4_phi_fu_734_p8 = ap_phi_mux_temp_M_imag_V_2_3_phi_fu_595_p8;
    end else begin
        ap_phi_mux_temp_M_imag_V_2_4_phi_fu_734_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_2_4_reg_730;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_3_1_phi_fu_335_p8 = temp_M_imag_V_3_fu_82;
    end else if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_imag_V_3_1_phi_fu_335_p8 = temp_M_imag_V_0_reg_1008;
    end else begin
        ap_phi_mux_temp_M_imag_V_3_1_phi_fu_335_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_3_1_reg_332;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_3_2_phi_fu_451_p8 = ap_phi_mux_temp_M_imag_V_3_1_phi_fu_335_p8;
    end else if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_imag_V_3_2_phi_fu_451_p8 = temp_M_imag_V_0_7_reg_1029;
    end else begin
        ap_phi_mux_temp_M_imag_V_3_2_phi_fu_451_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_3_2_reg_448;
    end
end

always @ (*) begin
    if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8 = ap_phi_mux_temp_M_imag_V_3_2_phi_fu_451_p8;
    end else if ((xor_ln184_fu_860_p2 == 2'd3)) begin
        ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8 = p_inData_0_1_0_0_05_dout;
    end else begin
        ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_3_3_reg_576;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_imag_V_3_4_phi_fu_716_p8 = ap_phi_mux_temp_M_imag_V_3_3_phi_fu_579_p8;
    end else if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_imag_V_3_4_phi_fu_716_p8 = p_inData_0_1_0_0_06_dout;
    end else begin
        ap_phi_mux_temp_M_imag_V_3_4_phi_fu_716_p8 = ap_phi_reg_pp0_iter1_temp_M_imag_V_3_4_reg_712;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_real_V_0_1_phi_fu_322_p8 = temp_M_real_V_0_reg_1000;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_real_V_0_1_phi_fu_322_p8 = temp_M_real_V_3_17_fu_110;
    end else begin
        ap_phi_mux_temp_M_real_V_0_1_phi_fu_322_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_0_1_reg_319;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_real_V_0_2_phi_fu_435_p8 = temp_M_real_V_0_7_reg_1021;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_0_2_phi_fu_435_p8 = ap_phi_mux_temp_M_real_V_0_1_phi_fu_322_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_0_2_phi_fu_435_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_0_2_reg_432;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd0)) begin
        ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8 = p_inData_0_0_0_0_02_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd3))) begin
        ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8 = ap_phi_mux_temp_M_real_V_0_2_phi_fu_435_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_0_3_reg_560;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_real_V_0_4_phi_fu_698_p8 = p_inData_0_0_0_0_03_dout;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_0_4_phi_fu_698_p8 = ap_phi_mux_temp_M_real_V_0_3_phi_fu_563_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_0_4_phi_fu_698_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_0_4_reg_694;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_real_V_1_1_phi_fu_309_p8 = temp_M_real_V_0_reg_1000;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_1_1_phi_fu_309_p8 = temp_M_real_V_3_16_fu_106;
    end else begin
        ap_phi_mux_temp_M_real_V_1_1_phi_fu_309_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_1_1_reg_306;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_real_V_1_2_phi_fu_419_p8 = temp_M_real_V_0_7_reg_1021;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_real_V_1_2_phi_fu_419_p8 = ap_phi_mux_temp_M_real_V_1_1_phi_fu_309_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_1_2_phi_fu_419_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_1_2_reg_416;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd1)) begin
        ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8 = p_inData_0_0_0_0_02_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd3) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8 = ap_phi_mux_temp_M_real_V_1_2_phi_fu_419_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_1_3_reg_544;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_real_V_1_4_phi_fu_680_p8 = p_inData_0_0_0_0_03_dout;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_1_4_phi_fu_680_p8 = ap_phi_mux_temp_M_real_V_1_3_phi_fu_547_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_1_4_phi_fu_680_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_1_4_reg_676;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_real_V_2_1_phi_fu_296_p8 = temp_M_real_V_0_reg_1000;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_2_1_phi_fu_296_p8 = temp_M_real_V_3_15_fu_102;
    end else begin
        ap_phi_mux_temp_M_real_V_2_1_phi_fu_296_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_2_1_reg_293;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd1)) begin
        ap_phi_mux_temp_M_real_V_2_2_phi_fu_403_p8 = temp_M_real_V_0_7_reg_1021;
    end else if (((r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_2_2_phi_fu_403_p8 = ap_phi_mux_temp_M_real_V_2_1_phi_fu_296_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_2_2_phi_fu_403_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_2_2_reg_400;
    end
end

always @ (*) begin
    if ((xor_ln184_fu_860_p2 == 2'd2)) begin
        ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8 = p_inData_0_0_0_0_02_dout;
    end else if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd3) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8 = ap_phi_mux_temp_M_real_V_2_2_phi_fu_403_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_2_3_reg_528;
    end
end

always @ (*) begin
    if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_real_V_2_4_phi_fu_662_p8 = p_inData_0_0_0_0_03_dout;
    end else if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_2_4_phi_fu_662_p8 = ap_phi_mux_temp_M_real_V_2_3_phi_fu_531_p8;
    end else begin
        ap_phi_mux_temp_M_real_V_2_4_phi_fu_662_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_2_4_reg_658;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_3_1_phi_fu_283_p8 = temp_M_real_V_3_fu_98;
    end else if ((r53_reg_265 == 2'd3)) begin
        ap_phi_mux_temp_M_real_V_3_1_phi_fu_283_p8 = temp_M_real_V_0_reg_1000;
    end else begin
        ap_phi_mux_temp_M_real_V_3_1_phi_fu_283_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_3_1_reg_280;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd3) | (r53_reg_265 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_3_2_phi_fu_387_p8 = ap_phi_mux_temp_M_real_V_3_1_phi_fu_283_p8;
    end else if ((r53_reg_265 == 2'd2)) begin
        ap_phi_mux_temp_M_real_V_3_2_phi_fu_387_p8 = temp_M_real_V_0_7_reg_1021;
    end else begin
        ap_phi_mux_temp_M_real_V_3_2_phi_fu_387_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_3_2_reg_384;
    end
end

always @ (*) begin
    if (((xor_ln184_fu_860_p2 == 2'd1) | (xor_ln184_fu_860_p2 == 2'd2) | (xor_ln184_fu_860_p2 == 2'd0))) begin
        ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8 = ap_phi_mux_temp_M_real_V_3_2_phi_fu_387_p8;
    end else if ((xor_ln184_fu_860_p2 == 2'd3)) begin
        ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8 = p_inData_0_0_0_0_02_dout;
    end else begin
        ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_3_3_reg_512;
    end
end

always @ (*) begin
    if (((r53_reg_265 == 2'd1) | (r53_reg_265 == 2'd2) | (r53_reg_265 == 2'd3))) begin
        ap_phi_mux_temp_M_real_V_3_4_phi_fu_644_p8 = ap_phi_mux_temp_M_real_V_3_3_phi_fu_515_p8;
    end else if ((r53_reg_265 == 2'd0)) begin
        ap_phi_mux_temp_M_real_V_3_4_phi_fu_644_p8 = p_inData_0_0_0_0_03_dout;
    end else begin
        ap_phi_mux_temp_M_real_V_3_4_phi_fu_644_p8 = ap_phi_reg_pp0_iter1_temp_M_real_V_3_4_reg_640;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (icmp_ln171_fu_806_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to1 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag10_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag10_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag11_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag11_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag12_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag12_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_imag_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_imag_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real7_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real7_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real8_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real8_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real9_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real9_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real_ce0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_digitReseversedOutputBuff_M_real_we0 = 1'b1;
    end else begin
        p_digitReseversedOutputBuff_M_real_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_01_blk_n = p_inData_0_0_0_0_01_empty_n;
    end else begin
        p_inData_0_0_0_0_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_01_read = 1'b1;
    end else begin
        p_inData_0_0_0_0_01_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_02_blk_n = p_inData_0_0_0_0_02_empty_n;
    end else begin
        p_inData_0_0_0_0_02_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_02_read = 1'b1;
    end else begin
        p_inData_0_0_0_0_02_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_03_blk_n = p_inData_0_0_0_0_03_empty_n;
    end else begin
        p_inData_0_0_0_0_03_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_03_read = 1'b1;
    end else begin
        p_inData_0_0_0_0_03_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_0_blk_n = p_inData_0_0_0_0_0_empty_n;
    end else begin
        p_inData_0_0_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_0_0_0_0_read = 1'b1;
    end else begin
        p_inData_0_0_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_04_blk_n = p_inData_0_1_0_0_04_empty_n;
    end else begin
        p_inData_0_1_0_0_04_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_04_read = 1'b1;
    end else begin
        p_inData_0_1_0_0_04_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_05_blk_n = p_inData_0_1_0_0_05_empty_n;
    end else begin
        p_inData_0_1_0_0_05_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_05_read = 1'b1;
    end else begin
        p_inData_0_1_0_0_05_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_06_blk_n = p_inData_0_1_0_0_06_empty_n;
    end else begin
        p_inData_0_1_0_0_06_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_06_read = 1'b1;
    end else begin
        p_inData_0_1_0_0_06_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_0_blk_n = p_inData_0_1_0_0_0_empty_n;
    end else begin
        p_inData_0_1_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_inData_0_1_0_0_0_read = 1'b1;
    end else begin
        p_inData_0_1_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((io_acc_block_signal_op102 == 1'b0) | (io_acc_block_signal_op83 == 1'b0))) | ((ap_start == 1'b1) & ((io_acc_block_signal_op32 == 1'b0) | (io_acc_block_signal_op28 == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((io_acc_block_signal_op102 == 1'b0) | (io_acc_block_signal_op83 == 1'b0))) | ((ap_start == 1'b1) & ((io_acc_block_signal_op32 == 1'b0) | (io_acc_block_signal_op28 == 1'b0))));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((io_acc_block_signal_op32 == 1'b0) | (io_acc_block_signal_op28 == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((io_acc_block_signal_op102 == 1'b0) | (io_acc_block_signal_op83 == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_157 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (p_inData_0_1_0_0_0_blk_n & p_inData_0_1_0_0_06_blk_n & p_inData_0_1_0_0_05_blk_n & p_inData_0_1_0_0_04_blk_n & p_inData_0_0_0_0_0_blk_n & p_inData_0_0_0_0_03_blk_n & p_inData_0_0_0_0_02_blk_n & p_inData_0_0_0_0_01_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_0_1_reg_371 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_0_2_reg_496 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_0_3_reg_624 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_0_4_reg_766 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_1_1_reg_358 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_1_2_reg_480 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_1_3_reg_608 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_1_4_reg_748 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_2_1_reg_345 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_2_2_reg_464 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_2_3_reg_592 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_2_4_reg_730 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_3_1_reg_332 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_3_2_reg_448 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_3_3_reg_576 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_imag_V_3_4_reg_712 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_0_1_reg_319 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_0_2_reg_432 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_0_3_reg_560 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_0_4_reg_694 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_1_1_reg_306 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_1_2_reg_416 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_1_3_reg_544 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_1_4_reg_676 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_2_1_reg_293 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_2_2_reg_400 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_2_3_reg_528 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_2_4_reg_658 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_3_1_reg_280 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_3_2_reg_384 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_3_3_reg_512 = 'bx;

assign ap_phi_reg_pp0_iter1_temp_M_real_V_3_4_reg_640 = 'bx;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign icmp_ln171_fu_806_p2 = ((ap_phi_mux_r53_phi_fu_269_p6 == 2'd3) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op102 = (p_inData_0_1_0_0_06_empty_n & p_inData_0_0_0_0_03_empty_n);

assign io_acc_block_signal_op28 = (p_inData_0_1_0_0_0_empty_n & p_inData_0_0_0_0_0_empty_n);

assign io_acc_block_signal_op32 = (p_inData_0_1_0_0_04_empty_n & p_inData_0_0_0_0_01_empty_n);

assign io_acc_block_signal_op83 = (p_inData_0_1_0_0_05_empty_n & p_inData_0_0_0_0_02_empty_n);

assign p_digitReseversedOutputBuff_M_imag10_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_imag10_d0 = temp_M_imag_V_1_4_reg_748;

assign p_digitReseversedOutputBuff_M_imag11_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_imag11_d0 = temp_M_imag_V_2_4_reg_730;

assign p_digitReseversedOutputBuff_M_imag12_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_imag12_d0 = temp_M_imag_V_3_4_reg_712;

assign p_digitReseversedOutputBuff_M_imag_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_imag_d0 = temp_M_imag_V_0_4_reg_766;

assign p_digitReseversedOutputBuff_M_real7_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_real7_d0 = temp_M_real_V_1_4_reg_676;

assign p_digitReseversedOutputBuff_M_real8_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_real8_d0 = temp_M_real_V_2_4_reg_658;

assign p_digitReseversedOutputBuff_M_real9_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_real9_d0 = temp_M_real_V_3_4_reg_640;

assign p_digitReseversedOutputBuff_M_real_address0 = zext_ln171_fu_938_p1;

assign p_digitReseversedOutputBuff_M_real_d0 = temp_M_real_V_0_4_reg_694;

assign r_fu_792_p2 = (ap_phi_mux_r53_phi_fu_269_p6 + 2'd1);

assign xor_ln184_fu_860_p2 = (r53_reg_265 ^ 2'd2);

assign zext_ln171_fu_938_p1 = r53_reg_265_pp0_iter1_reg;

endmodule //fft2DKernel_cacheDataDR_16_4_ap_fixed_32_18_5_3_0_ap_fixed_32_18_5_3_0_s
