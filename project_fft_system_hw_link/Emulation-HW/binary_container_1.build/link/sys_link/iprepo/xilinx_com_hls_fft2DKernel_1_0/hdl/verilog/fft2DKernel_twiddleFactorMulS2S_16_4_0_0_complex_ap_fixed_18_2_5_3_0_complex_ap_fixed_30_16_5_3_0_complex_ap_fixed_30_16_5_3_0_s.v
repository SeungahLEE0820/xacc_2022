// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft2DKernel_twiddleFactorMulS2S_16_4_0_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_30_16_5_3_0_complex_ap_fixed_30_16_5_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_twiddleTable_M_imag_0_0_0_address0,
        p_twiddleTable_M_imag_0_0_0_ce0,
        p_twiddleTable_M_imag_0_0_0_q0,
        p_twiddleTable_M_imag_0_0_0_address1,
        p_twiddleTable_M_imag_0_0_0_ce1,
        p_twiddleTable_M_imag_0_0_0_q1,
        p_twiddleTable_M_imag_0_0_0_address2,
        p_twiddleTable_M_imag_0_0_0_ce2,
        p_twiddleTable_M_imag_0_0_0_q2,
        p_twiddleTable_M_imag_0_0_0_address3,
        p_twiddleTable_M_imag_0_0_0_ce3,
        p_twiddleTable_M_imag_0_0_0_q3,
        p_twiddleTable_M_imag_0_0_0_address4,
        p_twiddleTable_M_imag_0_0_0_ce4,
        p_twiddleTable_M_imag_0_0_0_q4,
        p_twiddleTable_M_imag_0_0_0_address5,
        p_twiddleTable_M_imag_0_0_0_ce5,
        p_twiddleTable_M_imag_0_0_0_q5,
        p_twiddleTable_M_imag_0_0_0_address6,
        p_twiddleTable_M_imag_0_0_0_ce6,
        p_twiddleTable_M_imag_0_0_0_q6,
        p_k,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [28:0] p_read;
input  [28:0] p_read1;
input  [28:0] p_read2;
input  [28:0] p_read3;
input  [28:0] p_read4;
input  [28:0] p_read5;
input  [28:0] p_read6;
input  [28:0] p_read7;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address0;
output   p_twiddleTable_M_imag_0_0_0_ce0;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q0;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address1;
output   p_twiddleTable_M_imag_0_0_0_ce1;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q1;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address2;
output   p_twiddleTable_M_imag_0_0_0_ce2;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q2;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address3;
output   p_twiddleTable_M_imag_0_0_0_ce3;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q3;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address4;
output   p_twiddleTable_M_imag_0_0_0_ce4;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q4;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address5;
output   p_twiddleTable_M_imag_0_0_0_ce5;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q5;
output  [3:0] p_twiddleTable_M_imag_0_0_0_address6;
output   p_twiddleTable_M_imag_0_0_0_ce6;
input  [17:0] p_twiddleTable_M_imag_0_0_0_q6;
input  [3:0] p_k;
output  [29:0] ap_return_0;
output  [29:0] ap_return_1;
output  [29:0] ap_return_2;
output  [29:0] ap_return_3;
output  [29:0] ap_return_4;
output  [29:0] ap_return_5;
output  [29:0] ap_return_6;
output  [29:0] ap_return_7;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_twiddleTable_M_imag_0_0_0_ce0;
reg p_twiddleTable_M_imag_0_0_0_ce1;
reg p_twiddleTable_M_imag_0_0_0_ce2;
reg p_twiddleTable_M_imag_0_0_0_ce3;
reg p_twiddleTable_M_imag_0_0_0_ce4;
reg p_twiddleTable_M_imag_0_0_0_ce5;
reg p_twiddleTable_M_imag_0_0_0_ce6;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_pp0_stage0_subdone;
reg   [3:0] p_k_read_reg_1371;
wire    ap_block_pp0_stage0_11001;
reg   [28:0] p_read_3_reg_1379;
reg   [28:0] p_read_3_reg_1379_pp0_iter1_reg;
reg   [28:0] p_read_4_reg_1384;
reg   [28:0] p_read_4_reg_1384_pp0_iter1_reg;
reg   [28:0] p_read_5_reg_1389;
reg   [28:0] p_read_5_reg_1389_pp0_iter1_reg;
reg  signed [28:0] p_read_6_reg_1394;
reg  signed [28:0] p_read_6_reg_1394_pp0_iter1_reg;
reg  signed [28:0] p_read_6_reg_1394_pp0_iter2_reg;
reg  signed [28:0] p_read_6_reg_1394_pp0_iter3_reg;
reg   [28:0] p_read_7_reg_1400;
reg   [28:0] p_read_7_reg_1400_pp0_iter1_reg;
reg   [28:0] p_read_8_reg_1405;
reg   [28:0] p_read_8_reg_1405_pp0_iter1_reg;
reg   [28:0] p_read_9_reg_1410;
reg   [28:0] p_read_9_reg_1410_pp0_iter1_reg;
reg  signed [28:0] p_read39_reg_1415;
reg  signed [28:0] p_read39_reg_1415_pp0_iter1_reg;
reg  signed [28:0] p_read39_reg_1415_pp0_iter2_reg;
reg  signed [28:0] p_read39_reg_1415_pp0_iter3_reg;
wire   [3:0] index_cos_V_fu_218_p2;
reg   [3:0] index_cos_V_reg_1426;
wire   [0:0] index_invert_control_imag_2_fu_224_p3;
reg   [0:0] index_invert_control_imag_2_reg_1432;
wire   [3:0] index_cos_V_1_fu_292_p2;
reg   [3:0] index_cos_V_1_reg_1447;
wire   [0:0] icmp_ln1049_4_fu_306_p2;
reg   [0:0] icmp_ln1049_4_reg_1453;
wire   [0:0] icmp_ln1049_5_fu_312_p2;
reg   [0:0] icmp_ln1049_5_reg_1458;
wire   [0:0] icmp_ln1049_7_fu_357_p2;
reg   [0:0] icmp_ln1049_7_reg_1468;
wire   [3:0] index_V_1_fu_392_p2;
reg   [3:0] index_V_1_reg_1478;
wire   [3:0] index_cos_V_2_fu_398_p2;
reg   [3:0] index_cos_V_2_reg_1485;
wire   [0:0] icmp_ln1049_11_fu_443_p2;
reg   [0:0] icmp_ln1049_11_reg_1496;
reg   [17:0] lut_out_imag_V_4_reg_1506;
wire   [17:0] imagSinVal_fu_567_p3;
reg   [17:0] imagSinVal_reg_1511;
wire   [17:0] realCosVal_fu_670_p3;
reg   [17:0] realCosVal_reg_1516;
wire   [17:0] imagSinVal_1_fu_754_p3;
reg   [17:0] imagSinVal_1_reg_1521;
wire   [17:0] realCosVal_1_fu_850_p3;
reg   [17:0] realCosVal_1_reg_1526;
wire   [17:0] imagSinVal_2_fu_953_p3;
reg   [17:0] imagSinVal_2_reg_1531;
wire   [17:0] realCosVal_2_fu_1050_p3;
reg   [17:0] realCosVal_2_reg_1536;
wire  signed [45:0] sext_ln1171_1_fu_1061_p1;
wire  signed [45:0] sext_ln1171_3_fu_1079_p1;
wire  signed [45:0] sext_ln1171_4_fu_1082_p1;
wire  signed [45:0] sext_ln1171_5_fu_1085_p1;
wire  signed [45:0] sext_ln1171_6_fu_1088_p1;
wire  signed [45:0] sext_ln1171_7_fu_1115_p1;
wire  signed [45:0] sext_ln1171_8_fu_1118_p1;
wire  signed [45:0] sext_ln1171_9_fu_1121_p1;
wire  signed [45:0] sext_ln1171_10_fu_1124_p1;
wire  signed [45:0] sext_ln1171_11_fu_1151_p1;
wire  signed [45:0] sext_ln1171_12_fu_1154_p1;
wire  signed [45:0] sext_ln1171_13_fu_1157_p1;
wire  signed [45:0] sext_ln1171_14_fu_1160_p1;
wire   [45:0] grp_fu_1064_p2;
reg   [45:0] mul_ln1246_reg_1629;
wire   [45:0] grp_fu_1073_p2;
reg   [45:0] mul_ln712_reg_1634;
wire   [45:0] grp_fu_1091_p2;
reg   [45:0] mul_ln712_1_reg_1639;
wire   [45:0] grp_fu_1097_p2;
reg   [45:0] mul_ln1246_1_reg_1644;
wire   [45:0] grp_fu_1103_p2;
reg   [45:0] mul_ln712_2_reg_1649;
wire   [45:0] grp_fu_1109_p2;
reg   [45:0] mul_ln1245_reg_1654;
wire   [45:0] grp_fu_1127_p2;
reg   [45:0] mul_ln712_3_reg_1659;
wire   [45:0] grp_fu_1133_p2;
reg   [45:0] mul_ln1246_2_reg_1664;
wire   [45:0] grp_fu_1139_p2;
reg   [45:0] mul_ln712_4_reg_1669;
wire   [45:0] grp_fu_1145_p2;
reg   [45:0] mul_ln1245_1_reg_1674;
wire   [45:0] grp_fu_1163_p2;
reg   [45:0] mul_ln712_5_reg_1679;
wire   [45:0] grp_fu_1169_p2;
reg   [45:0] mul_ln1246_3_reg_1684;
wire   [45:0] grp_fu_1175_p2;
reg   [45:0] mul_ln712_6_reg_1689;
wire   [45:0] grp_fu_1181_p2;
reg   [45:0] mul_ln1245_2_reg_1694;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln573_fu_250_p1;
wire   [63:0] zext_ln573_1_fu_281_p1;
wire   [63:0] zext_ln573_2_fu_344_p1;
wire   [63:0] zext_ln573_3_fu_381_p1;
wire   [63:0] zext_ln573_4_fu_430_p1;
wire   [63:0] zext_ln573_5_fu_467_p1;
wire   [1:0] lut_index_imag_V_fu_232_p1;
wire   [1:0] lut_index_imag_V_1_fu_236_p2;
wire   [1:0] lut_index_imag_V_2_fu_242_p3;
wire   [1:0] lut_index_real_V_fu_263_p1;
wire   [0:0] index_invert_control_real_V_fu_255_p3;
wire   [1:0] lut_index_real_V_1_fu_267_p2;
wire   [1:0] lut_index_real_V_2_fu_273_p3;
wire   [3:0] index_V_fu_286_p2;
wire   [0:0] trunc_ln674_fu_318_p1;
wire   [1:0] lut_index_imag_V_3_fu_322_p3;
wire   [0:0] index_invert_control_imag_1_fu_298_p3;
wire   [1:0] lut_index_imag_V_4_fu_330_p2;
wire   [1:0] lut_index_imag_V_5_fu_336_p3;
wire   [1:0] lut_index_real_V_3_fu_363_p1;
wire   [0:0] index_invert_control_real_V_1_fu_349_p3;
wire   [1:0] lut_index_real_V_4_fu_367_p2;
wire   [1:0] lut_index_real_V_5_fu_373_p3;
wire   [3:0] shl_ln315_fu_386_p2;
wire   [1:0] lut_index_imag_V_6_fu_412_p1;
wire   [0:0] index_invert_control_imag_fu_404_p3;
wire   [1:0] lut_index_imag_V_7_fu_416_p2;
wire   [1:0] lut_index_imag_V_8_fu_422_p3;
wire   [1:0] lut_index_real_V_6_fu_449_p1;
wire   [0:0] index_invert_control_real_V_2_fu_435_p3;
wire   [1:0] lut_index_real_V_7_fu_453_p2;
wire   [1:0] lut_index_real_V_8_fu_459_p3;
wire   [0:0] icmp_ln1049_fu_479_p2;
wire   [0:0] icmp_ln1049_1_fu_484_p2;
wire   [0:0] output_saturation_control_imag_fu_489_p2;
wire  signed [17:0] temp_out_sin_V_fu_495_p3;
wire  signed [18:0] sext_ln712_2_fu_503_p1;
wire   [18:0] r_fu_507_p2;
wire   [0:0] p_Result_s_fu_513_p3;
wire   [0:0] p_Result_31_fu_525_p3;
wire   [0:0] xor_ln794_fu_533_p2;
wire   [0:0] overflow_fu_539_p2;
wire   [0:0] xor_ln340_fu_545_p2;
wire   [17:0] select_ln384_fu_551_p3;
wire   [17:0] p_Val2_1_fu_521_p1;
wire   [0:0] output_negate_control_imag_fu_472_p3;
wire   [17:0] select_ln340_fu_559_p3;
wire   [0:0] icmp_ln1049_2_fu_582_p2;
wire   [0:0] icmp_ln1049_3_fu_587_p2;
wire   [0:0] output_saturation_control_real_V_fu_592_p2;
wire  signed [17:0] temp_out_cos_V_fu_598_p3;
wire  signed [18:0] sext_ln712_3_fu_606_p1;
wire   [18:0] r_V_8_fu_610_p2;
wire   [0:0] p_Result_32_fu_616_p3;
wire   [0:0] p_Result_33_fu_628_p3;
wire   [0:0] xor_ln794_1_fu_636_p2;
wire   [0:0] overflow_1_fu_642_p2;
wire   [0:0] xor_ln340_1_fu_648_p2;
wire   [17:0] select_ln384_1_fu_654_p3;
wire   [17:0] p_Val2_4_fu_624_p1;
wire   [0:0] output_negate_control_real_V_fu_575_p3;
wire   [17:0] select_ln340_1_fu_662_p3;
wire   [0:0] output_saturation_control_imag_1_fu_678_p2;
wire  signed [17:0] temp_out_sin_V_2_fu_682_p3;
wire  signed [18:0] sext_ln712_4_fu_690_p1;
wire   [18:0] r_7_fu_694_p2;
wire   [0:0] p_Result_34_fu_700_p3;
wire   [0:0] p_Result_35_fu_712_p3;
wire   [0:0] xor_ln794_2_fu_720_p2;
wire   [0:0] overflow_2_fu_726_p2;
wire   [0:0] xor_ln340_2_fu_732_p2;
wire   [17:0] select_ln384_2_fu_738_p3;
wire   [17:0] p_Val2_7_fu_708_p1;
wire   [17:0] select_ln340_2_fu_746_p3;
wire   [0:0] icmp_ln1049_6_fu_768_p2;
wire   [0:0] output_saturation_control_real_V_1_fu_773_p2;
wire  signed [17:0] temp_out_cos_V_1_fu_778_p3;
wire  signed [18:0] sext_ln712_5_fu_786_p1;
wire   [18:0] r_V_9_fu_790_p2;
wire   [0:0] p_Result_36_fu_796_p3;
wire   [0:0] p_Result_37_fu_808_p3;
wire   [0:0] xor_ln794_3_fu_816_p2;
wire   [0:0] overflow_3_fu_822_p2;
wire   [0:0] xor_ln340_3_fu_828_p2;
wire   [17:0] select_ln384_3_fu_834_p3;
wire   [17:0] p_Val2_10_fu_804_p1;
wire   [0:0] output_negate_control_real_V_1_fu_761_p3;
wire   [17:0] select_ln340_3_fu_842_p3;
wire   [0:0] icmp_ln1049_8_fu_865_p2;
wire   [0:0] icmp_ln1049_9_fu_870_p2;
wire   [0:0] output_saturation_control_imag_2_fu_875_p2;
wire  signed [17:0] temp_out_sin_V_3_fu_881_p3;
wire  signed [18:0] sext_ln712_6_fu_889_p1;
wire   [18:0] r_8_fu_893_p2;
wire   [0:0] p_Result_38_fu_899_p3;
wire   [0:0] p_Result_39_fu_911_p3;
wire   [0:0] xor_ln794_4_fu_919_p2;
wire   [0:0] overflow_4_fu_925_p2;
wire   [0:0] xor_ln340_4_fu_931_p2;
wire   [17:0] select_ln384_4_fu_937_p3;
wire   [17:0] p_Val2_13_fu_907_p1;
wire   [0:0] output_negate_control_imag_2_fu_858_p3;
wire   [17:0] select_ln340_4_fu_945_p3;
wire   [0:0] icmp_ln1049_10_fu_968_p2;
wire   [0:0] output_saturation_control_real_V_2_fu_973_p2;
wire  signed [17:0] temp_out_cos_V_2_fu_978_p3;
wire  signed [18:0] sext_ln712_7_fu_986_p1;
wire   [18:0] r_V_10_fu_990_p2;
wire   [0:0] p_Result_40_fu_996_p3;
wire   [0:0] p_Result_41_fu_1008_p3;
wire   [0:0] xor_ln794_5_fu_1016_p2;
wire   [0:0] overflow_5_fu_1022_p2;
wire   [0:0] xor_ln340_5_fu_1028_p2;
wire   [17:0] select_ln384_5_fu_1034_p3;
wire   [17:0] p_Val2_16_fu_1004_p1;
wire   [0:0] output_negate_control_real_V_2_fu_961_p3;
wire   [17:0] select_ln340_5_fu_1042_p3;
wire  signed [17:0] grp_fu_1064_p1;
wire  signed [17:0] grp_fu_1073_p1;
wire  signed [28:0] grp_fu_1091_p0;
wire  signed [17:0] grp_fu_1091_p1;
wire  signed [28:0] grp_fu_1097_p0;
wire  signed [17:0] grp_fu_1097_p1;
wire  signed [28:0] grp_fu_1103_p0;
wire  signed [17:0] grp_fu_1103_p1;
wire  signed [28:0] grp_fu_1109_p0;
wire  signed [17:0] grp_fu_1109_p1;
wire  signed [28:0] grp_fu_1127_p0;
wire  signed [17:0] grp_fu_1127_p1;
wire  signed [28:0] grp_fu_1133_p0;
wire  signed [17:0] grp_fu_1133_p1;
wire  signed [28:0] grp_fu_1139_p0;
wire  signed [17:0] grp_fu_1139_p1;
wire  signed [28:0] grp_fu_1145_p0;
wire  signed [17:0] grp_fu_1145_p1;
wire  signed [28:0] grp_fu_1163_p0;
wire  signed [17:0] grp_fu_1163_p1;
wire  signed [28:0] grp_fu_1169_p0;
wire  signed [17:0] grp_fu_1169_p1;
wire  signed [28:0] grp_fu_1175_p0;
wire  signed [17:0] grp_fu_1175_p1;
wire  signed [28:0] grp_fu_1181_p0;
wire  signed [17:0] grp_fu_1181_p1;
wire   [44:0] r_V_fu_1187_p3;
wire  signed [45:0] sext_ln712_fu_1194_p1;
wire   [45:0] ret_V_fu_1198_p2;
wire   [44:0] r_V_1_fu_1213_p3;
wire  signed [45:0] sext_ln712_1_fu_1220_p1;
wire   [45:0] ret_V_48_fu_1224_p2;
wire   [45:0] ret_V_49_fu_1239_p2;
wire   [45:0] ret_V_50_fu_1253_p2;
wire   [45:0] ret_V_51_fu_1267_p2;
wire   [45:0] ret_V_52_fu_1281_p2;
wire   [45:0] ret_V_53_fu_1295_p2;
wire   [45:0] ret_V_54_fu_1309_p2;
reg    grp_fu_1064_ce;
reg    grp_fu_1073_ce;
reg    grp_fu_1091_ce;
reg    grp_fu_1097_ce;
reg    grp_fu_1103_ce;
reg    grp_fu_1109_ce;
reg    grp_fu_1127_ce;
reg    grp_fu_1133_ce;
reg    grp_fu_1139_ce;
reg    grp_fu_1145_ce;
reg    grp_fu_1163_ce;
reg    grp_fu_1169_ce;
reg    grp_fu_1175_ce;
reg    grp_fu_1181_ce;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to3;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
end

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1017(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read_6_reg_1394_pp0_iter1_reg),
    .din1(grp_fu_1064_p1),
    .ce(grp_fu_1064_ce),
    .dout(grp_fu_1064_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1018(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_read39_reg_1415_pp0_iter1_reg),
    .din1(grp_fu_1073_p1),
    .ce(grp_fu_1073_ce),
    .dout(grp_fu_1073_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1019(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1091_p0),
    .din1(grp_fu_1091_p1),
    .ce(grp_fu_1091_ce),
    .dout(grp_fu_1091_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1020(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1097_p0),
    .din1(grp_fu_1097_p1),
    .ce(grp_fu_1097_ce),
    .dout(grp_fu_1097_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1021(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1103_p0),
    .din1(grp_fu_1103_p1),
    .ce(grp_fu_1103_ce),
    .dout(grp_fu_1103_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1022(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1109_p0),
    .din1(grp_fu_1109_p1),
    .ce(grp_fu_1109_ce),
    .dout(grp_fu_1109_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1023(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1127_p0),
    .din1(grp_fu_1127_p1),
    .ce(grp_fu_1127_ce),
    .dout(grp_fu_1127_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1024(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1133_p0),
    .din1(grp_fu_1133_p1),
    .ce(grp_fu_1133_ce),
    .dout(grp_fu_1133_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1025(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1139_p0),
    .din1(grp_fu_1139_p1),
    .ce(grp_fu_1139_ce),
    .dout(grp_fu_1139_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1026(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1145_p0),
    .din1(grp_fu_1145_p1),
    .ce(grp_fu_1145_ce),
    .dout(grp_fu_1145_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1027(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1163_p0),
    .din1(grp_fu_1163_p1),
    .ce(grp_fu_1163_ce),
    .dout(grp_fu_1163_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1028(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1169_p0),
    .din1(grp_fu_1169_p1),
    .ce(grp_fu_1169_ce),
    .dout(grp_fu_1169_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1029(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1175_p0),
    .din1(grp_fu_1175_p1),
    .ce(grp_fu_1175_ce),
    .dout(grp_fu_1175_p2)
);

fft2DKernel_mul_29s_18s_46_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 29 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 46 ))
mul_29s_18s_46_2_1_U1030(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1181_p0),
    .din1(grp_fu_1181_p1),
    .ce(grp_fu_1181_ce),
    .dout(grp_fu_1181_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1049_11_reg_1496 <= icmp_ln1049_11_fu_443_p2;
        icmp_ln1049_4_reg_1453 <= icmp_ln1049_4_fu_306_p2;
        icmp_ln1049_5_reg_1458 <= icmp_ln1049_5_fu_312_p2;
        icmp_ln1049_7_reg_1468 <= icmp_ln1049_7_fu_357_p2;
        imagSinVal_1_reg_1521 <= imagSinVal_1_fu_754_p3;
        imagSinVal_2_reg_1531 <= imagSinVal_2_fu_953_p3;
        imagSinVal_reg_1511 <= imagSinVal_fu_567_p3;
        index_V_1_reg_1478 <= index_V_1_fu_392_p2;
        index_cos_V_1_reg_1447[3 : 1] <= index_cos_V_1_fu_292_p2[3 : 1];
        index_cos_V_2_reg_1485 <= index_cos_V_2_fu_398_p2;
        index_cos_V_reg_1426 <= index_cos_V_fu_218_p2;
        index_invert_control_imag_2_reg_1432 <= p_k[32'd2];
        p_k_read_reg_1371 <= p_k;
        p_read39_reg_1415 <= p_read;
        p_read39_reg_1415_pp0_iter1_reg <= p_read39_reg_1415;
        p_read_3_reg_1379 <= p_read7;
        p_read_3_reg_1379_pp0_iter1_reg <= p_read_3_reg_1379;
        p_read_4_reg_1384 <= p_read6;
        p_read_4_reg_1384_pp0_iter1_reg <= p_read_4_reg_1384;
        p_read_5_reg_1389 <= p_read5;
        p_read_5_reg_1389_pp0_iter1_reg <= p_read_5_reg_1389;
        p_read_6_reg_1394 <= p_read4;
        p_read_6_reg_1394_pp0_iter1_reg <= p_read_6_reg_1394;
        p_read_7_reg_1400 <= p_read3;
        p_read_7_reg_1400_pp0_iter1_reg <= p_read_7_reg_1400;
        p_read_8_reg_1405 <= p_read2;
        p_read_8_reg_1405_pp0_iter1_reg <= p_read_8_reg_1405;
        p_read_9_reg_1410 <= p_read1;
        p_read_9_reg_1410_pp0_iter1_reg <= p_read_9_reg_1410;
        realCosVal_1_reg_1526 <= realCosVal_1_fu_850_p3;
        realCosVal_2_reg_1536 <= realCosVal_2_fu_1050_p3;
        realCosVal_reg_1516 <= realCosVal_fu_670_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lut_out_imag_V_4_reg_1506 <= p_twiddleTable_M_imag_0_0_0_q6;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        mul_ln1245_1_reg_1674 <= grp_fu_1145_p2;
        mul_ln1245_2_reg_1694 <= grp_fu_1181_p2;
        mul_ln1245_reg_1654 <= grp_fu_1109_p2;
        mul_ln1246_1_reg_1644 <= grp_fu_1097_p2;
        mul_ln1246_2_reg_1664 <= grp_fu_1133_p2;
        mul_ln1246_3_reg_1684 <= grp_fu_1169_p2;
        mul_ln1246_reg_1629 <= grp_fu_1064_p2;
        mul_ln712_1_reg_1639 <= grp_fu_1091_p2;
        mul_ln712_2_reg_1649 <= grp_fu_1103_p2;
        mul_ln712_3_reg_1659 <= grp_fu_1127_p2;
        mul_ln712_4_reg_1669 <= grp_fu_1139_p2;
        mul_ln712_5_reg_1679 <= grp_fu_1163_p2;
        mul_ln712_6_reg_1689 <= grp_fu_1175_p2;
        mul_ln712_reg_1634 <= grp_fu_1073_p2;
        p_read39_reg_1415_pp0_iter2_reg <= p_read39_reg_1415_pp0_iter1_reg;
        p_read39_reg_1415_pp0_iter3_reg <= p_read39_reg_1415_pp0_iter2_reg;
        p_read_6_reg_1394_pp0_iter2_reg <= p_read_6_reg_1394_pp0_iter1_reg;
        p_read_6_reg_1394_pp0_iter3_reg <= p_read_6_reg_1394_pp0_iter2_reg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to3 = 1'b1;
    end else begin
        ap_idle_pp0_0to3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to3 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1064_ce = 1'b1;
    end else begin
        grp_fu_1064_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1073_ce = 1'b1;
    end else begin
        grp_fu_1073_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1091_ce = 1'b1;
    end else begin
        grp_fu_1091_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1097_ce = 1'b1;
    end else begin
        grp_fu_1097_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1103_ce = 1'b1;
    end else begin
        grp_fu_1103_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1109_ce = 1'b1;
    end else begin
        grp_fu_1109_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1127_ce = 1'b1;
    end else begin
        grp_fu_1127_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1133_ce = 1'b1;
    end else begin
        grp_fu_1133_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1139_ce = 1'b1;
    end else begin
        grp_fu_1139_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1145_ce = 1'b1;
    end else begin
        grp_fu_1145_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1163_ce = 1'b1;
    end else begin
        grp_fu_1163_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1169_ce = 1'b1;
    end else begin
        grp_fu_1169_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1175_ce = 1'b1;
    end else begin
        grp_fu_1175_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1181_ce = 1'b1;
    end else begin
        grp_fu_1181_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce0 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce1 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce2 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce3 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce4 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce5 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce5 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_ce) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_twiddleTable_M_imag_0_0_0_ce6 = 1'b1;
    end else begin
        p_twiddleTable_M_imag_0_0_0_ce6 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (1'b0 == ap_ce);
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_return_0 = {{ret_V_fu_1198_p2[45:16]}};

assign ap_return_1 = {{ret_V_49_fu_1239_p2[45:16]}};

assign ap_return_2 = {{ret_V_51_fu_1267_p2[45:16]}};

assign ap_return_3 = {{ret_V_53_fu_1295_p2[45:16]}};

assign ap_return_4 = {{ret_V_48_fu_1224_p2[45:16]}};

assign ap_return_5 = {{ret_V_50_fu_1253_p2[45:16]}};

assign ap_return_6 = {{ret_V_52_fu_1281_p2[45:16]}};

assign ap_return_7 = {{ret_V_54_fu_1309_p2[45:16]}};

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign grp_fu_1064_p1 = sext_ln1171_1_fu_1061_p1;

assign grp_fu_1073_p1 = sext_ln1171_1_fu_1061_p1;

assign grp_fu_1091_p0 = sext_ln1171_3_fu_1079_p1;

assign grp_fu_1091_p1 = sext_ln1171_4_fu_1082_p1;

assign grp_fu_1097_p0 = sext_ln1171_5_fu_1085_p1;

assign grp_fu_1097_p1 = sext_ln1171_6_fu_1088_p1;

assign grp_fu_1103_p0 = sext_ln1171_3_fu_1079_p1;

assign grp_fu_1103_p1 = sext_ln1171_6_fu_1088_p1;

assign grp_fu_1109_p0 = sext_ln1171_5_fu_1085_p1;

assign grp_fu_1109_p1 = sext_ln1171_4_fu_1082_p1;

assign grp_fu_1127_p0 = sext_ln1171_7_fu_1115_p1;

assign grp_fu_1127_p1 = sext_ln1171_8_fu_1118_p1;

assign grp_fu_1133_p0 = sext_ln1171_9_fu_1121_p1;

assign grp_fu_1133_p1 = sext_ln1171_10_fu_1124_p1;

assign grp_fu_1139_p0 = sext_ln1171_7_fu_1115_p1;

assign grp_fu_1139_p1 = sext_ln1171_10_fu_1124_p1;

assign grp_fu_1145_p0 = sext_ln1171_9_fu_1121_p1;

assign grp_fu_1145_p1 = sext_ln1171_8_fu_1118_p1;

assign grp_fu_1163_p0 = sext_ln1171_11_fu_1151_p1;

assign grp_fu_1163_p1 = sext_ln1171_12_fu_1154_p1;

assign grp_fu_1169_p0 = sext_ln1171_13_fu_1157_p1;

assign grp_fu_1169_p1 = sext_ln1171_14_fu_1160_p1;

assign grp_fu_1175_p0 = sext_ln1171_11_fu_1151_p1;

assign grp_fu_1175_p1 = sext_ln1171_14_fu_1160_p1;

assign grp_fu_1181_p0 = sext_ln1171_13_fu_1157_p1;

assign grp_fu_1181_p1 = sext_ln1171_12_fu_1154_p1;

assign icmp_ln1049_10_fu_968_p2 = ((index_cos_V_2_reg_1485 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln1049_11_fu_443_p2 = ((shl_ln315_fu_386_p2 == p_k) ? 1'b1 : 1'b0);

assign icmp_ln1049_1_fu_484_p2 = ((p_k_read_reg_1371 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1049_2_fu_582_p2 = ((index_cos_V_reg_1426 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln1049_3_fu_587_p2 = ((p_k_read_reg_1371 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_4_fu_306_p2 = ((index_V_fu_286_p2 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln1049_5_fu_312_p2 = ((index_V_fu_286_p2 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1049_6_fu_768_p2 = ((index_cos_V_1_reg_1447 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln1049_7_fu_357_p2 = ((index_V_fu_286_p2 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln1049_8_fu_865_p2 = ((index_V_1_reg_1478 == 4'd4) ? 1'b1 : 1'b0);

assign icmp_ln1049_9_fu_870_p2 = ((index_V_1_reg_1478 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln1049_fu_479_p2 = ((p_k_read_reg_1371 == 4'd4) ? 1'b1 : 1'b0);

assign imagSinVal_1_fu_754_p3 = ((index_invert_control_imag_2_reg_1432[0:0] == 1'b1) ? select_ln340_2_fu_746_p3 : temp_out_sin_V_2_fu_682_p3);

assign imagSinVal_2_fu_953_p3 = ((output_negate_control_imag_2_fu_858_p3[0:0] == 1'b1) ? select_ln340_4_fu_945_p3 : temp_out_sin_V_3_fu_881_p3);

assign imagSinVal_fu_567_p3 = ((output_negate_control_imag_fu_472_p3[0:0] == 1'b1) ? select_ln340_fu_559_p3 : temp_out_sin_V_fu_495_p3);

assign index_V_1_fu_392_p2 = (shl_ln315_fu_386_p2 - p_k);

assign index_V_fu_286_p2 = p_k << 4'd1;

assign index_cos_V_1_fu_292_p2 = ($signed(index_V_fu_286_p2) + $signed(4'd12));

assign index_cos_V_2_fu_398_p2 = ($signed(index_V_1_fu_392_p2) + $signed(4'd12));

assign index_cos_V_fu_218_p2 = ($signed(p_k) + $signed(4'd12));

assign index_invert_control_imag_1_fu_298_p3 = p_k[32'd1];

assign index_invert_control_imag_2_fu_224_p3 = p_k[32'd2];

assign index_invert_control_imag_fu_404_p3 = index_V_1_fu_392_p2[32'd2];

assign index_invert_control_real_V_1_fu_349_p3 = index_cos_V_1_fu_292_p2[32'd2];

assign index_invert_control_real_V_2_fu_435_p3 = index_cos_V_2_fu_398_p2[32'd2];

assign index_invert_control_real_V_fu_255_p3 = index_cos_V_fu_218_p2[32'd2];

assign lut_index_imag_V_1_fu_236_p2 = (2'd0 - lut_index_imag_V_fu_232_p1);

assign lut_index_imag_V_2_fu_242_p3 = ((index_invert_control_imag_2_fu_224_p3[0:0] == 1'b1) ? lut_index_imag_V_1_fu_236_p2 : lut_index_imag_V_fu_232_p1);

assign lut_index_imag_V_3_fu_322_p3 = {{trunc_ln674_fu_318_p1}, {1'd0}};

assign lut_index_imag_V_4_fu_330_p2 = (2'd0 - lut_index_imag_V_3_fu_322_p3);

assign lut_index_imag_V_5_fu_336_p3 = ((index_invert_control_imag_1_fu_298_p3[0:0] == 1'b1) ? lut_index_imag_V_4_fu_330_p2 : lut_index_imag_V_3_fu_322_p3);

assign lut_index_imag_V_6_fu_412_p1 = index_V_1_fu_392_p2[1:0];

assign lut_index_imag_V_7_fu_416_p2 = (2'd0 - lut_index_imag_V_6_fu_412_p1);

assign lut_index_imag_V_8_fu_422_p3 = ((index_invert_control_imag_fu_404_p3[0:0] == 1'b1) ? lut_index_imag_V_7_fu_416_p2 : lut_index_imag_V_6_fu_412_p1);

assign lut_index_imag_V_fu_232_p1 = p_k[1:0];

assign lut_index_real_V_1_fu_267_p2 = (2'd0 - lut_index_real_V_fu_263_p1);

assign lut_index_real_V_2_fu_273_p3 = ((index_invert_control_real_V_fu_255_p3[0:0] == 1'b1) ? lut_index_real_V_1_fu_267_p2 : lut_index_real_V_fu_263_p1);

assign lut_index_real_V_3_fu_363_p1 = index_cos_V_1_fu_292_p2[1:0];

assign lut_index_real_V_4_fu_367_p2 = (2'd0 - lut_index_real_V_3_fu_363_p1);

assign lut_index_real_V_5_fu_373_p3 = ((index_invert_control_real_V_1_fu_349_p3[0:0] == 1'b1) ? lut_index_real_V_4_fu_367_p2 : lut_index_real_V_3_fu_363_p1);

assign lut_index_real_V_6_fu_449_p1 = index_cos_V_2_fu_398_p2[1:0];

assign lut_index_real_V_7_fu_453_p2 = (2'd0 - lut_index_real_V_6_fu_449_p1);

assign lut_index_real_V_8_fu_459_p3 = ((index_invert_control_real_V_2_fu_435_p3[0:0] == 1'b1) ? lut_index_real_V_7_fu_453_p2 : lut_index_real_V_6_fu_449_p1);

assign lut_index_real_V_fu_263_p1 = index_cos_V_fu_218_p2[1:0];

assign output_negate_control_imag_2_fu_858_p3 = index_V_1_reg_1478[32'd3];

assign output_negate_control_imag_fu_472_p3 = p_k_read_reg_1371[32'd3];

assign output_negate_control_real_V_1_fu_761_p3 = index_cos_V_1_reg_1447[32'd3];

assign output_negate_control_real_V_2_fu_961_p3 = index_cos_V_2_reg_1485[32'd3];

assign output_negate_control_real_V_fu_575_p3 = index_cos_V_reg_1426[32'd3];

assign output_saturation_control_imag_1_fu_678_p2 = (icmp_ln1049_5_reg_1458 | icmp_ln1049_4_reg_1453);

assign output_saturation_control_imag_2_fu_875_p2 = (icmp_ln1049_9_fu_870_p2 | icmp_ln1049_8_fu_865_p2);

assign output_saturation_control_imag_fu_489_p2 = (icmp_ln1049_fu_479_p2 | icmp_ln1049_1_fu_484_p2);

assign output_saturation_control_real_V_1_fu_773_p2 = (icmp_ln1049_7_reg_1468 | icmp_ln1049_6_fu_768_p2);

assign output_saturation_control_real_V_2_fu_973_p2 = (icmp_ln1049_11_reg_1496 | icmp_ln1049_10_fu_968_p2);

assign output_saturation_control_real_V_fu_592_p2 = (icmp_ln1049_3_fu_587_p2 | icmp_ln1049_2_fu_582_p2);

assign overflow_1_fu_642_p2 = (xor_ln794_1_fu_636_p2 & p_Result_33_fu_628_p3);

assign overflow_2_fu_726_p2 = (xor_ln794_2_fu_720_p2 & p_Result_35_fu_712_p3);

assign overflow_3_fu_822_p2 = (xor_ln794_3_fu_816_p2 & p_Result_37_fu_808_p3);

assign overflow_4_fu_925_p2 = (xor_ln794_4_fu_919_p2 & p_Result_39_fu_911_p3);

assign overflow_5_fu_1022_p2 = (xor_ln794_5_fu_1016_p2 & p_Result_41_fu_1008_p3);

assign overflow_fu_539_p2 = (xor_ln794_fu_533_p2 & p_Result_31_fu_525_p3);

assign p_Result_31_fu_525_p3 = r_fu_507_p2[32'd17];

assign p_Result_32_fu_616_p3 = r_V_8_fu_610_p2[32'd18];

assign p_Result_33_fu_628_p3 = r_V_8_fu_610_p2[32'd17];

assign p_Result_34_fu_700_p3 = r_7_fu_694_p2[32'd18];

assign p_Result_35_fu_712_p3 = r_7_fu_694_p2[32'd17];

assign p_Result_36_fu_796_p3 = r_V_9_fu_790_p2[32'd18];

assign p_Result_37_fu_808_p3 = r_V_9_fu_790_p2[32'd17];

assign p_Result_38_fu_899_p3 = r_8_fu_893_p2[32'd18];

assign p_Result_39_fu_911_p3 = r_8_fu_893_p2[32'd17];

assign p_Result_40_fu_996_p3 = r_V_10_fu_990_p2[32'd18];

assign p_Result_41_fu_1008_p3 = r_V_10_fu_990_p2[32'd17];

assign p_Result_s_fu_513_p3 = r_fu_507_p2[32'd18];

assign p_Val2_10_fu_804_p1 = r_V_9_fu_790_p2[17:0];

assign p_Val2_13_fu_907_p1 = r_8_fu_893_p2[17:0];

assign p_Val2_16_fu_1004_p1 = r_V_10_fu_990_p2[17:0];

assign p_Val2_1_fu_521_p1 = r_fu_507_p2[17:0];

assign p_Val2_4_fu_624_p1 = r_V_8_fu_610_p2[17:0];

assign p_Val2_7_fu_708_p1 = r_7_fu_694_p2[17:0];

assign p_twiddleTable_M_imag_0_0_0_address0 = zext_ln573_5_fu_467_p1;

assign p_twiddleTable_M_imag_0_0_0_address1 = zext_ln573_4_fu_430_p1;

assign p_twiddleTable_M_imag_0_0_0_address2 = zext_ln573_3_fu_381_p1;

assign p_twiddleTable_M_imag_0_0_0_address3 = zext_ln573_2_fu_344_p1;

assign p_twiddleTable_M_imag_0_0_0_address4 = zext_ln573_1_fu_281_p1;

assign p_twiddleTable_M_imag_0_0_0_address5 = zext_ln573_fu_250_p1;

assign p_twiddleTable_M_imag_0_0_0_address6 = 64'd0;

assign r_7_fu_694_p2 = ($signed(19'd0) - $signed(sext_ln712_4_fu_690_p1));

assign r_8_fu_893_p2 = ($signed(19'd0) - $signed(sext_ln712_6_fu_889_p1));

assign r_V_10_fu_990_p2 = ($signed(19'd0) - $signed(sext_ln712_7_fu_986_p1));

assign r_V_1_fu_1213_p3 = {{p_read_6_reg_1394_pp0_iter3_reg}, {16'd0}};

assign r_V_8_fu_610_p2 = ($signed(19'd0) - $signed(sext_ln712_3_fu_606_p1));

assign r_V_9_fu_790_p2 = ($signed(19'd0) - $signed(sext_ln712_5_fu_786_p1));

assign r_V_fu_1187_p3 = {{p_read39_reg_1415_pp0_iter3_reg}, {16'd0}};

assign r_fu_507_p2 = ($signed(19'd0) - $signed(sext_ln712_2_fu_503_p1));

assign realCosVal_1_fu_850_p3 = ((output_negate_control_real_V_1_fu_761_p3[0:0] == 1'b1) ? select_ln340_3_fu_842_p3 : temp_out_cos_V_1_fu_778_p3);

assign realCosVal_2_fu_1050_p3 = ((output_negate_control_real_V_2_fu_961_p3[0:0] == 1'b1) ? select_ln340_5_fu_1042_p3 : temp_out_cos_V_2_fu_978_p3);

assign realCosVal_fu_670_p3 = ((output_negate_control_real_V_fu_575_p3[0:0] == 1'b1) ? select_ln340_1_fu_662_p3 : temp_out_cos_V_fu_598_p3);

assign ret_V_48_fu_1224_p2 = ($signed(mul_ln712_reg_1634) + $signed(sext_ln712_1_fu_1220_p1));

assign ret_V_49_fu_1239_p2 = (mul_ln712_1_reg_1639 - mul_ln1246_1_reg_1644);

assign ret_V_50_fu_1253_p2 = (mul_ln1245_reg_1654 + mul_ln712_2_reg_1649);

assign ret_V_51_fu_1267_p2 = (mul_ln712_3_reg_1659 - mul_ln1246_2_reg_1664);

assign ret_V_52_fu_1281_p2 = (mul_ln1245_1_reg_1674 + mul_ln712_4_reg_1669);

assign ret_V_53_fu_1295_p2 = (mul_ln712_5_reg_1679 - mul_ln1246_3_reg_1684);

assign ret_V_54_fu_1309_p2 = (mul_ln1245_2_reg_1694 + mul_ln712_6_reg_1689);

assign ret_V_fu_1198_p2 = ($signed(sext_ln712_fu_1194_p1) - $signed(mul_ln1246_reg_1629));

assign select_ln340_1_fu_662_p3 = ((xor_ln340_1_fu_648_p2[0:0] == 1'b1) ? select_ln384_1_fu_654_p3 : p_Val2_4_fu_624_p1);

assign select_ln340_2_fu_746_p3 = ((xor_ln340_2_fu_732_p2[0:0] == 1'b1) ? select_ln384_2_fu_738_p3 : p_Val2_7_fu_708_p1);

assign select_ln340_3_fu_842_p3 = ((xor_ln340_3_fu_828_p2[0:0] == 1'b1) ? select_ln384_3_fu_834_p3 : p_Val2_10_fu_804_p1);

assign select_ln340_4_fu_945_p3 = ((xor_ln340_4_fu_931_p2[0:0] == 1'b1) ? select_ln384_4_fu_937_p3 : p_Val2_13_fu_907_p1);

assign select_ln340_5_fu_1042_p3 = ((xor_ln340_5_fu_1028_p2[0:0] == 1'b1) ? select_ln384_5_fu_1034_p3 : p_Val2_16_fu_1004_p1);

assign select_ln340_fu_559_p3 = ((xor_ln340_fu_545_p2[0:0] == 1'b1) ? select_ln384_fu_551_p3 : p_Val2_1_fu_521_p1);

assign select_ln384_1_fu_654_p3 = ((overflow_1_fu_642_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln384_2_fu_738_p3 = ((overflow_2_fu_726_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln384_3_fu_834_p3 = ((overflow_3_fu_822_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln384_4_fu_937_p3 = ((overflow_4_fu_925_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln384_5_fu_1034_p3 = ((overflow_5_fu_1022_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign select_ln384_fu_551_p3 = ((overflow_fu_539_p2[0:0] == 1'b1) ? 18'd131071 : 18'd131072);

assign sext_ln1171_10_fu_1124_p1 = $signed(imagSinVal_1_reg_1521);

assign sext_ln1171_11_fu_1151_p1 = $signed(p_read_7_reg_1400_pp0_iter1_reg);

assign sext_ln1171_12_fu_1154_p1 = $signed(realCosVal_2_reg_1536);

assign sext_ln1171_13_fu_1157_p1 = $signed(p_read_3_reg_1379_pp0_iter1_reg);

assign sext_ln1171_14_fu_1160_p1 = $signed(imagSinVal_2_reg_1531);

assign sext_ln1171_1_fu_1061_p1 = $signed(lut_out_imag_V_4_reg_1506);

assign sext_ln1171_3_fu_1079_p1 = $signed(p_read_9_reg_1410_pp0_iter1_reg);

assign sext_ln1171_4_fu_1082_p1 = $signed(realCosVal_reg_1516);

assign sext_ln1171_5_fu_1085_p1 = $signed(p_read_5_reg_1389_pp0_iter1_reg);

assign sext_ln1171_6_fu_1088_p1 = $signed(imagSinVal_reg_1511);

assign sext_ln1171_7_fu_1115_p1 = $signed(p_read_8_reg_1405_pp0_iter1_reg);

assign sext_ln1171_8_fu_1118_p1 = $signed(realCosVal_1_reg_1526);

assign sext_ln1171_9_fu_1121_p1 = $signed(p_read_4_reg_1384_pp0_iter1_reg);

assign sext_ln712_1_fu_1220_p1 = $signed(r_V_1_fu_1213_p3);

assign sext_ln712_2_fu_503_p1 = temp_out_sin_V_fu_495_p3;

assign sext_ln712_3_fu_606_p1 = temp_out_cos_V_fu_598_p3;

assign sext_ln712_4_fu_690_p1 = temp_out_sin_V_2_fu_682_p3;

assign sext_ln712_5_fu_786_p1 = temp_out_cos_V_1_fu_778_p3;

assign sext_ln712_6_fu_889_p1 = temp_out_sin_V_3_fu_881_p3;

assign sext_ln712_7_fu_986_p1 = temp_out_cos_V_2_fu_978_p3;

assign sext_ln712_fu_1194_p1 = $signed(r_V_fu_1187_p3);

assign shl_ln315_fu_386_p2 = p_k << 4'd2;

assign temp_out_cos_V_1_fu_778_p3 = ((output_saturation_control_real_V_1_fu_773_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q2);

assign temp_out_cos_V_2_fu_978_p3 = ((output_saturation_control_real_V_2_fu_973_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q0);

assign temp_out_cos_V_fu_598_p3 = ((output_saturation_control_real_V_fu_592_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q4);

assign temp_out_sin_V_2_fu_682_p3 = ((output_saturation_control_imag_1_fu_678_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q3);

assign temp_out_sin_V_3_fu_881_p3 = ((output_saturation_control_imag_2_fu_875_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q1);

assign temp_out_sin_V_fu_495_p3 = ((output_saturation_control_imag_fu_489_p2[0:0] == 1'b1) ? 18'd196608 : p_twiddleTable_M_imag_0_0_0_q5);

assign trunc_ln674_fu_318_p1 = p_k[0:0];

assign xor_ln340_1_fu_648_p2 = (p_Result_33_fu_628_p3 ^ p_Result_32_fu_616_p3);

assign xor_ln340_2_fu_732_p2 = (p_Result_35_fu_712_p3 ^ p_Result_34_fu_700_p3);

assign xor_ln340_3_fu_828_p2 = (p_Result_37_fu_808_p3 ^ p_Result_36_fu_796_p3);

assign xor_ln340_4_fu_931_p2 = (p_Result_39_fu_911_p3 ^ p_Result_38_fu_899_p3);

assign xor_ln340_5_fu_1028_p2 = (p_Result_41_fu_1008_p3 ^ p_Result_40_fu_996_p3);

assign xor_ln340_fu_545_p2 = (p_Result_s_fu_513_p3 ^ p_Result_31_fu_525_p3);

assign xor_ln794_1_fu_636_p2 = (p_Result_32_fu_616_p3 ^ 1'd1);

assign xor_ln794_2_fu_720_p2 = (p_Result_34_fu_700_p3 ^ 1'd1);

assign xor_ln794_3_fu_816_p2 = (p_Result_36_fu_796_p3 ^ 1'd1);

assign xor_ln794_4_fu_919_p2 = (p_Result_38_fu_899_p3 ^ 1'd1);

assign xor_ln794_5_fu_1016_p2 = (p_Result_40_fu_996_p3 ^ 1'd1);

assign xor_ln794_fu_533_p2 = (p_Result_s_fu_513_p3 ^ 1'd1);

assign zext_ln573_1_fu_281_p1 = lut_index_real_V_2_fu_273_p3;

assign zext_ln573_2_fu_344_p1 = lut_index_imag_V_5_fu_336_p3;

assign zext_ln573_3_fu_381_p1 = lut_index_real_V_5_fu_373_p3;

assign zext_ln573_4_fu_430_p1 = lut_index_imag_V_8_fu_422_p3;

assign zext_ln573_5_fu_467_p1 = lut_index_real_V_8_fu_459_p3;

assign zext_ln573_fu_250_p1 = lut_index_imag_V_2_fu_242_p3;

always @ (posedge ap_clk) begin
    index_cos_V_1_reg_1447[0] <= 1'b0;
end

endmodule //fft2DKernel_twiddleFactorMulS2S_16_4_0_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_30_16_5_3_0_complex_ap_fixed_30_16_5_3_0_s
