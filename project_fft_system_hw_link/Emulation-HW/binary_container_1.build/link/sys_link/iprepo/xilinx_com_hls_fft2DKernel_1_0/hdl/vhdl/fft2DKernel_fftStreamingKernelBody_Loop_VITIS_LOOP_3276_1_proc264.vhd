-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft2DKernel_fftStreamingKernelBody_Loop_VITIS_LOOP_3276_1_proc264 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fftOutStrm_V_M_real_V_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_real_V_2_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_real_V_2_read : OUT STD_LOGIC;
    fftOutStrm_V_M_imag_V_2_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_imag_V_2_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_imag_V_2_read : OUT STD_LOGIC;
    fftOutStrm_V_M_real_V_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_real_V_1_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_real_V_1_read : OUT STD_LOGIC;
    fftOutStrm_V_M_imag_V_1_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_imag_V_1_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_imag_V_1_read : OUT STD_LOGIC;
    fftOutStrm_V_M_real_V_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_real_V_0_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_real_V_0_read : OUT STD_LOGIC;
    fftOutStrm_V_M_imag_V_0_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_imag_V_0_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_imag_V_0_read : OUT STD_LOGIC;
    fftOutStrm_V_M_real_V_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_real_V_3_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_real_V_3_read : OUT STD_LOGIC;
    fftOutStrm_V_M_imag_V_3_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    fftOutStrm_V_M_imag_V_3_empty_n : IN STD_LOGIC;
    fftOutStrm_V_M_imag_V_3_read : OUT STD_LOGIC;
    p_outDataArray_M_real_V_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_real_V_0_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_0_we0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_real_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_real_V_1_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_1_we0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_real_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_real_V_2_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_2_we0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_real_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_real_V_3_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_3_we0 : OUT STD_LOGIC;
    p_outDataArray_M_real_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_imag_V_0_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_imag_V_0_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_0_we0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_0_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_imag_V_1_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_imag_V_1_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_1_we0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_1_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_imag_V_2_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_imag_V_2_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_2_we0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_2_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_outDataArray_M_imag_V_3_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    p_outDataArray_M_imag_V_3_ce0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_3_we0 : OUT STD_LOGIC;
    p_outDataArray_M_imag_V_3_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of fft2DKernel_fftStreamingKernelBody_Loop_VITIS_LOOP_3276_1_proc264 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op41 : STD_LOGIC;
    signal icmp_ln3276_reg_425 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_reg_434 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_predicate_op41_read_state2 : BOOLEAN;
    signal io_acc_block_signal_op45 : STD_LOGIC;
    signal ap_predicate_op45_read_state2 : BOOLEAN;
    signal io_acc_block_signal_op49 : STD_LOGIC;
    signal ap_predicate_op49_read_state2 : BOOLEAN;
    signal io_acc_block_signal_op53 : STD_LOGIC;
    signal ap_predicate_op53_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln3276_fu_282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal fftOutStrm_V_M_real_V_0_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fftOutStrm_V_M_imag_V_0_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_real_V_1_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_imag_V_1_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_real_V_2_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_imag_V_2_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_real_V_3_blk_n : STD_LOGIC;
    signal fftOutStrm_V_M_imag_V_3_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln3277_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3277_reg_429 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln145_fu_311_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_04_0_0_0_i2_0_reg_230 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_p_15_0_0_0_i1_0_reg_247 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3276_fu_347_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal j_fu_82 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_load : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln3277_fu_315_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_fu_86 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_loop_init_pp0_iter1_reg : STD_LOGIC;
    signal ap_sig_allocacmp_i_load : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln3276_2_fu_340_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal indvar_flatten_fu_90 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_sig_allocacmp_indvar_flatten_load : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln3276_fu_288_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln3276_fu_303_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln3276_2_fu_334_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_220 : BOOLEAN;
    signal ap_condition_255 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component fft2DKernel_flow_control_loop_pipe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_U : component fft2DKernel_flow_control_loop_pipe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int,
        ap_continue => ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_220)) then
                i_fu_86 <= select_ln3276_2_fu_340_p3;
            end if;
        end if;
    end process;

    indvar_flatten_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_255)) then
                if ((icmp_ln3276_fu_282_p2 = ap_const_lv1_0)) then 
                    indvar_flatten_fu_90 <= add_ln3276_fu_288_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    indvar_flatten_fu_90 <= ap_const_lv5_0;
                end if;
            end if; 
        end if;
    end process;

    j_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_255)) then
                if ((icmp_ln3276_fu_282_p2 = ap_const_lv1_0)) then 
                    j_fu_82 <= add_ln3277_fu_315_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_82 <= ap_const_lv3_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                ap_loop_init_pp0_iter1_reg <= ap_loop_init;
                icmp_ln3276_reg_425 <= icmp_ln3276_fu_282_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln3276_fu_282_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln3277_reg_429 <= icmp_ln3277_fu_297_p2;
                trunc_ln145_reg_434 <= trunc_ln145_fu_311_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln3276_2_fu_334_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_load) + unsigned(ap_const_lv3_1));
    add_ln3276_fu_288_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_indvar_flatten_load) + unsigned(ap_const_lv5_1));
    add_ln3277_fu_315_p2 <= std_logic_vector(unsigned(select_ln3276_fu_303_p3) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, io_acc_block_signal_op41, ap_predicate_op41_read_state2, io_acc_block_signal_op45, ap_predicate_op45_read_state2, io_acc_block_signal_op49, ap_predicate_op49_read_state2, io_acc_block_signal_op53, ap_predicate_op53_read_state2, ap_start_int)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op49 = ap_const_logic_0)) or ((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op45 = ap_const_logic_0)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op41 = ap_const_logic_0)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op53 = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_done_reg, io_acc_block_signal_op41, ap_predicate_op41_read_state2, io_acc_block_signal_op45, ap_predicate_op45_read_state2, io_acc_block_signal_op49, ap_predicate_op49_read_state2, io_acc_block_signal_op53, ap_predicate_op53_read_state2, ap_start_int)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_done_reg = ap_const_logic_1) and (ap_start_int = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op49 = ap_const_logic_0)) or ((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op45 = ap_const_logic_0)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op41 = ap_const_logic_0)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op53 = ap_const_logic_0)))));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_done_reg)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_done_reg = ap_const_logic_1);
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(io_acc_block_signal_op41, ap_predicate_op41_read_state2, io_acc_block_signal_op45, ap_predicate_op45_read_state2, io_acc_block_signal_op49, ap_predicate_op49_read_state2, io_acc_block_signal_op53, ap_predicate_op53_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op49 = ap_const_logic_0)) or ((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op45 = ap_const_logic_0)) or ((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op41 = ap_const_logic_0)) or ((ap_predicate_op53_read_state2 = ap_const_boolean_1) and (io_acc_block_signal_op53 = ap_const_logic_0)));
    end process;


    ap_condition_220_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
                ap_condition_220 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_255_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_start_int)
    begin
                ap_condition_255 <= ((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, icmp_ln3276_fu_282_p2, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln3276_fu_282_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_done_reg, ap_block_pp0_stage0_subdone, ap_loop_exit_ready)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (fftOutStrm_V_M_real_V_3_blk_n and fftOutStrm_V_M_real_V_2_blk_n and fftOutStrm_V_M_real_V_1_blk_n and fftOutStrm_V_M_real_V_0_blk_n and fftOutStrm_V_M_imag_V_3_blk_n and fftOutStrm_V_M_imag_V_2_blk_n and fftOutStrm_V_M_imag_V_1_blk_n and fftOutStrm_V_M_imag_V_0_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);
    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8_assign_proc : process(fftOutStrm_V_M_real_V_2_dout, icmp_ln3276_reg_425, trunc_ln145_reg_434, fftOutStrm_V_M_real_V_1_dout, fftOutStrm_V_M_real_V_0_dout, fftOutStrm_V_M_real_V_3_dout, ap_phi_reg_pp0_iter1_p_04_0_0_0_i2_0_reg_230)
    begin
        if ((icmp_ln3276_reg_425 = ap_const_lv1_0)) then
            if ((trunc_ln145_reg_434 = ap_const_lv2_0)) then 
                ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= fftOutStrm_V_M_real_V_0_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_1)) then 
                ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= fftOutStrm_V_M_real_V_1_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_2)) then 
                ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= fftOutStrm_V_M_real_V_2_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_3)) then 
                ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= fftOutStrm_V_M_real_V_3_dout;
            else 
                ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= ap_phi_reg_pp0_iter1_p_04_0_0_0_i2_0_reg_230;
            end if;
        else 
            ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8 <= ap_phi_reg_pp0_iter1_p_04_0_0_0_i2_0_reg_230;
        end if; 
    end process;


    ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8_assign_proc : process(fftOutStrm_V_M_imag_V_2_dout, icmp_ln3276_reg_425, trunc_ln145_reg_434, fftOutStrm_V_M_imag_V_1_dout, fftOutStrm_V_M_imag_V_0_dout, fftOutStrm_V_M_imag_V_3_dout, ap_phi_reg_pp0_iter1_p_15_0_0_0_i1_0_reg_247)
    begin
        if ((icmp_ln3276_reg_425 = ap_const_lv1_0)) then
            if ((trunc_ln145_reg_434 = ap_const_lv2_0)) then 
                ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= fftOutStrm_V_M_imag_V_0_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_1)) then 
                ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= fftOutStrm_V_M_imag_V_1_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_2)) then 
                ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= fftOutStrm_V_M_imag_V_2_dout;
            elsif ((trunc_ln145_reg_434 = ap_const_lv2_3)) then 
                ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= fftOutStrm_V_M_imag_V_3_dout;
            else 
                ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= ap_phi_reg_pp0_iter1_p_15_0_0_0_i1_0_reg_247;
            end if;
        else 
            ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8 <= ap_phi_reg_pp0_iter1_p_15_0_0_0_i1_0_reg_247;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_p_04_0_0_0_i2_0_reg_230 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter1_p_15_0_0_0_i1_0_reg_247 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op41_read_state2_assign_proc : process(icmp_ln3276_reg_425, trunc_ln145_reg_434)
    begin
                ap_predicate_op41_read_state2 <= ((trunc_ln145_reg_434 = ap_const_lv2_2) and (icmp_ln3276_reg_425 = ap_const_lv1_0));
    end process;


    ap_predicate_op45_read_state2_assign_proc : process(icmp_ln3276_reg_425, trunc_ln145_reg_434)
    begin
                ap_predicate_op45_read_state2 <= ((trunc_ln145_reg_434 = ap_const_lv2_1) and (icmp_ln3276_reg_425 = ap_const_lv1_0));
    end process;


    ap_predicate_op49_read_state2_assign_proc : process(icmp_ln3276_reg_425, trunc_ln145_reg_434)
    begin
                ap_predicate_op49_read_state2 <= ((trunc_ln145_reg_434 = ap_const_lv2_0) and (icmp_ln3276_reg_425 = ap_const_lv1_0));
    end process;


    ap_predicate_op53_read_state2_assign_proc : process(icmp_ln3276_reg_425, trunc_ln145_reg_434)
    begin
                ap_predicate_op53_read_state2 <= ((trunc_ln145_reg_434 = ap_const_lv2_3) and (icmp_ln3276_reg_425 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, i_fu_86, ap_loop_init_pp0_iter1_reg)
    begin
        if (((ap_loop_init_pp0_iter1_reg = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_i_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_i_load <= i_fu_86;
        end if; 
    end process;


    ap_sig_allocacmp_indvar_flatten_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_loop_init, indvar_flatten_fu_90, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_indvar_flatten_load <= ap_const_lv5_0;
        else 
            ap_sig_allocacmp_indvar_flatten_load <= indvar_flatten_fu_90;
        end if; 
    end process;


    ap_sig_allocacmp_j_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_82, ap_loop_init, ap_start_int)
    begin
        if (((ap_loop_init = ap_const_logic_1) and (ap_start_int = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_j_load <= ap_const_lv3_0;
        else 
            ap_sig_allocacmp_j_load <= j_fu_82;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    fftOutStrm_V_M_imag_V_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_imag_V_0_empty_n, ap_predicate_op49_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_imag_V_0_blk_n <= fftOutStrm_V_M_imag_V_0_empty_n;
        else 
            fftOutStrm_V_M_imag_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_0_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op49_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_imag_V_0_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_imag_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_imag_V_1_empty_n, ap_predicate_op45_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_imag_V_1_blk_n <= fftOutStrm_V_M_imag_V_1_empty_n;
        else 
            fftOutStrm_V_M_imag_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op45_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_imag_V_1_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_imag_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_imag_V_2_empty_n, ap_predicate_op41_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_imag_V_2_blk_n <= fftOutStrm_V_M_imag_V_2_empty_n;
        else 
            fftOutStrm_V_M_imag_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op41_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_imag_V_2_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_imag_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_imag_V_3_empty_n, ap_predicate_op53_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_read_state2 = ap_const_boolean_1))) then 
            fftOutStrm_V_M_imag_V_3_blk_n <= fftOutStrm_V_M_imag_V_3_empty_n;
        else 
            fftOutStrm_V_M_imag_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_imag_V_3_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_read_state2 = ap_const_boolean_1))) then 
            fftOutStrm_V_M_imag_V_3_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_imag_V_3_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_0_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_real_V_0_empty_n, ap_predicate_op49_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_real_V_0_blk_n <= fftOutStrm_V_M_real_V_0_empty_n;
        else 
            fftOutStrm_V_M_real_V_0_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_0_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op49_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op49_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_real_V_0_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_real_V_0_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_1_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_real_V_1_empty_n, ap_predicate_op45_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_real_V_1_blk_n <= fftOutStrm_V_M_real_V_1_empty_n;
        else 
            fftOutStrm_V_M_real_V_1_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_1_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op45_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op45_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_real_V_1_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_real_V_1_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_2_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_real_V_2_empty_n, ap_predicate_op41_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            fftOutStrm_V_M_real_V_2_blk_n <= fftOutStrm_V_M_real_V_2_empty_n;
        else 
            fftOutStrm_V_M_real_V_2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op41_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op41_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            fftOutStrm_V_M_real_V_2_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_real_V_2_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_3_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, fftOutStrm_V_M_real_V_3_empty_n, ap_predicate_op53_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op53_read_state2 = ap_const_boolean_1))) then 
            fftOutStrm_V_M_real_V_3_blk_n <= fftOutStrm_V_M_real_V_3_empty_n;
        else 
            fftOutStrm_V_M_real_V_3_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutStrm_V_M_real_V_3_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op53_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op53_read_state2 = ap_const_boolean_1))) then 
            fftOutStrm_V_M_real_V_3_read <= ap_const_logic_1;
        else 
            fftOutStrm_V_M_real_V_3_read <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln3276_fu_282_p2 <= "1" when (ap_sig_allocacmp_indvar_flatten_load = ap_const_lv5_10) else "0";
    icmp_ln3277_fu_297_p2 <= "1" when (ap_sig_allocacmp_j_load = ap_const_lv3_4) else "0";
    io_acc_block_signal_op41 <= (fftOutStrm_V_M_real_V_2_empty_n and fftOutStrm_V_M_imag_V_2_empty_n);
    io_acc_block_signal_op45 <= (fftOutStrm_V_M_real_V_1_empty_n and fftOutStrm_V_M_imag_V_1_empty_n);
    io_acc_block_signal_op49 <= (fftOutStrm_V_M_real_V_0_empty_n and fftOutStrm_V_M_imag_V_0_empty_n);
    io_acc_block_signal_op53 <= (fftOutStrm_V_M_real_V_3_empty_n and fftOutStrm_V_M_imag_V_3_empty_n);
    p_outDataArray_M_imag_V_0_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_imag_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_0_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_0_d0 <= ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8;

    p_outDataArray_M_imag_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_0_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_1_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_1_d0 <= ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8;

    p_outDataArray_M_imag_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_1_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_2_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_2_d0 <= ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8;

    p_outDataArray_M_imag_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_2_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_3_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_imag_V_3_d0 <= ap_phi_mux_p_15_0_0_0_i1_0_phi_fu_250_p8;

    p_outDataArray_M_imag_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_imag_V_3_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_imag_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_0_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_real_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_0_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_0_d0 <= ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8;

    p_outDataArray_M_real_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_0_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_1_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_real_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_1_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_1_d0 <= ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8;

    p_outDataArray_M_real_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_1_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_2_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_real_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_2_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_2_d0 <= ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8;

    p_outDataArray_M_real_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_2_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_3_address0 <= zext_ln3276_fu_347_p1(2 - 1 downto 0);

    p_outDataArray_M_real_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_3_ce0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_outDataArray_M_real_V_3_d0 <= ap_phi_mux_p_04_0_0_0_i2_0_phi_fu_233_p8;

    p_outDataArray_M_real_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, trunc_ln145_reg_434, ap_block_pp0_stage0_11001)
    begin
        if (((trunc_ln145_reg_434 = ap_const_lv2_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_outDataArray_M_real_V_3_we0 <= ap_const_logic_1;
        else 
            p_outDataArray_M_real_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln3276_2_fu_340_p3 <= 
        add_ln3276_2_fu_334_p2 when (icmp_ln3277_reg_429(0) = '1') else 
        ap_sig_allocacmp_i_load;
    select_ln3276_fu_303_p3 <= 
        ap_const_lv3_0 when (icmp_ln3277_fu_297_p2(0) = '1') else 
        ap_sig_allocacmp_j_load;
    trunc_ln145_fu_311_p1 <= select_ln3276_fu_303_p3(2 - 1 downto 0);
    zext_ln3276_fu_347_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln3276_2_fu_340_p3),64));
end behav;
