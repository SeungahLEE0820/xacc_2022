// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft2DKernel_muxWideStreaming_2u_16u_16u_8u_complex_ap_fixed_27_13_5_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_inWideStream_0_0_0_0_0_0_dout,
        p_inWideStream_0_0_0_0_0_0_empty_n,
        p_inWideStream_0_0_0_0_0_0_read,
        p_inWideStream_0_0_0_0_0_01_dout,
        p_inWideStream_0_0_0_0_0_01_empty_n,
        p_inWideStream_0_0_0_0_0_01_read,
        p_inWideStream_0_0_0_0_0_02_dout,
        p_inWideStream_0_0_0_0_0_02_empty_n,
        p_inWideStream_0_0_0_0_0_02_read,
        p_inWideStream_0_0_0_0_0_03_dout,
        p_inWideStream_0_0_0_0_0_03_empty_n,
        p_inWideStream_0_0_0_0_0_03_read,
        p_inWideStream_0_0_0_0_0_04_dout,
        p_inWideStream_0_0_0_0_0_04_empty_n,
        p_inWideStream_0_0_0_0_0_04_read,
        p_inWideStream_0_0_0_0_0_05_dout,
        p_inWideStream_0_0_0_0_0_05_empty_n,
        p_inWideStream_0_0_0_0_0_05_read,
        p_inWideStream_0_0_0_0_0_06_dout,
        p_inWideStream_0_0_0_0_0_06_empty_n,
        p_inWideStream_0_0_0_0_0_06_read,
        p_inWideStream_0_0_0_0_0_07_dout,
        p_inWideStream_0_0_0_0_0_07_empty_n,
        p_inWideStream_0_0_0_0_0_07_read,
        p_inWideStream_0_0_1_0_0_0_dout,
        p_inWideStream_0_0_1_0_0_0_empty_n,
        p_inWideStream_0_0_1_0_0_0_read,
        p_inWideStream_0_0_1_0_0_016_dout,
        p_inWideStream_0_0_1_0_0_016_empty_n,
        p_inWideStream_0_0_1_0_0_016_read,
        p_inWideStream_0_0_1_0_0_017_dout,
        p_inWideStream_0_0_1_0_0_017_empty_n,
        p_inWideStream_0_0_1_0_0_017_read,
        p_inWideStream_0_0_1_0_0_018_dout,
        p_inWideStream_0_0_1_0_0_018_empty_n,
        p_inWideStream_0_0_1_0_0_018_read,
        p_inWideStream_0_0_1_0_0_019_dout,
        p_inWideStream_0_0_1_0_0_019_empty_n,
        p_inWideStream_0_0_1_0_0_019_read,
        p_inWideStream_0_0_1_0_0_020_dout,
        p_inWideStream_0_0_1_0_0_020_empty_n,
        p_inWideStream_0_0_1_0_0_020_read,
        p_inWideStream_0_0_1_0_0_021_dout,
        p_inWideStream_0_0_1_0_0_021_empty_n,
        p_inWideStream_0_0_1_0_0_021_read,
        p_inWideStream_0_0_1_0_0_022_dout,
        p_inWideStream_0_0_1_0_0_022_empty_n,
        p_inWideStream_0_0_1_0_0_022_read,
        p_inWideStream_0_0_0_0_0_018_dout,
        p_inWideStream_0_0_0_0_0_018_empty_n,
        p_inWideStream_0_0_0_0_0_018_read,
        p_inWideStream_0_0_0_0_0_019_dout,
        p_inWideStream_0_0_0_0_0_019_empty_n,
        p_inWideStream_0_0_0_0_0_019_read,
        p_inWideStream_0_0_0_0_0_0110_dout,
        p_inWideStream_0_0_0_0_0_0110_empty_n,
        p_inWideStream_0_0_0_0_0_0110_read,
        p_inWideStream_0_0_0_0_0_0111_dout,
        p_inWideStream_0_0_0_0_0_0111_empty_n,
        p_inWideStream_0_0_0_0_0_0111_read,
        p_inWideStream_0_0_0_0_0_0112_dout,
        p_inWideStream_0_0_0_0_0_0112_empty_n,
        p_inWideStream_0_0_0_0_0_0112_read,
        p_inWideStream_0_0_0_0_0_0113_dout,
        p_inWideStream_0_0_0_0_0_0113_empty_n,
        p_inWideStream_0_0_0_0_0_0113_read,
        p_inWideStream_0_0_0_0_0_0114_dout,
        p_inWideStream_0_0_0_0_0_0114_empty_n,
        p_inWideStream_0_0_0_0_0_0114_read,
        p_inWideStream_0_0_0_0_0_0115_dout,
        p_inWideStream_0_0_0_0_0_0115_empty_n,
        p_inWideStream_0_0_0_0_0_0115_read,
        p_inWideStream_0_0_1_0_0_02_dout,
        p_inWideStream_0_0_1_0_0_02_empty_n,
        p_inWideStream_0_0_1_0_0_02_read,
        p_inWideStream_0_0_1_0_0_0223_dout,
        p_inWideStream_0_0_1_0_0_0223_empty_n,
        p_inWideStream_0_0_1_0_0_0223_read,
        p_inWideStream_0_0_1_0_0_0224_dout,
        p_inWideStream_0_0_1_0_0_0224_empty_n,
        p_inWideStream_0_0_1_0_0_0224_read,
        p_inWideStream_0_0_1_0_0_0225_dout,
        p_inWideStream_0_0_1_0_0_0225_empty_n,
        p_inWideStream_0_0_1_0_0_0225_read,
        p_inWideStream_0_0_1_0_0_0226_dout,
        p_inWideStream_0_0_1_0_0_0226_empty_n,
        p_inWideStream_0_0_1_0_0_0226_read,
        p_inWideStream_0_0_1_0_0_0227_dout,
        p_inWideStream_0_0_1_0_0_0227_empty_n,
        p_inWideStream_0_0_1_0_0_0227_read,
        p_inWideStream_0_0_1_0_0_0228_dout,
        p_inWideStream_0_0_1_0_0_0228_empty_n,
        p_inWideStream_0_0_1_0_0_0228_read,
        p_inWideStream_0_0_1_0_0_0229_dout,
        p_inWideStream_0_0_1_0_0_0229_empty_n,
        p_inWideStream_0_0_1_0_0_0229_read,
        l_rowProcOutStream_din,
        l_rowProcOutStream_full_n,
        l_rowProcOutStream_write,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [26:0] p_inWideStream_0_0_0_0_0_0_dout;
input   p_inWideStream_0_0_0_0_0_0_empty_n;
output   p_inWideStream_0_0_0_0_0_0_read;
input  [26:0] p_inWideStream_0_0_0_0_0_01_dout;
input   p_inWideStream_0_0_0_0_0_01_empty_n;
output   p_inWideStream_0_0_0_0_0_01_read;
input  [26:0] p_inWideStream_0_0_0_0_0_02_dout;
input   p_inWideStream_0_0_0_0_0_02_empty_n;
output   p_inWideStream_0_0_0_0_0_02_read;
input  [26:0] p_inWideStream_0_0_0_0_0_03_dout;
input   p_inWideStream_0_0_0_0_0_03_empty_n;
output   p_inWideStream_0_0_0_0_0_03_read;
input  [26:0] p_inWideStream_0_0_0_0_0_04_dout;
input   p_inWideStream_0_0_0_0_0_04_empty_n;
output   p_inWideStream_0_0_0_0_0_04_read;
input  [26:0] p_inWideStream_0_0_0_0_0_05_dout;
input   p_inWideStream_0_0_0_0_0_05_empty_n;
output   p_inWideStream_0_0_0_0_0_05_read;
input  [26:0] p_inWideStream_0_0_0_0_0_06_dout;
input   p_inWideStream_0_0_0_0_0_06_empty_n;
output   p_inWideStream_0_0_0_0_0_06_read;
input  [26:0] p_inWideStream_0_0_0_0_0_07_dout;
input   p_inWideStream_0_0_0_0_0_07_empty_n;
output   p_inWideStream_0_0_0_0_0_07_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0_dout;
input   p_inWideStream_0_0_1_0_0_0_empty_n;
output   p_inWideStream_0_0_1_0_0_0_read;
input  [26:0] p_inWideStream_0_0_1_0_0_016_dout;
input   p_inWideStream_0_0_1_0_0_016_empty_n;
output   p_inWideStream_0_0_1_0_0_016_read;
input  [26:0] p_inWideStream_0_0_1_0_0_017_dout;
input   p_inWideStream_0_0_1_0_0_017_empty_n;
output   p_inWideStream_0_0_1_0_0_017_read;
input  [26:0] p_inWideStream_0_0_1_0_0_018_dout;
input   p_inWideStream_0_0_1_0_0_018_empty_n;
output   p_inWideStream_0_0_1_0_0_018_read;
input  [26:0] p_inWideStream_0_0_1_0_0_019_dout;
input   p_inWideStream_0_0_1_0_0_019_empty_n;
output   p_inWideStream_0_0_1_0_0_019_read;
input  [26:0] p_inWideStream_0_0_1_0_0_020_dout;
input   p_inWideStream_0_0_1_0_0_020_empty_n;
output   p_inWideStream_0_0_1_0_0_020_read;
input  [26:0] p_inWideStream_0_0_1_0_0_021_dout;
input   p_inWideStream_0_0_1_0_0_021_empty_n;
output   p_inWideStream_0_0_1_0_0_021_read;
input  [26:0] p_inWideStream_0_0_1_0_0_022_dout;
input   p_inWideStream_0_0_1_0_0_022_empty_n;
output   p_inWideStream_0_0_1_0_0_022_read;
input  [26:0] p_inWideStream_0_0_0_0_0_018_dout;
input   p_inWideStream_0_0_0_0_0_018_empty_n;
output   p_inWideStream_0_0_0_0_0_018_read;
input  [26:0] p_inWideStream_0_0_0_0_0_019_dout;
input   p_inWideStream_0_0_0_0_0_019_empty_n;
output   p_inWideStream_0_0_0_0_0_019_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0110_dout;
input   p_inWideStream_0_0_0_0_0_0110_empty_n;
output   p_inWideStream_0_0_0_0_0_0110_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0111_dout;
input   p_inWideStream_0_0_0_0_0_0111_empty_n;
output   p_inWideStream_0_0_0_0_0_0111_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0112_dout;
input   p_inWideStream_0_0_0_0_0_0112_empty_n;
output   p_inWideStream_0_0_0_0_0_0112_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0113_dout;
input   p_inWideStream_0_0_0_0_0_0113_empty_n;
output   p_inWideStream_0_0_0_0_0_0113_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0114_dout;
input   p_inWideStream_0_0_0_0_0_0114_empty_n;
output   p_inWideStream_0_0_0_0_0_0114_read;
input  [26:0] p_inWideStream_0_0_0_0_0_0115_dout;
input   p_inWideStream_0_0_0_0_0_0115_empty_n;
output   p_inWideStream_0_0_0_0_0_0115_read;
input  [26:0] p_inWideStream_0_0_1_0_0_02_dout;
input   p_inWideStream_0_0_1_0_0_02_empty_n;
output   p_inWideStream_0_0_1_0_0_02_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0223_dout;
input   p_inWideStream_0_0_1_0_0_0223_empty_n;
output   p_inWideStream_0_0_1_0_0_0223_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0224_dout;
input   p_inWideStream_0_0_1_0_0_0224_empty_n;
output   p_inWideStream_0_0_1_0_0_0224_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0225_dout;
input   p_inWideStream_0_0_1_0_0_0225_empty_n;
output   p_inWideStream_0_0_1_0_0_0225_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0226_dout;
input   p_inWideStream_0_0_1_0_0_0226_empty_n;
output   p_inWideStream_0_0_1_0_0_0226_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0227_dout;
input   p_inWideStream_0_0_1_0_0_0227_empty_n;
output   p_inWideStream_0_0_1_0_0_0227_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0228_dout;
input   p_inWideStream_0_0_1_0_0_0228_empty_n;
output   p_inWideStream_0_0_1_0_0_0228_read;
input  [26:0] p_inWideStream_0_0_1_0_0_0229_dout;
input   p_inWideStream_0_0_1_0_0_0229_empty_n;
output   p_inWideStream_0_0_1_0_0_0229_read;
output  [511:0] l_rowProcOutStream_din;
input   l_rowProcOutStream_full_n;
output   l_rowProcOutStream_write;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_inWideStream_0_0_0_0_0_0_read;
reg p_inWideStream_0_0_0_0_0_01_read;
reg p_inWideStream_0_0_0_0_0_02_read;
reg p_inWideStream_0_0_0_0_0_03_read;
reg p_inWideStream_0_0_0_0_0_04_read;
reg p_inWideStream_0_0_0_0_0_05_read;
reg p_inWideStream_0_0_0_0_0_06_read;
reg p_inWideStream_0_0_0_0_0_07_read;
reg p_inWideStream_0_0_1_0_0_0_read;
reg p_inWideStream_0_0_1_0_0_016_read;
reg p_inWideStream_0_0_1_0_0_017_read;
reg p_inWideStream_0_0_1_0_0_018_read;
reg p_inWideStream_0_0_1_0_0_019_read;
reg p_inWideStream_0_0_1_0_0_020_read;
reg p_inWideStream_0_0_1_0_0_021_read;
reg p_inWideStream_0_0_1_0_0_022_read;
reg p_inWideStream_0_0_0_0_0_018_read;
reg p_inWideStream_0_0_0_0_0_019_read;
reg p_inWideStream_0_0_0_0_0_0110_read;
reg p_inWideStream_0_0_0_0_0_0111_read;
reg p_inWideStream_0_0_0_0_0_0112_read;
reg p_inWideStream_0_0_0_0_0_0113_read;
reg p_inWideStream_0_0_0_0_0_0114_read;
reg p_inWideStream_0_0_0_0_0_0115_read;
reg p_inWideStream_0_0_1_0_0_02_read;
reg p_inWideStream_0_0_1_0_0_0223_read;
reg p_inWideStream_0_0_1_0_0_0224_read;
reg p_inWideStream_0_0_1_0_0_0225_read;
reg p_inWideStream_0_0_1_0_0_0226_read;
reg p_inWideStream_0_0_1_0_0_0227_read;
reg p_inWideStream_0_0_1_0_0_0228_read;
reg p_inWideStream_0_0_1_0_0_0229_read;
reg l_rowProcOutStream_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln54_fu_397_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    io_acc_block_signal_op55;
reg   [0:0] outStreamPtr2_reg_212;
wire    io_acc_block_signal_op73;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    p_inWideStream_0_0_0_0_0_0_blk_n;
wire    ap_block_pp0_stage0;
reg    p_inWideStream_0_0_0_0_0_01_blk_n;
reg    p_inWideStream_0_0_0_0_0_02_blk_n;
reg    p_inWideStream_0_0_0_0_0_03_blk_n;
reg    p_inWideStream_0_0_0_0_0_04_blk_n;
reg    p_inWideStream_0_0_0_0_0_05_blk_n;
reg    p_inWideStream_0_0_0_0_0_06_blk_n;
reg    p_inWideStream_0_0_0_0_0_07_blk_n;
reg    p_inWideStream_0_0_0_0_0_018_blk_n;
reg    p_inWideStream_0_0_0_0_0_019_blk_n;
reg    p_inWideStream_0_0_0_0_0_0110_blk_n;
reg    p_inWideStream_0_0_0_0_0_0111_blk_n;
reg    p_inWideStream_0_0_0_0_0_0112_blk_n;
reg    p_inWideStream_0_0_0_0_0_0113_blk_n;
reg    p_inWideStream_0_0_0_0_0_0114_blk_n;
reg    p_inWideStream_0_0_0_0_0_0115_blk_n;
reg    p_inWideStream_0_0_1_0_0_0_blk_n;
reg    p_inWideStream_0_0_1_0_0_016_blk_n;
reg    p_inWideStream_0_0_1_0_0_017_blk_n;
reg    p_inWideStream_0_0_1_0_0_018_blk_n;
reg    p_inWideStream_0_0_1_0_0_019_blk_n;
reg    p_inWideStream_0_0_1_0_0_020_blk_n;
reg    p_inWideStream_0_0_1_0_0_021_blk_n;
reg    p_inWideStream_0_0_1_0_0_022_blk_n;
reg    p_inWideStream_0_0_1_0_0_02_blk_n;
reg    p_inWideStream_0_0_1_0_0_0223_blk_n;
reg    p_inWideStream_0_0_1_0_0_0224_blk_n;
reg    p_inWideStream_0_0_1_0_0_0225_blk_n;
reg    p_inWideStream_0_0_1_0_0_0226_blk_n;
reg    p_inWideStream_0_0_1_0_0_0227_blk_n;
reg    p_inWideStream_0_0_1_0_0_0228_blk_n;
reg    p_inWideStream_0_0_1_0_0_0229_blk_n;
reg    l_rowProcOutStream_blk_n;
reg   [4:0] iter1_reg_227;
wire   [4:0] iter_fu_385_p2;
reg   [4:0] iter_reg_636;
wire   [0:0] outStreamPtr_fu_391_p2;
reg   [0:0] outStreamPtr_reg_641;
reg   [0:0] icmp_ln54_reg_646;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [0:0] ap_phi_mux_outStreamPtr2_phi_fu_216_p6;
reg   [4:0] ap_phi_mux_iter1_phi_fu_231_p6;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_7_0_phi_fu_244_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_7_0_reg_241;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_6_0_phi_fu_253_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_6_0_reg_250;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_5_0_phi_fu_262_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_5_0_reg_259;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_4_0_phi_fu_271_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_4_0_reg_268;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_3_0_phi_fu_280_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_3_0_reg_277;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_2_0_phi_fu_289_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_2_0_reg_286;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_1_0_phi_fu_298_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_1_0_reg_295;
reg   [26:0] ap_phi_mux_p_0_12_0_0_0_0_0_phi_fu_307_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_12_0_0_0_0_0_reg_304;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_7_0_phi_fu_316_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_7_0_reg_313;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_6_0_phi_fu_325_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_6_0_reg_322;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_5_0_phi_fu_334_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_5_0_reg_331;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_4_0_phi_fu_343_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_4_0_reg_340;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_3_0_phi_fu_352_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_3_0_reg_349;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_2_0_phi_fu_361_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_2_0_reg_358;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_1_0_phi_fu_370_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_1_0_reg_367;
reg   [26:0] ap_phi_mux_p_0_01_0_0_0_0_0_phi_fu_379_p4;
wire   [26:0] ap_phi_reg_pp0_iter1_p_0_01_0_0_0_0_0_reg_376;
reg    ap_block_pp0_stage0_01001;
wire   [506:0] tmp_fu_563_p32;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_200;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln54_reg_646 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        iter1_reg_227 <= iter_reg_636;
    end else if ((((icmp_ln54_reg_646 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        iter1_reg_227 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_646 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        outStreamPtr2_reg_212 <= outStreamPtr_reg_641;
    end else if ((((icmp_ln54_reg_646 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        outStreamPtr2_reg_212 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln54_reg_646 <= icmp_ln54_fu_397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        iter_reg_636 <= iter_fu_385_p2;
        outStreamPtr_reg_641 <= outStreamPtr_fu_391_p2;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln54_reg_646 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_200)) begin
        if ((icmp_ln54_reg_646 == 1'd1)) begin
            ap_phi_mux_iter1_phi_fu_231_p6 = 5'd0;
        end else if ((icmp_ln54_reg_646 == 1'd0)) begin
            ap_phi_mux_iter1_phi_fu_231_p6 = iter_reg_636;
        end else begin
            ap_phi_mux_iter1_phi_fu_231_p6 = iter1_reg_227;
        end
    end else begin
        ap_phi_mux_iter1_phi_fu_231_p6 = iter1_reg_227;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_200)) begin
        if ((icmp_ln54_reg_646 == 1'd1)) begin
            ap_phi_mux_outStreamPtr2_phi_fu_216_p6 = 1'd0;
        end else if ((icmp_ln54_reg_646 == 1'd0)) begin
            ap_phi_mux_outStreamPtr2_phi_fu_216_p6 = outStreamPtr_reg_641;
        end else begin
            ap_phi_mux_outStreamPtr2_phi_fu_216_p6 = outStreamPtr2_reg_212;
        end
    end else begin
        ap_phi_mux_outStreamPtr2_phi_fu_216_p6 = outStreamPtr2_reg_212;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_0_0_phi_fu_379_p4 = p_inWideStream_0_0_0_0_0_0_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_0_0_phi_fu_379_p4 = p_inWideStream_0_0_0_0_0_018_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_0_0_phi_fu_379_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_0_0_reg_376;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_1_0_phi_fu_370_p4 = p_inWideStream_0_0_0_0_0_01_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_1_0_phi_fu_370_p4 = p_inWideStream_0_0_0_0_0_019_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_1_0_phi_fu_370_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_1_0_reg_367;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_2_0_phi_fu_361_p4 = p_inWideStream_0_0_0_0_0_02_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_2_0_phi_fu_361_p4 = p_inWideStream_0_0_0_0_0_0110_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_2_0_phi_fu_361_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_2_0_reg_358;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_3_0_phi_fu_352_p4 = p_inWideStream_0_0_0_0_0_03_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_3_0_phi_fu_352_p4 = p_inWideStream_0_0_0_0_0_0111_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_3_0_phi_fu_352_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_3_0_reg_349;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_4_0_phi_fu_343_p4 = p_inWideStream_0_0_0_0_0_04_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_4_0_phi_fu_343_p4 = p_inWideStream_0_0_0_0_0_0112_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_4_0_phi_fu_343_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_4_0_reg_340;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_5_0_phi_fu_334_p4 = p_inWideStream_0_0_0_0_0_05_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_5_0_phi_fu_334_p4 = p_inWideStream_0_0_0_0_0_0113_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_5_0_phi_fu_334_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_5_0_reg_331;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_6_0_phi_fu_325_p4 = p_inWideStream_0_0_0_0_0_06_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_6_0_phi_fu_325_p4 = p_inWideStream_0_0_0_0_0_0114_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_6_0_phi_fu_325_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_6_0_reg_322;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_01_0_0_0_7_0_phi_fu_316_p4 = p_inWideStream_0_0_0_0_0_07_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_01_0_0_0_7_0_phi_fu_316_p4 = p_inWideStream_0_0_0_0_0_0115_dout;
    end else begin
        ap_phi_mux_p_0_01_0_0_0_7_0_phi_fu_316_p4 = ap_phi_reg_pp0_iter1_p_0_01_0_0_0_7_0_reg_313;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_0_0_phi_fu_307_p4 = p_inWideStream_0_0_1_0_0_0_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_0_0_phi_fu_307_p4 = p_inWideStream_0_0_1_0_0_02_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_0_0_phi_fu_307_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_0_0_reg_304;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_1_0_phi_fu_298_p4 = p_inWideStream_0_0_1_0_0_016_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_1_0_phi_fu_298_p4 = p_inWideStream_0_0_1_0_0_0223_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_1_0_phi_fu_298_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_1_0_reg_295;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_2_0_phi_fu_289_p4 = p_inWideStream_0_0_1_0_0_017_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_2_0_phi_fu_289_p4 = p_inWideStream_0_0_1_0_0_0224_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_2_0_phi_fu_289_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_2_0_reg_286;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_3_0_phi_fu_280_p4 = p_inWideStream_0_0_1_0_0_018_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_3_0_phi_fu_280_p4 = p_inWideStream_0_0_1_0_0_0225_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_3_0_phi_fu_280_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_3_0_reg_277;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_4_0_phi_fu_271_p4 = p_inWideStream_0_0_1_0_0_019_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_4_0_phi_fu_271_p4 = p_inWideStream_0_0_1_0_0_0226_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_4_0_phi_fu_271_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_4_0_reg_268;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_5_0_phi_fu_262_p4 = p_inWideStream_0_0_1_0_0_020_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_5_0_phi_fu_262_p4 = p_inWideStream_0_0_1_0_0_0227_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_5_0_phi_fu_262_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_5_0_reg_259;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_6_0_phi_fu_253_p4 = p_inWideStream_0_0_1_0_0_021_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_6_0_phi_fu_253_p4 = p_inWideStream_0_0_1_0_0_0228_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_6_0_phi_fu_253_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_6_0_reg_250;
    end
end

always @ (*) begin
    if ((outStreamPtr2_reg_212 == 1'd0)) begin
        ap_phi_mux_p_0_12_0_0_0_7_0_phi_fu_244_p4 = p_inWideStream_0_0_1_0_0_022_dout;
    end else if ((outStreamPtr2_reg_212 == 1'd1)) begin
        ap_phi_mux_p_0_12_0_0_0_7_0_phi_fu_244_p4 = p_inWideStream_0_0_1_0_0_0229_dout;
    end else begin
        ap_phi_mux_p_0_12_0_0_0_7_0_phi_fu_244_p4 = ap_phi_reg_pp0_iter1_p_0_12_0_0_0_7_0_reg_241;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_397_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        l_rowProcOutStream_blk_n = l_rowProcOutStream_full_n;
    end else begin
        l_rowProcOutStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        l_rowProcOutStream_write = 1'b1;
    end else begin
        l_rowProcOutStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0110_blk_n = p_inWideStream_0_0_0_0_0_0110_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0110_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0110_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0110_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0111_blk_n = p_inWideStream_0_0_0_0_0_0111_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0111_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0111_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0111_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0112_blk_n = p_inWideStream_0_0_0_0_0_0112_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0112_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0112_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0112_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0113_blk_n = p_inWideStream_0_0_0_0_0_0113_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0113_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0113_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0113_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0114_blk_n = p_inWideStream_0_0_0_0_0_0114_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0114_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0114_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0114_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0115_blk_n = p_inWideStream_0_0_0_0_0_0115_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0115_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_0115_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0115_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_018_blk_n = p_inWideStream_0_0_0_0_0_018_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_018_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_018_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_019_blk_n = p_inWideStream_0_0_0_0_0_019_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_019_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_0_0_0_019_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_019_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_01_blk_n = p_inWideStream_0_0_0_0_0_01_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_01_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_01_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_02_blk_n = p_inWideStream_0_0_0_0_0_02_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_02_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_02_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_02_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_03_blk_n = p_inWideStream_0_0_0_0_0_03_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_03_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_03_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_03_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_04_blk_n = p_inWideStream_0_0_0_0_0_04_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_04_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_04_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_04_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_05_blk_n = p_inWideStream_0_0_0_0_0_05_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_05_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_05_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_05_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_06_blk_n = p_inWideStream_0_0_0_0_0_06_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_06_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_06_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_06_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_07_blk_n = p_inWideStream_0_0_0_0_0_07_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_07_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_07_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_07_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_0_blk_n = p_inWideStream_0_0_0_0_0_0_empty_n;
    end else begin
        p_inWideStream_0_0_0_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_0_0_0_0_read = 1'b1;
    end else begin
        p_inWideStream_0_0_0_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_016_blk_n = p_inWideStream_0_0_1_0_0_016_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_016_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_016_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_016_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_017_blk_n = p_inWideStream_0_0_1_0_0_017_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_017_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_017_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_017_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_018_blk_n = p_inWideStream_0_0_1_0_0_018_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_018_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_018_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_019_blk_n = p_inWideStream_0_0_1_0_0_019_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_019_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_019_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_019_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_020_blk_n = p_inWideStream_0_0_1_0_0_020_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_020_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_020_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_020_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_021_blk_n = p_inWideStream_0_0_1_0_0_021_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_021_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_021_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_021_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0223_blk_n = p_inWideStream_0_0_1_0_0_0223_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0223_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0223_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0223_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0224_blk_n = p_inWideStream_0_0_1_0_0_0224_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0224_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0224_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0224_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0225_blk_n = p_inWideStream_0_0_1_0_0_0225_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0225_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0225_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0225_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0226_blk_n = p_inWideStream_0_0_1_0_0_0226_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0226_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0226_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0226_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0227_blk_n = p_inWideStream_0_0_1_0_0_0227_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0227_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0227_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0227_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0228_blk_n = p_inWideStream_0_0_1_0_0_0228_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0228_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0228_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0228_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0229_blk_n = p_inWideStream_0_0_1_0_0_0229_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0229_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_0229_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0229_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_022_blk_n = p_inWideStream_0_0_1_0_0_022_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_022_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_022_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_022_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_02_blk_n = p_inWideStream_0_0_1_0_0_02_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_02_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd1))) begin
        p_inWideStream_0_0_1_0_0_02_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_02_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_0_blk_n = p_inWideStream_0_0_1_0_0_0_empty_n;
    end else begin
        p_inWideStream_0_0_1_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (outStreamPtr2_reg_212 == 1'd0))) begin
        p_inWideStream_0_0_1_0_0_0_read = 1'b1;
    end else begin
        p_inWideStream_0_0_1_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((l_rowProcOutStream_full_n == 1'b0) | ((io_acc_block_signal_op73 == 1'b0) & (outStreamPtr2_reg_212 == 1'd1)) | ((outStreamPtr2_reg_212 == 1'd0) & (io_acc_block_signal_op55 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((l_rowProcOutStream_full_n == 1'b0) | ((io_acc_block_signal_op73 == 1'b0) & (outStreamPtr2_reg_212 == 1'd1)) | ((outStreamPtr2_reg_212 == 1'd0) & (io_acc_block_signal_op55 == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((l_rowProcOutStream_full_n == 1'b0) | ((io_acc_block_signal_op73 == 1'b0) & (outStreamPtr2_reg_212 == 1'd1)) | ((outStreamPtr2_reg_212 == 1'd0) & (io_acc_block_signal_op55 == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((l_rowProcOutStream_full_n == 1'b0) | ((io_acc_block_signal_op73 == 1'b0) & (outStreamPtr2_reg_212 == 1'd1)) | ((outStreamPtr2_reg_212 == 1'd0) & (io_acc_block_signal_op55 == 1'b0)));
end

always @ (*) begin
    ap_condition_200 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (p_inWideStream_0_0_1_0_0_0_blk_n & p_inWideStream_0_0_1_0_0_02_blk_n & p_inWideStream_0_0_1_0_0_022_blk_n & p_inWideStream_0_0_1_0_0_0229_blk_n & p_inWideStream_0_0_1_0_0_0228_blk_n & p_inWideStream_0_0_1_0_0_0227_blk_n & p_inWideStream_0_0_1_0_0_0226_blk_n & p_inWideStream_0_0_1_0_0_0225_blk_n & p_inWideStream_0_0_1_0_0_0224_blk_n & p_inWideStream_0_0_1_0_0_0223_blk_n & p_inWideStream_0_0_1_0_0_021_blk_n & p_inWideStream_0_0_1_0_0_020_blk_n & p_inWideStream_0_0_1_0_0_019_blk_n & p_inWideStream_0_0_1_0_0_018_blk_n & p_inWideStream_0_0_1_0_0_017_blk_n & p_inWideStream_0_0_1_0_0_016_blk_n & p_inWideStream_0_0_0_0_0_0_blk_n & p_inWideStream_0_0_0_0_0_07_blk_n & p_inWideStream_0_0_0_0_0_06_blk_n & p_inWideStream_0_0_0_0_0_05_blk_n & p_inWideStream_0_0_0_0_0_04_blk_n & p_inWideStream_0_0_0_0_0_03_blk_n & p_inWideStream_0_0_0_0_0_02_blk_n & p_inWideStream_0_0_0_0_0_01_blk_n & p_inWideStream_0_0_0_0_0_019_blk_n & p_inWideStream_0_0_0_0_0_018_blk_n & p_inWideStream_0_0_0_0_0_0115_blk_n & p_inWideStream_0_0_0_0_0_0114_blk_n & p_inWideStream_0_0_0_0_0_0113_blk_n & p_inWideStream_0_0_0_0_0_0112_blk_n & p_inWideStream_0_0_0_0_0_0111_blk_n & p_inWideStream_0_0_0_0_0_0110_blk_n & l_rowProcOutStream_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_0_0_reg_376 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_1_0_reg_367 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_2_0_reg_358 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_3_0_reg_349 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_4_0_reg_340 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_5_0_reg_331 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_6_0_reg_322 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_01_0_0_0_7_0_reg_313 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_0_0_reg_304 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_1_0_reg_295 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_2_0_reg_286 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_3_0_reg_277 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_4_0_reg_268 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_5_0_reg_259 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_6_0_reg_250 = 'bx;

assign ap_phi_reg_pp0_iter1_p_0_12_0_0_0_7_0_reg_241 = 'bx;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign icmp_ln54_fu_397_p2 = ((ap_phi_mux_iter1_phi_fu_231_p6 == 5'd31) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op55 = (p_inWideStream_0_0_1_0_0_0_empty_n & p_inWideStream_0_0_1_0_0_022_empty_n & p_inWideStream_0_0_1_0_0_021_empty_n & p_inWideStream_0_0_1_0_0_020_empty_n & p_inWideStream_0_0_1_0_0_019_empty_n & p_inWideStream_0_0_1_0_0_018_empty_n & p_inWideStream_0_0_1_0_0_017_empty_n & p_inWideStream_0_0_1_0_0_016_empty_n & p_inWideStream_0_0_0_0_0_0_empty_n & p_inWideStream_0_0_0_0_0_07_empty_n & p_inWideStream_0_0_0_0_0_06_empty_n & p_inWideStream_0_0_0_0_0_05_empty_n & p_inWideStream_0_0_0_0_0_04_empty_n & p_inWideStream_0_0_0_0_0_03_empty_n & p_inWideStream_0_0_0_0_0_02_empty_n & p_inWideStream_0_0_0_0_0_01_empty_n);

assign io_acc_block_signal_op73 = (p_inWideStream_0_0_1_0_0_02_empty_n & p_inWideStream_0_0_1_0_0_0229_empty_n & p_inWideStream_0_0_1_0_0_0228_empty_n & p_inWideStream_0_0_1_0_0_0227_empty_n & p_inWideStream_0_0_1_0_0_0226_empty_n & p_inWideStream_0_0_1_0_0_0225_empty_n & p_inWideStream_0_0_1_0_0_0224_empty_n & p_inWideStream_0_0_1_0_0_0223_empty_n & p_inWideStream_0_0_0_0_0_019_empty_n & p_inWideStream_0_0_0_0_0_018_empty_n & p_inWideStream_0_0_0_0_0_0115_empty_n & p_inWideStream_0_0_0_0_0_0114_empty_n & p_inWideStream_0_0_0_0_0_0113_empty_n & p_inWideStream_0_0_0_0_0_0112_empty_n & p_inWideStream_0_0_0_0_0_0111_empty_n & p_inWideStream_0_0_0_0_0_0110_empty_n);

assign iter_fu_385_p2 = (ap_phi_mux_iter1_phi_fu_231_p6 + 5'd1);

assign l_rowProcOutStream_din = tmp_fu_563_p32;

assign outStreamPtr_fu_391_p2 = (ap_phi_mux_outStreamPtr2_phi_fu_216_p6 ^ 1'd1);

assign tmp_fu_563_p32 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{ap_phi_mux_p_0_12_0_0_0_7_0_phi_fu_244_p4}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_7_0_phi_fu_316_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_6_0_phi_fu_253_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_6_0_phi_fu_325_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_5_0_phi_fu_262_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_5_0_phi_fu_334_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_4_0_phi_fu_271_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_4_0_phi_fu_343_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_3_0_phi_fu_280_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_3_0_phi_fu_352_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_2_0_phi_fu_289_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_2_0_phi_fu_361_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_1_0_phi_fu_298_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_1_0_phi_fu_370_p4}}, {5'd0}}, {ap_phi_mux_p_0_12_0_0_0_0_0_phi_fu_307_p4}}, {5'd0}}, {ap_phi_mux_p_0_01_0_0_0_0_0_phi_fu_379_p4}};

endmodule //fft2DKernel_muxWideStreaming_2u_16u_16u_8u_complex_ap_fixed_27_13_5_3_0_s
