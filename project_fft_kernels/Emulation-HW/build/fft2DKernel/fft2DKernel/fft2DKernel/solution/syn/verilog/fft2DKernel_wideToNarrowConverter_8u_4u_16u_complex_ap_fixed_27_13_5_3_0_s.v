// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft2DKernel_wideToNarrowConverter_8u_4u_16u_complex_ap_fixed_27_13_5_3_0_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_wideStreamIn_0_0_0_0_0_0_dout,
        p_wideStreamIn_0_0_0_0_0_0_empty_n,
        p_wideStreamIn_0_0_0_0_0_0_read,
        p_wideStreamIn_0_0_0_0_0_01_dout,
        p_wideStreamIn_0_0_0_0_0_01_empty_n,
        p_wideStreamIn_0_0_0_0_0_01_read,
        p_wideStreamIn_0_0_0_0_0_02_dout,
        p_wideStreamIn_0_0_0_0_0_02_empty_n,
        p_wideStreamIn_0_0_0_0_0_02_read,
        p_wideStreamIn_0_0_0_0_0_03_dout,
        p_wideStreamIn_0_0_0_0_0_03_empty_n,
        p_wideStreamIn_0_0_0_0_0_03_read,
        p_wideStreamIn_0_0_0_0_0_04_dout,
        p_wideStreamIn_0_0_0_0_0_04_empty_n,
        p_wideStreamIn_0_0_0_0_0_04_read,
        p_wideStreamIn_0_0_0_0_0_05_dout,
        p_wideStreamIn_0_0_0_0_0_05_empty_n,
        p_wideStreamIn_0_0_0_0_0_05_read,
        p_wideStreamIn_0_0_0_0_0_06_dout,
        p_wideStreamIn_0_0_0_0_0_06_empty_n,
        p_wideStreamIn_0_0_0_0_0_06_read,
        p_wideStreamIn_0_0_0_0_0_07_dout,
        p_wideStreamIn_0_0_0_0_0_07_empty_n,
        p_wideStreamIn_0_0_0_0_0_07_read,
        p_wideStreamIn_0_0_1_0_0_0_dout,
        p_wideStreamIn_0_0_1_0_0_0_empty_n,
        p_wideStreamIn_0_0_1_0_0_0_read,
        p_wideStreamIn_0_0_1_0_0_016_dout,
        p_wideStreamIn_0_0_1_0_0_016_empty_n,
        p_wideStreamIn_0_0_1_0_0_016_read,
        p_wideStreamIn_0_0_1_0_0_017_dout,
        p_wideStreamIn_0_0_1_0_0_017_empty_n,
        p_wideStreamIn_0_0_1_0_0_017_read,
        p_wideStreamIn_0_0_1_0_0_018_dout,
        p_wideStreamIn_0_0_1_0_0_018_empty_n,
        p_wideStreamIn_0_0_1_0_0_018_read,
        p_wideStreamIn_0_0_1_0_0_019_dout,
        p_wideStreamIn_0_0_1_0_0_019_empty_n,
        p_wideStreamIn_0_0_1_0_0_019_read,
        p_wideStreamIn_0_0_1_0_0_020_dout,
        p_wideStreamIn_0_0_1_0_0_020_empty_n,
        p_wideStreamIn_0_0_1_0_0_020_read,
        p_wideStreamIn_0_0_1_0_0_021_dout,
        p_wideStreamIn_0_0_1_0_0_021_empty_n,
        p_wideStreamIn_0_0_1_0_0_021_read,
        p_wideStreamIn_0_0_1_0_0_022_dout,
        p_wideStreamIn_0_0_1_0_0_022_empty_n,
        p_wideStreamIn_0_0_1_0_0_022_read,
        ssrWideStream4kernelIn_din,
        ssrWideStream4kernelIn_full_n,
        ssrWideStream4kernelIn_write,
        start_out,
        start_write,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [26:0] p_wideStreamIn_0_0_0_0_0_0_dout;
input   p_wideStreamIn_0_0_0_0_0_0_empty_n;
output   p_wideStreamIn_0_0_0_0_0_0_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_01_dout;
input   p_wideStreamIn_0_0_0_0_0_01_empty_n;
output   p_wideStreamIn_0_0_0_0_0_01_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_02_dout;
input   p_wideStreamIn_0_0_0_0_0_02_empty_n;
output   p_wideStreamIn_0_0_0_0_0_02_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_03_dout;
input   p_wideStreamIn_0_0_0_0_0_03_empty_n;
output   p_wideStreamIn_0_0_0_0_0_03_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_04_dout;
input   p_wideStreamIn_0_0_0_0_0_04_empty_n;
output   p_wideStreamIn_0_0_0_0_0_04_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_05_dout;
input   p_wideStreamIn_0_0_0_0_0_05_empty_n;
output   p_wideStreamIn_0_0_0_0_0_05_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_06_dout;
input   p_wideStreamIn_0_0_0_0_0_06_empty_n;
output   p_wideStreamIn_0_0_0_0_0_06_read;
input  [26:0] p_wideStreamIn_0_0_0_0_0_07_dout;
input   p_wideStreamIn_0_0_0_0_0_07_empty_n;
output   p_wideStreamIn_0_0_0_0_0_07_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_0_dout;
input   p_wideStreamIn_0_0_1_0_0_0_empty_n;
output   p_wideStreamIn_0_0_1_0_0_0_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_016_dout;
input   p_wideStreamIn_0_0_1_0_0_016_empty_n;
output   p_wideStreamIn_0_0_1_0_0_016_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_017_dout;
input   p_wideStreamIn_0_0_1_0_0_017_empty_n;
output   p_wideStreamIn_0_0_1_0_0_017_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_018_dout;
input   p_wideStreamIn_0_0_1_0_0_018_empty_n;
output   p_wideStreamIn_0_0_1_0_0_018_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_019_dout;
input   p_wideStreamIn_0_0_1_0_0_019_empty_n;
output   p_wideStreamIn_0_0_1_0_0_019_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_020_dout;
input   p_wideStreamIn_0_0_1_0_0_020_empty_n;
output   p_wideStreamIn_0_0_1_0_0_020_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_021_dout;
input   p_wideStreamIn_0_0_1_0_0_021_empty_n;
output   p_wideStreamIn_0_0_1_0_0_021_read;
input  [26:0] p_wideStreamIn_0_0_1_0_0_022_dout;
input   p_wideStreamIn_0_0_1_0_0_022_empty_n;
output   p_wideStreamIn_0_0_1_0_0_022_read;
output  [255:0] ssrWideStream4kernelIn_din;
input   ssrWideStream4kernelIn_full_n;
output   ssrWideStream4kernelIn_write;
output   start_out;
output   start_write;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_done;
reg ap_idle;
reg p_wideStreamIn_0_0_0_0_0_0_read;
reg p_wideStreamIn_0_0_0_0_0_01_read;
reg p_wideStreamIn_0_0_0_0_0_02_read;
reg p_wideStreamIn_0_0_0_0_0_03_read;
reg p_wideStreamIn_0_0_0_0_0_04_read;
reg p_wideStreamIn_0_0_0_0_0_05_read;
reg p_wideStreamIn_0_0_0_0_0_06_read;
reg p_wideStreamIn_0_0_0_0_0_07_read;
reg p_wideStreamIn_0_0_1_0_0_0_read;
reg p_wideStreamIn_0_0_1_0_0_016_read;
reg p_wideStreamIn_0_0_1_0_0_017_read;
reg p_wideStreamIn_0_0_1_0_0_018_read;
reg p_wideStreamIn_0_0_1_0_0_019_read;
reg p_wideStreamIn_0_0_1_0_0_020_read;
reg p_wideStreamIn_0_0_1_0_0_021_read;
reg p_wideStreamIn_0_0_1_0_0_022_read;
reg ssrWideStream4kernelIn_write;
reg start_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
wire   [0:0] icmp_ln69_fu_429_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    io_acc_block_signal_op52;
wire   [0:0] trunc_ln69_fu_251_p1;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_pp0_stage0_11001;
reg    p_wideStreamIn_0_0_0_0_0_0_blk_n;
wire    ap_block_pp0_stage0;
reg    p_wideStreamIn_0_0_0_0_0_01_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_02_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_03_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_04_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_05_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_06_blk_n;
reg    p_wideStreamIn_0_0_0_0_0_07_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_0_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_016_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_017_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_018_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_019_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_020_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_021_blk_n;
reg    p_wideStreamIn_0_0_1_0_0_022_blk_n;
reg    ssrWideStream4kernelIn_blk_n;
reg   [2:0] wideReadIndex18_reg_222;
reg   [4:0] i17_reg_237;
wire   [4:0] i_fu_255_p2;
reg   [4:0] i_reg_957;
wire   [0:0] icmp_ln78_6_fu_405_p2;
reg   [0:0] icmp_ln78_6_reg_962;
wire   [0:0] icmp_ln78_7_fu_411_p2;
reg   [0:0] icmp_ln78_7_reg_972;
wire   [0:0] icmp_ln78_8_fu_417_p2;
reg   [0:0] icmp_ln78_8_reg_980;
wire   [2:0] wideReadIndex_fu_423_p2;
reg   [2:0] wideReadIndex_reg_990;
reg   [0:0] icmp_ln69_reg_995;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg   [2:0] ap_phi_mux_wideReadIndex18_phi_fu_226_p6;
reg   [4:0] ap_phi_mux_i17_phi_fu_241_p6;
reg   [26:0] wideSample_superSample_M_imag_V_7_fu_100;
reg   [26:0] wideSample_superSample_M_imag_V_6_fu_104;
reg   [26:0] wideSample_superSample_M_imag_V_5_fu_108;
reg   [26:0] wideSample_superSample_M_imag_V_4_fu_112;
reg   [26:0] wideSample_superSample_M_imag_V_3_fu_116;
reg   [26:0] wideSample_superSample_M_imag_V_2_fu_120;
reg   [26:0] wideSample_superSample_M_imag_V_1_fu_124;
reg   [26:0] wideSample_superSample_M_imag_V_0_fu_128;
reg   [26:0] wideSample_superSample_M_real_V_7_fu_132;
reg   [26:0] wideSample_superSample_M_real_V_6_fu_136;
reg   [26:0] wideSample_superSample_M_real_V_5_fu_140;
reg   [26:0] wideSample_superSample_M_real_V_4_fu_144;
reg   [26:0] wideSample_superSample_M_real_V_3_fu_148;
reg   [26:0] wideSample_superSample_M_real_V_2_fu_152;
reg   [26:0] wideSample_superSample_M_real_V_1_fu_156;
reg   [26:0] wideSample_superSample_M_real_V_0_fu_160;
reg    ap_block_pp0_stage0_01001;
wire   [0:0] icmp_ln78_10_fu_539_p2;
wire   [0:0] icmp_ln78_9_fu_533_p2;
wire   [0:0] icmp_ln78_fu_527_p2;
wire   [0:0] or_ln78_fu_553_p2;
wire   [26:0] select_ln78_fu_545_p3;
wire   [26:0] select_ln78_30_fu_559_p3;
wire   [0:0] or_ln78_8_fu_566_p2;
wire   [0:0] or_ln78_9_fu_577_p2;
wire   [26:0] select_ln78_31_fu_570_p3;
wire   [0:0] or_ln78_10_fu_590_p2;
wire   [26:0] select_ln78_32_fu_582_p3;
wire   [26:0] select_ln78_33_fu_596_p3;
wire   [26:0] select_ln78_35_fu_612_p3;
wire   [26:0] select_ln78_36_fu_620_p3;
wire   [26:0] select_ln78_37_fu_627_p3;
wire   [26:0] select_ln78_38_fu_634_p3;
wire   [26:0] select_ln78_39_fu_642_p3;
wire   [0:0] or_ln78_11_fu_666_p2;
wire   [26:0] select_ln78_41_fu_658_p3;
wire   [26:0] select_ln78_42_fu_671_p3;
wire   [0:0] or_ln78_12_fu_678_p2;
wire   [0:0] or_ln78_13_fu_698_p2;
wire   [26:0] select_ln78_44_fu_690_p3;
wire   [26:0] select_ln78_43_fu_682_p3;
wire   [26:0] select_ln78_46_fu_712_p3;
wire   [26:0] select_ln78_47_fu_720_p3;
wire   [26:0] select_ln78_49_fu_735_p3;
wire   [26:0] select_ln78_48_fu_727_p3;
wire   [26:0] select_ln78_51_fu_751_p3;
wire   [26:0] select_ln78_52_fu_758_p3;
wire   [0:0] or_ln78_14_fu_773_p2;
wire   [26:0] select_ln78_53_fu_765_p3;
wire   [26:0] select_ln78_55_fu_787_p3;
wire   [26:0] select_ln78_56_fu_794_p3;
wire   [26:0] select_ln78_57_fu_801_p3;
wire   [26:0] select_ln78_58_fu_809_p3;
wire   [26:0] select_ln78_54_fu_779_p3;
wire   [26:0] select_ln78_50_fu_743_p3;
wire   [26:0] select_ln78_45_fu_704_p3;
wire   [26:0] select_ln78_40_fu_650_p3;
wire   [26:0] select_ln78_34_fu_604_p3;
wire   [26:0] tmp_5_fu_505_p10;
wire   [26:0] tmp_fu_483_p10;
wire   [250:0] tmp_4_fu_817_p16;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_int_blocking_cur_n;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_163;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

fft2DKernel_mux_83_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 27 ),
    .din2_WIDTH( 27 ),
    .din3_WIDTH( 27 ),
    .din4_WIDTH( 27 ),
    .din5_WIDTH( 27 ),
    .din6_WIDTH( 27 ),
    .din7_WIDTH( 27 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 27 ))
mux_83_27_1_1_U1283(
    .din0(wideSample_superSample_M_real_V_0_fu_160),
    .din1(wideSample_superSample_M_real_V_1_fu_156),
    .din2(wideSample_superSample_M_real_V_2_fu_152),
    .din3(wideSample_superSample_M_real_V_3_fu_148),
    .din4(wideSample_superSample_M_real_V_4_fu_144),
    .din5(wideSample_superSample_M_real_V_5_fu_140),
    .din6(wideSample_superSample_M_real_V_6_fu_136),
    .din7(wideSample_superSample_M_real_V_7_fu_132),
    .din8(wideReadIndex18_reg_222),
    .dout(tmp_fu_483_p10)
);

fft2DKernel_mux_83_27_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 27 ),
    .din1_WIDTH( 27 ),
    .din2_WIDTH( 27 ),
    .din3_WIDTH( 27 ),
    .din4_WIDTH( 27 ),
    .din5_WIDTH( 27 ),
    .din6_WIDTH( 27 ),
    .din7_WIDTH( 27 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 27 ))
mux_83_27_1_1_U1284(
    .din0(wideSample_superSample_M_imag_V_0_fu_128),
    .din1(wideSample_superSample_M_imag_V_1_fu_124),
    .din2(wideSample_superSample_M_imag_V_2_fu_120),
    .din3(wideSample_superSample_M_imag_V_3_fu_116),
    .din4(wideSample_superSample_M_imag_V_4_fu_112),
    .din5(wideSample_superSample_M_imag_V_5_fu_108),
    .din6(wideSample_superSample_M_imag_V_6_fu_104),
    .din7(wideSample_superSample_M_imag_V_7_fu_100),
    .din8(wideReadIndex18_reg_222),
    .dout(tmp_5_fu_505_p10)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= real_start;
        end else if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((real_start == 1'b1) & (internal_ap_ready == 1'b0))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        i17_reg_237 <= i_reg_957;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        i17_reg_237 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        wideReadIndex18_reg_222 <= wideReadIndex_reg_990;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1)) | (~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        wideReadIndex18_reg_222 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_957 <= i_fu_255_p2;
        wideReadIndex_reg_990 <= wideReadIndex_fu_423_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln69_reg_995 <= icmp_ln69_fu_429_p2;
        icmp_ln78_6_reg_962 <= icmp_ln78_6_fu_405_p2;
        icmp_ln78_7_reg_972 <= icmp_ln78_7_fu_411_p2;
        icmp_ln78_8_reg_980 <= icmp_ln78_8_fu_417_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        wideSample_superSample_M_imag_V_0_fu_128 <= p_wideStreamIn_0_0_1_0_0_0_dout;
        wideSample_superSample_M_imag_V_1_fu_124 <= p_wideStreamIn_0_0_1_0_0_016_dout;
        wideSample_superSample_M_imag_V_2_fu_120 <= p_wideStreamIn_0_0_1_0_0_017_dout;
        wideSample_superSample_M_imag_V_3_fu_116 <= p_wideStreamIn_0_0_1_0_0_018_dout;
        wideSample_superSample_M_imag_V_4_fu_112 <= p_wideStreamIn_0_0_1_0_0_019_dout;
        wideSample_superSample_M_imag_V_5_fu_108 <= p_wideStreamIn_0_0_1_0_0_020_dout;
        wideSample_superSample_M_imag_V_6_fu_104 <= p_wideStreamIn_0_0_1_0_0_021_dout;
        wideSample_superSample_M_imag_V_7_fu_100 <= p_wideStreamIn_0_0_1_0_0_022_dout;
        wideSample_superSample_M_real_V_0_fu_160 <= p_wideStreamIn_0_0_0_0_0_0_dout;
        wideSample_superSample_M_real_V_1_fu_156 <= p_wideStreamIn_0_0_0_0_0_01_dout;
        wideSample_superSample_M_real_V_2_fu_152 <= p_wideStreamIn_0_0_0_0_0_02_dout;
        wideSample_superSample_M_real_V_3_fu_148 <= p_wideStreamIn_0_0_0_0_0_03_dout;
        wideSample_superSample_M_real_V_4_fu_144 <= p_wideStreamIn_0_0_0_0_0_04_dout;
        wideSample_superSample_M_real_V_5_fu_140 <= p_wideStreamIn_0_0_0_0_0_05_dout;
        wideSample_superSample_M_real_V_6_fu_136 <= p_wideStreamIn_0_0_0_0_0_06_dout;
        wideSample_superSample_M_real_V_7_fu_132 <= p_wideStreamIn_0_0_0_0_0_07_dout;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln69_reg_995 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_163)) begin
        if ((icmp_ln69_reg_995 == 1'd1)) begin
            ap_phi_mux_i17_phi_fu_241_p6 = 5'd0;
        end else if ((icmp_ln69_reg_995 == 1'd0)) begin
            ap_phi_mux_i17_phi_fu_241_p6 = i_reg_957;
        end else begin
            ap_phi_mux_i17_phi_fu_241_p6 = i17_reg_237;
        end
    end else begin
        ap_phi_mux_i17_phi_fu_241_p6 = i17_reg_237;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_163)) begin
        if ((icmp_ln69_reg_995 == 1'd1)) begin
            ap_phi_mux_wideReadIndex18_phi_fu_226_p6 = 3'd0;
        end else if ((icmp_ln69_reg_995 == 1'd0)) begin
            ap_phi_mux_wideReadIndex18_phi_fu_226_p6 = wideReadIndex_reg_990;
        end else begin
            ap_phi_mux_wideReadIndex18_phi_fu_226_p6 = wideReadIndex18_reg_222;
        end
    end else begin
        ap_phi_mux_wideReadIndex18_phi_fu_226_p6 = wideReadIndex18_reg_222;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (icmp_ln69_fu_429_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_01_blk_n = p_wideStreamIn_0_0_0_0_0_01_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_01_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_01_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_01_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_02_blk_n = p_wideStreamIn_0_0_0_0_0_02_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_02_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_02_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_02_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_03_blk_n = p_wideStreamIn_0_0_0_0_0_03_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_03_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_03_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_03_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_04_blk_n = p_wideStreamIn_0_0_0_0_0_04_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_04_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_04_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_04_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_05_blk_n = p_wideStreamIn_0_0_0_0_0_05_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_05_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_05_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_05_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_06_blk_n = p_wideStreamIn_0_0_0_0_0_06_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_06_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_06_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_06_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_07_blk_n = p_wideStreamIn_0_0_0_0_0_07_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_07_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_07_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_07_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_0_blk_n = p_wideStreamIn_0_0_0_0_0_0_empty_n;
    end else begin
        p_wideStreamIn_0_0_0_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_0_0_0_0_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_0_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_016_blk_n = p_wideStreamIn_0_0_1_0_0_016_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_016_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_016_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_016_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_017_blk_n = p_wideStreamIn_0_0_1_0_0_017_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_017_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_017_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_017_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_018_blk_n = p_wideStreamIn_0_0_1_0_0_018_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_018_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_018_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_018_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_019_blk_n = p_wideStreamIn_0_0_1_0_0_019_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_019_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_019_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_019_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_020_blk_n = p_wideStreamIn_0_0_1_0_0_020_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_020_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_020_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_020_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_021_blk_n = p_wideStreamIn_0_0_1_0_0_021_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_021_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_021_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_021_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_022_blk_n = p_wideStreamIn_0_0_1_0_0_022_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_022_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_022_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_022_read = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_0_blk_n = p_wideStreamIn_0_0_1_0_0_0_empty_n;
    end else begin
        p_wideStreamIn_0_0_1_0_0_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (trunc_ln69_fu_251_p1 == 1'd0))) begin
        p_wideStreamIn_0_0_1_0_0_0_read = 1'b1;
    end else begin
        p_wideStreamIn_0_0_1_0_0_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ssrWideStream4kernelIn_blk_n = ssrWideStream4kernelIn_full_n;
    end else begin
        ssrWideStream4kernelIn_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        ssrWideStream4kernelIn_write = 1'b1;
    end else begin
        ssrWideStream4kernelIn_write = 1'b0;
    end
end

always @ (*) begin
    if (((real_start == 1'b1) & (start_once_reg == 1'b0))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & (trunc_ln69_fu_251_p1 == 1'd0) & (io_acc_block_signal_op52 == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ssrWideStream4kernelIn_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & (trunc_ln69_fu_251_p1 == 1'd0) & (io_acc_block_signal_op52 == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ssrWideStream4kernelIn_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_done_reg == 1'b1) | ((real_start == 1'b1) & (trunc_ln69_fu_251_p1 == 1'd0) & (io_acc_block_signal_op52 == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (ssrWideStream4kernelIn_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state1 = ((real_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((trunc_ln69_fu_251_p1 == 1'd0) & (io_acc_block_signal_op52 == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (ssrWideStream4kernelIn_full_n == 1'b0);
end

always @ (*) begin
    ap_condition_163 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = real_start;

assign ap_ext_blocking_n = (1'b1 & 1'b1);

assign ap_int_blocking_cur_n = (ssrWideStream4kernelIn_blk_n & p_wideStreamIn_0_0_1_0_0_0_blk_n & p_wideStreamIn_0_0_1_0_0_022_blk_n & p_wideStreamIn_0_0_1_0_0_021_blk_n & p_wideStreamIn_0_0_1_0_0_020_blk_n & p_wideStreamIn_0_0_1_0_0_019_blk_n & p_wideStreamIn_0_0_1_0_0_018_blk_n & p_wideStreamIn_0_0_1_0_0_017_blk_n & p_wideStreamIn_0_0_1_0_0_016_blk_n & p_wideStreamIn_0_0_0_0_0_0_blk_n & p_wideStreamIn_0_0_0_0_0_07_blk_n & p_wideStreamIn_0_0_0_0_0_06_blk_n & p_wideStreamIn_0_0_0_0_0_05_blk_n & p_wideStreamIn_0_0_0_0_0_04_blk_n & p_wideStreamIn_0_0_0_0_0_03_blk_n & p_wideStreamIn_0_0_0_0_0_02_blk_n & p_wideStreamIn_0_0_0_0_0_01_blk_n);

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_ready = internal_ap_ready;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign i_fu_255_p2 = (ap_phi_mux_i17_phi_fu_241_p6 + 5'd1);

assign icmp_ln69_fu_429_p2 = ((ap_phi_mux_i17_phi_fu_241_p6 == 5'd31) ? 1'b1 : 1'b0);

assign icmp_ln78_10_fu_539_p2 = ((wideReadIndex18_reg_222 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln78_6_fu_405_p2 = ((ap_phi_mux_wideReadIndex18_phi_fu_226_p6 == 3'd1) ? 1'b1 : 1'b0);

assign icmp_ln78_7_fu_411_p2 = ((ap_phi_mux_wideReadIndex18_phi_fu_226_p6 == 3'd2) ? 1'b1 : 1'b0);

assign icmp_ln78_8_fu_417_p2 = ((ap_phi_mux_wideReadIndex18_phi_fu_226_p6 == 3'd3) ? 1'b1 : 1'b0);

assign icmp_ln78_9_fu_533_p2 = ((wideReadIndex18_reg_222 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_527_p2 = ((wideReadIndex18_reg_222 == 3'd0) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op52 = (p_wideStreamIn_0_0_1_0_0_0_empty_n & p_wideStreamIn_0_0_1_0_0_022_empty_n & p_wideStreamIn_0_0_1_0_0_021_empty_n & p_wideStreamIn_0_0_1_0_0_020_empty_n & p_wideStreamIn_0_0_1_0_0_019_empty_n & p_wideStreamIn_0_0_1_0_0_018_empty_n & p_wideStreamIn_0_0_1_0_0_017_empty_n & p_wideStreamIn_0_0_1_0_0_016_empty_n & p_wideStreamIn_0_0_0_0_0_0_empty_n & p_wideStreamIn_0_0_0_0_0_07_empty_n & p_wideStreamIn_0_0_0_0_0_06_empty_n & p_wideStreamIn_0_0_0_0_0_05_empty_n & p_wideStreamIn_0_0_0_0_0_04_empty_n & p_wideStreamIn_0_0_0_0_0_03_empty_n & p_wideStreamIn_0_0_0_0_0_02_empty_n & p_wideStreamIn_0_0_0_0_0_01_empty_n);

assign or_ln78_10_fu_590_p2 = (or_ln78_fu_553_p2 | or_ln78_8_fu_566_p2);

assign or_ln78_11_fu_666_p2 = (icmp_ln78_9_fu_533_p2 | icmp_ln78_8_reg_980);

assign or_ln78_12_fu_678_p2 = (icmp_ln78_7_reg_972 | icmp_ln78_6_reg_962);

assign or_ln78_13_fu_698_p2 = (or_ln78_12_fu_678_p2 | or_ln78_11_fu_666_p2);

assign or_ln78_14_fu_773_p2 = (or_ln78_9_fu_577_p2 | or_ln78_8_fu_566_p2);

assign or_ln78_8_fu_566_p2 = (icmp_ln78_8_reg_980 | icmp_ln78_7_reg_972);

assign or_ln78_9_fu_577_p2 = (icmp_ln78_fu_527_p2 | icmp_ln78_6_reg_962);

assign or_ln78_fu_553_p2 = (icmp_ln78_9_fu_533_p2 | icmp_ln78_10_fu_539_p2);

assign select_ln78_30_fu_559_p3 = ((icmp_ln78_8_reg_980[0:0] == 1'b1) ? wideSample_superSample_M_real_V_4_fu_144 : wideSample_superSample_M_real_V_3_fu_148);

assign select_ln78_31_fu_570_p3 = ((icmp_ln78_6_reg_962[0:0] == 1'b1) ? wideSample_superSample_M_real_V_2_fu_152 : wideSample_superSample_M_real_V_1_fu_156);

assign select_ln78_32_fu_582_p3 = ((or_ln78_fu_553_p2[0:0] == 1'b1) ? select_ln78_fu_545_p3 : select_ln78_30_fu_559_p3);

assign select_ln78_33_fu_596_p3 = ((or_ln78_9_fu_577_p2[0:0] == 1'b1) ? select_ln78_31_fu_570_p3 : wideSample_superSample_M_real_V_7_fu_132);

assign select_ln78_34_fu_604_p3 = ((or_ln78_10_fu_590_p2[0:0] == 1'b1) ? select_ln78_32_fu_582_p3 : select_ln78_33_fu_596_p3);

assign select_ln78_35_fu_612_p3 = ((icmp_ln78_10_fu_539_p2[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_6_fu_104 : wideSample_superSample_M_imag_V_5_fu_108);

assign select_ln78_36_fu_620_p3 = ((icmp_ln78_8_reg_980[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_4_fu_112 : wideSample_superSample_M_imag_V_3_fu_116);

assign select_ln78_37_fu_627_p3 = ((icmp_ln78_6_reg_962[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_2_fu_120 : wideSample_superSample_M_imag_V_1_fu_124);

assign select_ln78_38_fu_634_p3 = ((or_ln78_fu_553_p2[0:0] == 1'b1) ? select_ln78_35_fu_612_p3 : select_ln78_36_fu_620_p3);

assign select_ln78_39_fu_642_p3 = ((or_ln78_9_fu_577_p2[0:0] == 1'b1) ? select_ln78_37_fu_627_p3 : wideSample_superSample_M_imag_V_7_fu_100);

assign select_ln78_40_fu_650_p3 = ((or_ln78_10_fu_590_p2[0:0] == 1'b1) ? select_ln78_38_fu_634_p3 : select_ln78_39_fu_642_p3);

assign select_ln78_41_fu_658_p3 = ((icmp_ln78_9_fu_533_p2[0:0] == 1'b1) ? wideSample_superSample_M_real_V_6_fu_136 : wideSample_superSample_M_real_V_5_fu_140);

assign select_ln78_42_fu_671_p3 = ((icmp_ln78_7_reg_972[0:0] == 1'b1) ? wideSample_superSample_M_real_V_4_fu_144 : wideSample_superSample_M_real_V_3_fu_148);

assign select_ln78_43_fu_682_p3 = ((icmp_ln78_fu_527_p2[0:0] == 1'b1) ? wideSample_superSample_M_real_V_2_fu_152 : wideSample_superSample_M_real_V_7_fu_132);

assign select_ln78_44_fu_690_p3 = ((or_ln78_11_fu_666_p2[0:0] == 1'b1) ? select_ln78_41_fu_658_p3 : select_ln78_42_fu_671_p3);

assign select_ln78_45_fu_704_p3 = ((or_ln78_13_fu_698_p2[0:0] == 1'b1) ? select_ln78_44_fu_690_p3 : select_ln78_43_fu_682_p3);

assign select_ln78_46_fu_712_p3 = ((icmp_ln78_9_fu_533_p2[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_6_fu_104 : wideSample_superSample_M_imag_V_5_fu_108);

assign select_ln78_47_fu_720_p3 = ((icmp_ln78_7_reg_972[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_4_fu_112 : wideSample_superSample_M_imag_V_3_fu_116);

assign select_ln78_48_fu_727_p3 = ((icmp_ln78_fu_527_p2[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_2_fu_120 : wideSample_superSample_M_imag_V_7_fu_100);

assign select_ln78_49_fu_735_p3 = ((or_ln78_11_fu_666_p2[0:0] == 1'b1) ? select_ln78_46_fu_712_p3 : select_ln78_47_fu_720_p3);

assign select_ln78_50_fu_743_p3 = ((or_ln78_13_fu_698_p2[0:0] == 1'b1) ? select_ln78_49_fu_735_p3 : select_ln78_48_fu_727_p3);

assign select_ln78_51_fu_751_p3 = ((icmp_ln78_8_reg_980[0:0] == 1'b1) ? wideSample_superSample_M_real_V_6_fu_136 : wideSample_superSample_M_real_V_5_fu_140);

assign select_ln78_52_fu_758_p3 = ((icmp_ln78_6_reg_962[0:0] == 1'b1) ? wideSample_superSample_M_real_V_4_fu_144 : wideSample_superSample_M_real_V_3_fu_148);

assign select_ln78_53_fu_765_p3 = ((or_ln78_8_fu_566_p2[0:0] == 1'b1) ? select_ln78_51_fu_751_p3 : select_ln78_52_fu_758_p3);

assign select_ln78_54_fu_779_p3 = ((or_ln78_14_fu_773_p2[0:0] == 1'b1) ? select_ln78_53_fu_765_p3 : wideSample_superSample_M_real_V_7_fu_132);

assign select_ln78_55_fu_787_p3 = ((icmp_ln78_8_reg_980[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_6_fu_104 : wideSample_superSample_M_imag_V_5_fu_108);

assign select_ln78_56_fu_794_p3 = ((icmp_ln78_6_reg_962[0:0] == 1'b1) ? wideSample_superSample_M_imag_V_4_fu_112 : wideSample_superSample_M_imag_V_3_fu_116);

assign select_ln78_57_fu_801_p3 = ((or_ln78_8_fu_566_p2[0:0] == 1'b1) ? select_ln78_55_fu_787_p3 : select_ln78_56_fu_794_p3);

assign select_ln78_58_fu_809_p3 = ((or_ln78_14_fu_773_p2[0:0] == 1'b1) ? select_ln78_57_fu_801_p3 : wideSample_superSample_M_imag_V_7_fu_100);

assign select_ln78_fu_545_p3 = ((icmp_ln78_10_fu_539_p2[0:0] == 1'b1) ? wideSample_superSample_M_real_V_6_fu_136 : wideSample_superSample_M_real_V_5_fu_140);

assign ssrWideStream4kernelIn_din = tmp_4_fu_817_p16;

assign start_out = real_start;

assign tmp_4_fu_817_p16 = {{{{{{{{{{{{{{{select_ln78_58_fu_809_p3}, {5'd0}}, {select_ln78_54_fu_779_p3}}, {5'd0}}, {select_ln78_50_fu_743_p3}}, {5'd0}}, {select_ln78_45_fu_704_p3}}, {5'd0}}, {select_ln78_40_fu_650_p3}}, {5'd0}}, {select_ln78_34_fu_604_p3}}, {5'd0}}, {tmp_5_fu_505_p10}}, {5'd0}}, {tmp_fu_483_p10}};

assign trunc_ln69_fu_251_p1 = ap_phi_mux_i17_phi_fu_241_p6[0:0];

assign wideReadIndex_fu_423_p2 = (ap_phi_mux_wideReadIndex18_phi_fu_226_p6 ^ 3'd4);

endmodule //fft2DKernel_wideToNarrowConverter_8u_4u_16u_complex_ap_fixed_27_13_5_3_0_s
