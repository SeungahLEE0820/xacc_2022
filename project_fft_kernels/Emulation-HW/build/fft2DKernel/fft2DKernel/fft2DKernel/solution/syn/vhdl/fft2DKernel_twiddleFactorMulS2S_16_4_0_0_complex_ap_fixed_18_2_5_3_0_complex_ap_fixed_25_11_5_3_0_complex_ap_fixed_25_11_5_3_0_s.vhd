-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft2DKernel_twiddleFactorMulS2S_16_4_0_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_25_11_5_3_0_complex_ap_fixed_25_11_5_3_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    p_read : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read1 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read2 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read3 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read4 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read5 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read6 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_read7 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_twiddleTable_M_imag_0_0_0_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce0 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q0 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce1 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q1 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address2 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce2 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q2 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address3 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce3 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q3 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address4 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce4 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q4 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address5 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce5 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q5 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_twiddleTable_M_imag_0_0_0_address6 : OUT STD_LOGIC_VECTOR (3 downto 0);
    p_twiddleTable_M_imag_0_0_0_ce6 : OUT STD_LOGIC;
    p_twiddleTable_M_imag_0_0_0_q6 : IN STD_LOGIC_VECTOR (17 downto 0);
    p_k : IN STD_LOGIC_VECTOR (3 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_3 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_4 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_5 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_6 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_return_7 : OUT STD_LOGIC_VECTOR (24 downto 0);
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of fft2DKernel_twiddleFactorMulS2S_16_4_0_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_25_11_5_3_0_complex_ap_fixed_25_11_5_3_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv18_30000 : STD_LOGIC_VECTOR (17 downto 0) := "110000000000000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv18_1FFFF : STD_LOGIC_VECTOR (17 downto 0) := "011111111111111111";
    constant ap_const_lv18_20000 : STD_LOGIC_VECTOR (17 downto 0) := "100000000000000000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal p_k_read_reg_1351 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_read_10_reg_1359 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_11_reg_1364 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_12_reg_1369 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_13_reg_1374 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_13_reg_1374_pp0_iter1_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_13_reg_1374_pp0_iter2_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_13_reg_1374_pp0_iter3_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_14_reg_1380 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_15_reg_1385 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read_16_reg_1390 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read39_reg_1395 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read39_reg_1395_pp0_iter1_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read39_reg_1395_pp0_iter2_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal p_read39_reg_1395_pp0_iter3_reg : STD_LOGIC_VECTOR (23 downto 0);
    signal index_cos_V_fu_218_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_cos_V_reg_1401 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_invert_control_imag_4_fu_224_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_invert_control_imag_4_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_cos_V_3_fu_292_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_cos_V_3_reg_1422 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1049_15_fu_306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_15_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_16_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_16_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_18_fu_357_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_18_reg_1443 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_V_2_fu_392_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_V_2_reg_1453 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_cos_V_4_fu_398_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal index_cos_V_4_reg_1460 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln1049_22_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_22_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal imagSinVal_fu_567_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal imagSinVal_reg_1486 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1171_17_fu_678_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_17_reg_1491 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_18_fu_681_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_19_fu_685_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_19_reg_1503 : STD_LOGIC_VECTOR (40 downto 0);
    signal imagSinVal_3_fu_764_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal imagSinVal_3_reg_1509 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1171_21_fu_868_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_21_reg_1514 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_22_fu_871_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_23_fu_875_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_23_reg_1526 : STD_LOGIC_VECTOR (40 downto 0);
    signal imagSinVal_4_fu_973_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal imagSinVal_4_reg_1532 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln1171_25_fu_1078_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_25_reg_1537 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_26_fu_1081_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_27_fu_1085_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_27_reg_1549 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_15_fu_1091_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_20_fu_1098_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_24_fu_1101_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal sext_ln1171_28_fu_1104_p1 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1249_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1255_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1261_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1267_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1273_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1279_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal zext_ln573_fu_250_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln573_6_fu_281_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_7_fu_344_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_8_fu_381_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_9_fu_430_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln573_10_fu_467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lut_index_imag_V_fu_232_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_imag_V_9_fu_236_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_imag_V_10_fu_242_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_fu_263_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_invert_control_real_V_fu_255_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_real_V_9_fu_267_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_10_fu_273_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_V_fu_286_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln674_fu_318_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_imag_V_11_fu_322_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_invert_control_imag_3_fu_298_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_imag_V_12_fu_330_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_imag_V_13_fu_336_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_11_fu_363_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_invert_control_real_V_3_fu_349_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_real_V_12_fu_367_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_13_fu_373_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln315_fu_386_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal lut_index_imag_V_14_fu_412_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_invert_control_imag_fu_404_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_imag_V_15_fu_416_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_imag_V_16_fu_422_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_14_fu_449_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal index_invert_control_real_V_4_fu_435_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lut_index_real_V_15_fu_453_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal lut_index_real_V_16_fu_459_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln1049_fu_479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_12_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_saturation_control_imag_fu_489_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_sin_V_fu_495_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_9_fu_503_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_fu_507_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_s_fu_513_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_42_fu_525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_fu_533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_fu_539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_fu_545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_fu_551_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_17_fu_521_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_negate_control_imag_fu_472_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_559_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1049_13_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_14_fu_587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_saturation_control_real_V_fu_592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_cos_V_fu_598_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_10_fu_606_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_18_fu_610_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_43_fu_616_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_44_fu_628_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_6_fu_636_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_6_fu_642_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_6_fu_648_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_6_fu_654_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_20_fu_624_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_negate_control_real_V_fu_575_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_662_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal realCosVal_fu_670_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_saturation_control_imag_3_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_sin_V_5_fu_692_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_11_fu_700_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_14_fu_704_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_45_fu_710_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_46_fu_722_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_7_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_7_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_7_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_7_fu_748_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_23_fu_718_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln340_7_fu_756_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1049_17_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_saturation_control_real_V_3_fu_783_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_cos_V_3_fu_788_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_12_fu_796_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_19_fu_800_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_47_fu_806_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_48_fu_818_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_8_fu_826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_8_fu_832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_8_fu_838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_8_fu_844_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_26_fu_814_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_negate_control_real_V_3_fu_771_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_8_fu_852_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal realCosVal_3_fu_860_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1049_19_fu_885_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1049_20_fu_890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_saturation_control_imag_4_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_sin_V_6_fu_901_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_13_fu_909_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_15_fu_913_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_49_fu_919_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_50_fu_931_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_9_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_9_fu_945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_9_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_9_fu_957_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_29_fu_927_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_negate_control_imag_4_fu_878_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_9_fu_965_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln1049_21_fu_988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_saturation_control_real_V_4_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_out_cos_V_4_fu_998_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln712_14_fu_1006_p1 : STD_LOGIC_VECTOR (18 downto 0);
    signal r_V_20_fu_1010_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal p_Result_51_fu_1016_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_52_fu_1028_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln794_10_fu_1036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal overflow_10_fu_1042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln340_10_fu_1048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln384_10_fu_1054_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_Val2_32_fu_1024_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal output_negate_control_real_V_4_fu_981_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_10_fu_1062_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal realCosVal_4_fu_1070_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal r_V_fu_1107_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal r_V_11_fu_1118_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_fu_1285_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1294_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1303_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1311_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1319_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1327_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1335_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1343_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal grp_fu_1249_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1255_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1261_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1267_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1273_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1279_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1285_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1294_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1303_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1303_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1311_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1311_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1319_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1319_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1327_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1327_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1335_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1335_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1343_p0 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1343_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_fu_1249_ce : STD_LOGIC;
    signal grp_fu_1255_ce : STD_LOGIC;
    signal grp_fu_1261_ce : STD_LOGIC;
    signal grp_fu_1267_ce : STD_LOGIC;
    signal grp_fu_1273_ce : STD_LOGIC;
    signal grp_fu_1279_ce : STD_LOGIC;
    signal grp_fu_1285_ce : STD_LOGIC;
    signal grp_fu_1294_ce : STD_LOGIC;
    signal grp_fu_1303_ce : STD_LOGIC;
    signal grp_fu_1311_ce : STD_LOGIC;
    signal grp_fu_1319_ce : STD_LOGIC;
    signal grp_fu_1327_ce : STD_LOGIC;
    signal grp_fu_1335_ce : STD_LOGIC;
    signal grp_fu_1343_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft2DKernel_mul_mul_24s_18s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component fft2DKernel_mac_mulsub_24s_18s_40s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (39 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component fft2DKernel_mac_muladd_24s_18s_40s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (39 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component fft2DKernel_mac_mulsub_24s_18s_41s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (40 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;


    component fft2DKernel_mac_muladd_24s_18s_41s_41_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (23 downto 0);
        din1 : IN STD_LOGIC_VECTOR (17 downto 0);
        din2 : IN STD_LOGIC_VECTOR (40 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (40 downto 0) );
    end component;



begin
    mul_mul_24s_18s_41_4_1_U123 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_16_reg_1390,
        din1 => grp_fu_1249_p1,
        ce => grp_fu_1249_ce,
        dout => grp_fu_1249_p2);

    mul_mul_24s_18s_41_4_1_U124 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_12_reg_1369,
        din1 => grp_fu_1255_p1,
        ce => grp_fu_1255_ce,
        dout => grp_fu_1255_p2);

    mul_mul_24s_18s_41_4_1_U125 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_15_reg_1385,
        din1 => grp_fu_1261_p1,
        ce => grp_fu_1261_ce,
        dout => grp_fu_1261_p2);

    mul_mul_24s_18s_41_4_1_U126 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_11_reg_1364,
        din1 => grp_fu_1267_p1,
        ce => grp_fu_1267_ce,
        dout => grp_fu_1267_p2);

    mul_mul_24s_18s_41_4_1_U127 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_14_reg_1380,
        din1 => grp_fu_1273_p1,
        ce => grp_fu_1273_ce,
        dout => grp_fu_1273_p2);

    mul_mul_24s_18s_41_4_1_U128 : component fft2DKernel_mul_mul_24s_18s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_10_reg_1359,
        din1 => grp_fu_1279_p1,
        ce => grp_fu_1279_ce,
        dout => grp_fu_1279_p2);

    mac_mulsub_24s_18s_40s_41_4_1_U129 : component fft2DKernel_mac_mulsub_24s_18s_40s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 40,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read_13_reg_1374_pp0_iter1_reg,
        din1 => grp_fu_1285_p1,
        din2 => r_V_fu_1107_p3,
        ce => grp_fu_1285_ce,
        dout => grp_fu_1285_p3);

    mac_muladd_24s_18s_40s_41_4_1_U130 : component fft2DKernel_mac_muladd_24s_18s_40s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 40,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_read39_reg_1395_pp0_iter1_reg,
        din1 => grp_fu_1294_p1,
        din2 => r_V_11_fu_1118_p3,
        ce => grp_fu_1294_ce,
        dout => grp_fu_1294_p3);

    mac_mulsub_24s_18s_41s_41_4_1_U131 : component fft2DKernel_mac_mulsub_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1303_p0,
        din1 => grp_fu_1303_p1,
        din2 => grp_fu_1249_p2,
        ce => grp_fu_1303_ce,
        dout => grp_fu_1303_p3);

    mac_muladd_24s_18s_41s_41_4_1_U132 : component fft2DKernel_mac_muladd_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1311_p0,
        din1 => grp_fu_1311_p1,
        din2 => grp_fu_1255_p2,
        ce => grp_fu_1311_ce,
        dout => grp_fu_1311_p3);

    mac_mulsub_24s_18s_41s_41_4_1_U133 : component fft2DKernel_mac_mulsub_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1319_p0,
        din1 => grp_fu_1319_p1,
        din2 => grp_fu_1261_p2,
        ce => grp_fu_1319_ce,
        dout => grp_fu_1319_p3);

    mac_muladd_24s_18s_41s_41_4_1_U134 : component fft2DKernel_mac_muladd_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1327_p0,
        din1 => grp_fu_1327_p1,
        din2 => grp_fu_1267_p2,
        ce => grp_fu_1327_ce,
        dout => grp_fu_1327_p3);

    mac_mulsub_24s_18s_41s_41_4_1_U135 : component fft2DKernel_mac_mulsub_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1335_p0,
        din1 => grp_fu_1335_p1,
        din2 => grp_fu_1273_p2,
        ce => grp_fu_1335_ce,
        dout => grp_fu_1335_p3);

    mac_muladd_24s_18s_41s_41_4_1_U136 : component fft2DKernel_mac_muladd_24s_18s_41s_41_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 24,
        din1_WIDTH => 18,
        din2_WIDTH => 41,
        dout_WIDTH => 41)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1343_p0,
        din1 => grp_fu_1343_p1,
        din2 => grp_fu_1279_p2,
        ce => grp_fu_1343_ce,
        dout => grp_fu_1343_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1049_15_reg_1428 <= icmp_ln1049_15_fu_306_p2;
                icmp_ln1049_16_reg_1433 <= icmp_ln1049_16_fu_312_p2;
                icmp_ln1049_18_reg_1443 <= icmp_ln1049_18_fu_357_p2;
                icmp_ln1049_22_reg_1471 <= icmp_ln1049_22_fu_443_p2;
                imagSinVal_3_reg_1509 <= imagSinVal_3_fu_764_p3;
                imagSinVal_4_reg_1532 <= imagSinVal_4_fu_973_p3;
                imagSinVal_reg_1486 <= imagSinVal_fu_567_p3;
                index_V_2_reg_1453 <= index_V_2_fu_392_p2;
                    index_cos_V_3_reg_1422(3 downto 1) <= index_cos_V_3_fu_292_p2(3 downto 1);
                index_cos_V_4_reg_1460 <= index_cos_V_4_fu_398_p2;
                index_cos_V_reg_1401 <= index_cos_V_fu_218_p2;
                index_invert_control_imag_4_reg_1407 <= p_k(2 downto 2);
                p_k_read_reg_1351 <= p_k;
                p_read39_reg_1395 <= p_read;
                p_read39_reg_1395_pp0_iter1_reg <= p_read39_reg_1395;
                p_read_10_reg_1359 <= p_read7;
                p_read_11_reg_1364 <= p_read6;
                p_read_12_reg_1369 <= p_read5;
                p_read_13_reg_1374 <= p_read4;
                p_read_13_reg_1374_pp0_iter1_reg <= p_read_13_reg_1374;
                p_read_14_reg_1380 <= p_read3;
                p_read_15_reg_1385 <= p_read2;
                p_read_16_reg_1390 <= p_read1;
                sext_ln1171_17_reg_1491 <= sext_ln1171_17_fu_678_p1;
                sext_ln1171_19_reg_1503 <= sext_ln1171_19_fu_685_p1;
                sext_ln1171_21_reg_1514 <= sext_ln1171_21_fu_868_p1;
                sext_ln1171_23_reg_1526 <= sext_ln1171_23_fu_875_p1;
                sext_ln1171_25_reg_1537 <= sext_ln1171_25_fu_1078_p1;
                sext_ln1171_27_reg_1549 <= sext_ln1171_27_fu_1085_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                p_read39_reg_1395_pp0_iter2_reg <= p_read39_reg_1395_pp0_iter1_reg;
                p_read39_reg_1395_pp0_iter3_reg <= p_read39_reg_1395_pp0_iter2_reg;
                p_read_13_reg_1374_pp0_iter2_reg <= p_read_13_reg_1374_pp0_iter1_reg;
                p_read_13_reg_1374_pp0_iter3_reg <= p_read_13_reg_1374_pp0_iter2_reg;
            end if;
        end if;
    end process;
    index_cos_V_3_reg_1422(0) <= '0';

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= (ap_const_logic_0 = ap_ce);
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= grp_fu_1285_p3(40 downto 16);
    ap_return_1 <= grp_fu_1303_p3(40 downto 16);
    ap_return_2 <= grp_fu_1319_p3(40 downto 16);
    ap_return_3 <= grp_fu_1335_p3(40 downto 16);
    ap_return_4 <= grp_fu_1294_p3(40 downto 16);
    ap_return_5 <= grp_fu_1311_p3(40 downto 16);
    ap_return_6 <= grp_fu_1327_p3(40 downto 16);
    ap_return_7 <= grp_fu_1343_p3(40 downto 16);
    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    grp_fu_1249_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1249_ce <= ap_const_logic_1;
        else 
            grp_fu_1249_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1249_p1 <= sext_ln1171_18_fu_681_p1(18 - 1 downto 0);

    grp_fu_1255_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1255_ce <= ap_const_logic_1;
        else 
            grp_fu_1255_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1255_p1 <= sext_ln1171_18_fu_681_p1(18 - 1 downto 0);

    grp_fu_1261_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1261_ce <= ap_const_logic_1;
        else 
            grp_fu_1261_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1261_p1 <= sext_ln1171_22_fu_871_p1(18 - 1 downto 0);

    grp_fu_1267_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1267_ce <= ap_const_logic_1;
        else 
            grp_fu_1267_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1267_p1 <= sext_ln1171_22_fu_871_p1(18 - 1 downto 0);

    grp_fu_1273_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1273_ce <= ap_const_logic_1;
        else 
            grp_fu_1273_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1273_p1 <= sext_ln1171_26_fu_1081_p1(18 - 1 downto 0);

    grp_fu_1279_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1279_ce <= ap_const_logic_1;
        else 
            grp_fu_1279_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1279_p1 <= sext_ln1171_26_fu_1081_p1(18 - 1 downto 0);

    grp_fu_1285_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1285_ce <= ap_const_logic_1;
        else 
            grp_fu_1285_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1285_p1 <= sext_ln1171_15_fu_1091_p1(18 - 1 downto 0);

    grp_fu_1294_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1294_ce <= ap_const_logic_1;
        else 
            grp_fu_1294_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1294_p1 <= sext_ln1171_15_fu_1091_p1(18 - 1 downto 0);

    grp_fu_1303_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1303_ce <= ap_const_logic_1;
        else 
            grp_fu_1303_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1303_p0 <= sext_ln1171_19_reg_1503(24 - 1 downto 0);
    grp_fu_1303_p1 <= sext_ln1171_20_fu_1098_p1(18 - 1 downto 0);

    grp_fu_1311_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1311_ce <= ap_const_logic_1;
        else 
            grp_fu_1311_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1311_p0 <= sext_ln1171_17_reg_1491(24 - 1 downto 0);
    grp_fu_1311_p1 <= sext_ln1171_20_fu_1098_p1(18 - 1 downto 0);

    grp_fu_1319_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1319_ce <= ap_const_logic_1;
        else 
            grp_fu_1319_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1319_p0 <= sext_ln1171_23_reg_1526(24 - 1 downto 0);
    grp_fu_1319_p1 <= sext_ln1171_24_fu_1101_p1(18 - 1 downto 0);

    grp_fu_1327_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1327_ce <= ap_const_logic_1;
        else 
            grp_fu_1327_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1327_p0 <= sext_ln1171_21_reg_1514(24 - 1 downto 0);
    grp_fu_1327_p1 <= sext_ln1171_24_fu_1101_p1(18 - 1 downto 0);

    grp_fu_1335_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1335_ce <= ap_const_logic_1;
        else 
            grp_fu_1335_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1335_p0 <= sext_ln1171_27_reg_1549(24 - 1 downto 0);
    grp_fu_1335_p1 <= sext_ln1171_28_fu_1104_p1(18 - 1 downto 0);

    grp_fu_1343_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1343_ce <= ap_const_logic_1;
        else 
            grp_fu_1343_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1343_p0 <= sext_ln1171_25_reg_1537(24 - 1 downto 0);
    grp_fu_1343_p1 <= sext_ln1171_28_fu_1104_p1(18 - 1 downto 0);
    icmp_ln1049_12_fu_484_p2 <= "1" when (p_k_read_reg_1351 = ap_const_lv4_C) else "0";
    icmp_ln1049_13_fu_582_p2 <= "1" when (index_cos_V_reg_1401 = ap_const_lv4_4) else "0";
    icmp_ln1049_14_fu_587_p2 <= "1" when (p_k_read_reg_1351 = ap_const_lv4_0) else "0";
    icmp_ln1049_15_fu_306_p2 <= "1" when (index_V_fu_286_p2 = ap_const_lv4_4) else "0";
    icmp_ln1049_16_fu_312_p2 <= "1" when (index_V_fu_286_p2 = ap_const_lv4_C) else "0";
    icmp_ln1049_17_fu_778_p2 <= "1" when (index_cos_V_3_reg_1422 = ap_const_lv4_4) else "0";
    icmp_ln1049_18_fu_357_p2 <= "1" when (index_V_fu_286_p2 = ap_const_lv4_0) else "0";
    icmp_ln1049_19_fu_885_p2 <= "1" when (index_V_2_reg_1453 = ap_const_lv4_4) else "0";
    icmp_ln1049_20_fu_890_p2 <= "1" when (index_V_2_reg_1453 = ap_const_lv4_C) else "0";
    icmp_ln1049_21_fu_988_p2 <= "1" when (index_cos_V_4_reg_1460 = ap_const_lv4_4) else "0";
    icmp_ln1049_22_fu_443_p2 <= "1" when (shl_ln315_fu_386_p2 = p_k) else "0";
    icmp_ln1049_fu_479_p2 <= "1" when (p_k_read_reg_1351 = ap_const_lv4_4) else "0";
    imagSinVal_3_fu_764_p3 <= 
        select_ln340_7_fu_756_p3 when (index_invert_control_imag_4_reg_1407(0) = '1') else 
        temp_out_sin_V_5_fu_692_p3;
    imagSinVal_4_fu_973_p3 <= 
        select_ln340_9_fu_965_p3 when (output_negate_control_imag_4_fu_878_p3(0) = '1') else 
        temp_out_sin_V_6_fu_901_p3;
    imagSinVal_fu_567_p3 <= 
        select_ln340_fu_559_p3 when (output_negate_control_imag_fu_472_p3(0) = '1') else 
        temp_out_sin_V_fu_495_p3;
    index_V_2_fu_392_p2 <= std_logic_vector(unsigned(shl_ln315_fu_386_p2) - unsigned(p_k));
    index_V_fu_286_p2 <= std_logic_vector(shift_left(unsigned(p_k),to_integer(unsigned('0' & ap_const_lv4_1(4-1 downto 0)))));
    index_cos_V_3_fu_292_p2 <= std_logic_vector(unsigned(index_V_fu_286_p2) + unsigned(ap_const_lv4_C));
    index_cos_V_4_fu_398_p2 <= std_logic_vector(unsigned(index_V_2_fu_392_p2) + unsigned(ap_const_lv4_C));
    index_cos_V_fu_218_p2 <= std_logic_vector(unsigned(p_k) + unsigned(ap_const_lv4_C));
    index_invert_control_imag_3_fu_298_p3 <= p_k(1 downto 1);
    index_invert_control_imag_4_fu_224_p3 <= p_k(2 downto 2);
    index_invert_control_imag_fu_404_p3 <= index_V_2_fu_392_p2(2 downto 2);
    index_invert_control_real_V_3_fu_349_p3 <= index_cos_V_3_fu_292_p2(2 downto 2);
    index_invert_control_real_V_4_fu_435_p3 <= index_cos_V_4_fu_398_p2(2 downto 2);
    index_invert_control_real_V_fu_255_p3 <= index_cos_V_fu_218_p2(2 downto 2);
    lut_index_imag_V_10_fu_242_p3 <= 
        lut_index_imag_V_9_fu_236_p2 when (index_invert_control_imag_4_fu_224_p3(0) = '1') else 
        lut_index_imag_V_fu_232_p1;
    lut_index_imag_V_11_fu_322_p3 <= (trunc_ln674_fu_318_p1 & ap_const_lv1_0);
    lut_index_imag_V_12_fu_330_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_imag_V_11_fu_322_p3));
    lut_index_imag_V_13_fu_336_p3 <= 
        lut_index_imag_V_12_fu_330_p2 when (index_invert_control_imag_3_fu_298_p3(0) = '1') else 
        lut_index_imag_V_11_fu_322_p3;
    lut_index_imag_V_14_fu_412_p1 <= index_V_2_fu_392_p2(2 - 1 downto 0);
    lut_index_imag_V_15_fu_416_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_imag_V_14_fu_412_p1));
    lut_index_imag_V_16_fu_422_p3 <= 
        lut_index_imag_V_15_fu_416_p2 when (index_invert_control_imag_fu_404_p3(0) = '1') else 
        lut_index_imag_V_14_fu_412_p1;
    lut_index_imag_V_9_fu_236_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_imag_V_fu_232_p1));
    lut_index_imag_V_fu_232_p1 <= p_k(2 - 1 downto 0);
    lut_index_real_V_10_fu_273_p3 <= 
        lut_index_real_V_9_fu_267_p2 when (index_invert_control_real_V_fu_255_p3(0) = '1') else 
        lut_index_real_V_fu_263_p1;
    lut_index_real_V_11_fu_363_p1 <= index_cos_V_3_fu_292_p2(2 - 1 downto 0);
    lut_index_real_V_12_fu_367_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_real_V_11_fu_363_p1));
    lut_index_real_V_13_fu_373_p3 <= 
        lut_index_real_V_12_fu_367_p2 when (index_invert_control_real_V_3_fu_349_p3(0) = '1') else 
        lut_index_real_V_11_fu_363_p1;
    lut_index_real_V_14_fu_449_p1 <= index_cos_V_4_fu_398_p2(2 - 1 downto 0);
    lut_index_real_V_15_fu_453_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_real_V_14_fu_449_p1));
    lut_index_real_V_16_fu_459_p3 <= 
        lut_index_real_V_15_fu_453_p2 when (index_invert_control_real_V_4_fu_435_p3(0) = '1') else 
        lut_index_real_V_14_fu_449_p1;
    lut_index_real_V_9_fu_267_p2 <= std_logic_vector(unsigned(ap_const_lv2_0) - unsigned(lut_index_real_V_fu_263_p1));
    lut_index_real_V_fu_263_p1 <= index_cos_V_fu_218_p2(2 - 1 downto 0);
    output_negate_control_imag_4_fu_878_p3 <= index_V_2_reg_1453(3 downto 3);
    output_negate_control_imag_fu_472_p3 <= p_k_read_reg_1351(3 downto 3);
    output_negate_control_real_V_3_fu_771_p3 <= index_cos_V_3_reg_1422(3 downto 3);
    output_negate_control_real_V_4_fu_981_p3 <= index_cos_V_4_reg_1460(3 downto 3);
    output_negate_control_real_V_fu_575_p3 <= index_cos_V_reg_1401(3 downto 3);
    output_saturation_control_imag_3_fu_688_p2 <= (icmp_ln1049_16_reg_1433 or icmp_ln1049_15_reg_1428);
    output_saturation_control_imag_4_fu_895_p2 <= (icmp_ln1049_20_fu_890_p2 or icmp_ln1049_19_fu_885_p2);
    output_saturation_control_imag_fu_489_p2 <= (icmp_ln1049_fu_479_p2 or icmp_ln1049_12_fu_484_p2);
    output_saturation_control_real_V_3_fu_783_p2 <= (icmp_ln1049_18_reg_1443 or icmp_ln1049_17_fu_778_p2);
    output_saturation_control_real_V_4_fu_993_p2 <= (icmp_ln1049_22_reg_1471 or icmp_ln1049_21_fu_988_p2);
    output_saturation_control_real_V_fu_592_p2 <= (icmp_ln1049_14_fu_587_p2 or icmp_ln1049_13_fu_582_p2);
    overflow_10_fu_1042_p2 <= (xor_ln794_10_fu_1036_p2 and p_Result_52_fu_1028_p3);
    overflow_6_fu_642_p2 <= (xor_ln794_6_fu_636_p2 and p_Result_44_fu_628_p3);
    overflow_7_fu_736_p2 <= (xor_ln794_7_fu_730_p2 and p_Result_46_fu_722_p3);
    overflow_8_fu_832_p2 <= (xor_ln794_8_fu_826_p2 and p_Result_48_fu_818_p3);
    overflow_9_fu_945_p2 <= (xor_ln794_9_fu_939_p2 and p_Result_50_fu_931_p3);
    overflow_fu_539_p2 <= (xor_ln794_fu_533_p2 and p_Result_42_fu_525_p3);
    p_Result_42_fu_525_p3 <= r_fu_507_p2(17 downto 17);
    p_Result_43_fu_616_p3 <= r_V_18_fu_610_p2(18 downto 18);
    p_Result_44_fu_628_p3 <= r_V_18_fu_610_p2(17 downto 17);
    p_Result_45_fu_710_p3 <= r_14_fu_704_p2(18 downto 18);
    p_Result_46_fu_722_p3 <= r_14_fu_704_p2(17 downto 17);
    p_Result_47_fu_806_p3 <= r_V_19_fu_800_p2(18 downto 18);
    p_Result_48_fu_818_p3 <= r_V_19_fu_800_p2(17 downto 17);
    p_Result_49_fu_919_p3 <= r_15_fu_913_p2(18 downto 18);
    p_Result_50_fu_931_p3 <= r_15_fu_913_p2(17 downto 17);
    p_Result_51_fu_1016_p3 <= r_V_20_fu_1010_p2(18 downto 18);
    p_Result_52_fu_1028_p3 <= r_V_20_fu_1010_p2(17 downto 17);
    p_Result_s_fu_513_p3 <= r_fu_507_p2(18 downto 18);
    p_Val2_17_fu_521_p1 <= r_fu_507_p2(18 - 1 downto 0);
    p_Val2_20_fu_624_p1 <= r_V_18_fu_610_p2(18 - 1 downto 0);
    p_Val2_23_fu_718_p1 <= r_14_fu_704_p2(18 - 1 downto 0);
    p_Val2_26_fu_814_p1 <= r_V_19_fu_800_p2(18 - 1 downto 0);
    p_Val2_29_fu_927_p1 <= r_15_fu_913_p2(18 - 1 downto 0);
    p_Val2_32_fu_1024_p1 <= r_V_20_fu_1010_p2(18 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address0 <= ap_const_lv64_0(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address1 <= zext_ln573_10_fu_467_p1(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address2 <= zext_ln573_9_fu_430_p1(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address3 <= zext_ln573_8_fu_381_p1(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address4 <= zext_ln573_7_fu_344_p1(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address5 <= zext_ln573_6_fu_281_p1(4 - 1 downto 0);
    p_twiddleTable_M_imag_0_0_0_address6 <= zext_ln573_fu_250_p1(4 - 1 downto 0);

    p_twiddleTable_M_imag_0_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce0 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce1 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce2 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce2 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce3_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce3 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce3 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce4 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce4 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce5_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce5 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce5 <= ap_const_logic_0;
        end if; 
    end process;


    p_twiddleTable_M_imag_0_0_0_ce6_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_ce, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_ce) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_twiddleTable_M_imag_0_0_0_ce6 <= ap_const_logic_1;
        else 
            p_twiddleTable_M_imag_0_0_0_ce6 <= ap_const_logic_0;
        end if; 
    end process;

    r_14_fu_704_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_11_fu_700_p1));
    r_15_fu_913_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_13_fu_909_p1));
    r_V_11_fu_1118_p3 <= (p_read_13_reg_1374_pp0_iter3_reg & ap_const_lv16_0);
    r_V_18_fu_610_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_10_fu_606_p1));
    r_V_19_fu_800_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_12_fu_796_p1));
    r_V_20_fu_1010_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_14_fu_1006_p1));
    r_V_fu_1107_p3 <= (p_read39_reg_1395_pp0_iter3_reg & ap_const_lv16_0);
    r_fu_507_p2 <= std_logic_vector(unsigned(ap_const_lv19_0) - unsigned(sext_ln712_9_fu_503_p1));
    realCosVal_3_fu_860_p3 <= 
        select_ln340_8_fu_852_p3 when (output_negate_control_real_V_3_fu_771_p3(0) = '1') else 
        temp_out_cos_V_3_fu_788_p3;
    realCosVal_4_fu_1070_p3 <= 
        select_ln340_10_fu_1062_p3 when (output_negate_control_real_V_4_fu_981_p3(0) = '1') else 
        temp_out_cos_V_4_fu_998_p3;
    realCosVal_fu_670_p3 <= 
        select_ln340_6_fu_662_p3 when (output_negate_control_real_V_fu_575_p3(0) = '1') else 
        temp_out_cos_V_fu_598_p3;
    select_ln340_10_fu_1062_p3 <= 
        select_ln384_10_fu_1054_p3 when (xor_ln340_10_fu_1048_p2(0) = '1') else 
        p_Val2_32_fu_1024_p1;
    select_ln340_6_fu_662_p3 <= 
        select_ln384_6_fu_654_p3 when (xor_ln340_6_fu_648_p2(0) = '1') else 
        p_Val2_20_fu_624_p1;
    select_ln340_7_fu_756_p3 <= 
        select_ln384_7_fu_748_p3 when (xor_ln340_7_fu_742_p2(0) = '1') else 
        p_Val2_23_fu_718_p1;
    select_ln340_8_fu_852_p3 <= 
        select_ln384_8_fu_844_p3 when (xor_ln340_8_fu_838_p2(0) = '1') else 
        p_Val2_26_fu_814_p1;
    select_ln340_9_fu_965_p3 <= 
        select_ln384_9_fu_957_p3 when (xor_ln340_9_fu_951_p2(0) = '1') else 
        p_Val2_29_fu_927_p1;
    select_ln340_fu_559_p3 <= 
        select_ln384_fu_551_p3 when (xor_ln340_fu_545_p2(0) = '1') else 
        p_Val2_17_fu_521_p1;
    select_ln384_10_fu_1054_p3 <= 
        ap_const_lv18_1FFFF when (overflow_10_fu_1042_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln384_6_fu_654_p3 <= 
        ap_const_lv18_1FFFF when (overflow_6_fu_642_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln384_7_fu_748_p3 <= 
        ap_const_lv18_1FFFF when (overflow_7_fu_736_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln384_8_fu_844_p3 <= 
        ap_const_lv18_1FFFF when (overflow_8_fu_832_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln384_9_fu_957_p3 <= 
        ap_const_lv18_1FFFF when (overflow_9_fu_945_p2(0) = '1') else 
        ap_const_lv18_20000;
    select_ln384_fu_551_p3 <= 
        ap_const_lv18_1FFFF when (overflow_fu_539_p2(0) = '1') else 
        ap_const_lv18_20000;
        sext_ln1171_15_fu_1091_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_twiddleTable_M_imag_0_0_0_q0),41));

        sext_ln1171_17_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_16_reg_1390),41));

        sext_ln1171_18_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(realCosVal_fu_670_p3),41));

        sext_ln1171_19_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_12_reg_1369),41));

        sext_ln1171_20_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imagSinVal_reg_1486),41));

        sext_ln1171_21_fu_868_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_15_reg_1385),41));

        sext_ln1171_22_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(realCosVal_3_fu_860_p3),41));

        sext_ln1171_23_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_11_reg_1364),41));

        sext_ln1171_24_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imagSinVal_3_reg_1509),41));

        sext_ln1171_25_fu_1078_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_14_reg_1380),41));

        sext_ln1171_26_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(realCosVal_4_fu_1070_p3),41));

        sext_ln1171_27_fu_1085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_read_10_reg_1359),41));

        sext_ln1171_28_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(imagSinVal_4_reg_1532),41));

        sext_ln712_10_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_cos_V_fu_598_p3),19));

        sext_ln712_11_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_sin_V_5_fu_692_p3),19));

        sext_ln712_12_fu_796_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_cos_V_3_fu_788_p3),19));

        sext_ln712_13_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_sin_V_6_fu_901_p3),19));

        sext_ln712_14_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_cos_V_4_fu_998_p3),19));

        sext_ln712_9_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(temp_out_sin_V_fu_495_p3),19));

    shl_ln315_fu_386_p2 <= std_logic_vector(shift_left(unsigned(p_k),to_integer(unsigned('0' & ap_const_lv4_2(4-1 downto 0)))));
    temp_out_cos_V_3_fu_788_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_real_V_3_fu_783_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q3;
    temp_out_cos_V_4_fu_998_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_real_V_4_fu_993_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q1;
    temp_out_cos_V_fu_598_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_real_V_fu_592_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q5;
    temp_out_sin_V_5_fu_692_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_imag_3_fu_688_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q4;
    temp_out_sin_V_6_fu_901_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_imag_4_fu_895_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q2;
    temp_out_sin_V_fu_495_p3 <= 
        ap_const_lv18_30000 when (output_saturation_control_imag_fu_489_p2(0) = '1') else 
        p_twiddleTable_M_imag_0_0_0_q6;
    trunc_ln674_fu_318_p1 <= p_k(1 - 1 downto 0);
    xor_ln340_10_fu_1048_p2 <= (p_Result_52_fu_1028_p3 xor p_Result_51_fu_1016_p3);
    xor_ln340_6_fu_648_p2 <= (p_Result_44_fu_628_p3 xor p_Result_43_fu_616_p3);
    xor_ln340_7_fu_742_p2 <= (p_Result_46_fu_722_p3 xor p_Result_45_fu_710_p3);
    xor_ln340_8_fu_838_p2 <= (p_Result_48_fu_818_p3 xor p_Result_47_fu_806_p3);
    xor_ln340_9_fu_951_p2 <= (p_Result_50_fu_931_p3 xor p_Result_49_fu_919_p3);
    xor_ln340_fu_545_p2 <= (p_Result_s_fu_513_p3 xor p_Result_42_fu_525_p3);
    xor_ln794_10_fu_1036_p2 <= (p_Result_51_fu_1016_p3 xor ap_const_lv1_1);
    xor_ln794_6_fu_636_p2 <= (p_Result_43_fu_616_p3 xor ap_const_lv1_1);
    xor_ln794_7_fu_730_p2 <= (p_Result_45_fu_710_p3 xor ap_const_lv1_1);
    xor_ln794_8_fu_826_p2 <= (p_Result_47_fu_806_p3 xor ap_const_lv1_1);
    xor_ln794_9_fu_939_p2 <= (p_Result_49_fu_919_p3 xor ap_const_lv1_1);
    xor_ln794_fu_533_p2 <= (p_Result_s_fu_513_p3 xor ap_const_lv1_1);
    zext_ln573_10_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_real_V_16_fu_459_p3),64));
    zext_ln573_6_fu_281_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_real_V_10_fu_273_p3),64));
    zext_ln573_7_fu_344_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_imag_V_13_fu_336_p3),64));
    zext_ln573_8_fu_381_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_real_V_13_fu_373_p3),64));
    zext_ln573_9_fu_430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_imag_V_16_fu_422_p3),64));
    zext_ln573_fu_250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lut_index_imag_V_10_fu_242_p3),64));
end behav;
