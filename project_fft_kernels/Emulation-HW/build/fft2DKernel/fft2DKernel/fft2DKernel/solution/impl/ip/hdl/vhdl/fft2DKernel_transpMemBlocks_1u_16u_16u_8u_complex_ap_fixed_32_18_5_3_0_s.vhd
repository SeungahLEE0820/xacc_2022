-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    l_invTranspBlkMatrixStream2_dout : IN STD_LOGIC_VECTOR (511 downto 0);
    l_invTranspBlkMatrixStream2_empty_n : IN STD_LOGIC;
    l_invTranspBlkMatrixStream2_read : OUT STD_LOGIC;
    fftOutStrm_din : OUT STD_LOGIC_VECTOR (511 downto 0);
    fftOutStrm_full_n : IN STD_LOGIC;
    fftOutStrm_write : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_5F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_7F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111111";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_9F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011111";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111111";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011111";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_100 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_const_lv32_11F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100011111";
    constant ap_const_lv32_120 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100100000";
    constant ap_const_lv32_13F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100111111";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv32_15F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101011111";
    constant ap_const_lv32_160 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101100000";
    constant ap_const_lv32_17F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101111111";
    constant ap_const_lv32_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110000000";
    constant ap_const_lv32_19F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110011111";
    constant ap_const_lv32_1A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110100000";
    constant ap_const_lv32_1BF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000110111111";
    constant ap_const_lv32_1C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111000000";
    constant ap_const_lv32_1DF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111011111";
    constant ap_const_lv32_1E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111100000";
    constant ap_const_lv32_1FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal l_invTranspBlkMatrixStream2_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fftOutStrm_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal add_ln268206_reg_531 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln269205_reg_542 : STD_LOGIC_VECTOR (0 downto 0);
    signal j204_reg_553 : STD_LOGIC_VECTOR (1 downto 0);
    signal i203_reg_564 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten202_reg_575 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln279201_reg_586 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln280200_reg_597 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1199_reg_608 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_3198_reg_619 : STD_LOGIC_VECTOR (4 downto 0);
    signal indvar_flatten6197_reg_630 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_fu_649_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1924 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_102_fu_821_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_102_reg_1929 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_fu_837_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_reg_1934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_1939 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_1944 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_1949 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_1954 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_1959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_1964 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_1969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_1974 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_1979 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1984 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1989 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_1994 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_1999 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_2004 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_2009 : STD_LOGIC_VECTOR (31 downto 0);
    signal j_fu_1231_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_reg_2014 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln268_1_fu_1237_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln268_1_reg_2019 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln269_fu_1243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln269_reg_2024 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln268_fu_1249_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln268_reg_2029 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln268_fu_1255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln268_reg_2034 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_1_fu_1288_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_reg_2038 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_state5_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal trunc_ln288_fu_1304_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln288_reg_2043 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln288_reg_2043_pp1_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal j_1_fu_1488_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_1_reg_2136 : STD_LOGIC_VECTOR (1 downto 0);
    signal add_ln279_1_fu_1494_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln279_1_reg_2141 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln280_fu_1500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln280_reg_2146 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln279_fu_1506_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln279_reg_2151 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln279_fu_1512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln279_reg_2156 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_15_fu_1518_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_2160 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1539_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_2165 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1565_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_2170 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1587_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_2175 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1614_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_2180 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1636_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_2185 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1663_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_2190 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1685_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_2195 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1712_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_2200 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1734_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_2205 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_1761_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_2210 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_1783_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_2215 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1810_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_2220 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_1832_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_2225 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1859_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_2230 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_1881_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_2235 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal l_buf_M_real_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_0_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_0_we0 : STD_LOGIC;
    signal l_buf_M_real_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_1_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_1_we0 : STD_LOGIC;
    signal l_buf_M_real_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_2_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_2_we0 : STD_LOGIC;
    signal l_buf_M_real_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_3_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_3_we0 : STD_LOGIC;
    signal l_buf_M_real_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_4_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_4_we0 : STD_LOGIC;
    signal l_buf_M_real_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_5_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_5_we0 : STD_LOGIC;
    signal l_buf_M_real_V_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_6_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_6_we0 : STD_LOGIC;
    signal l_buf_M_real_V_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_real_V_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_real_V_7_ce0 : STD_LOGIC;
    signal l_buf_M_real_V_7_we0 : STD_LOGIC;
    signal l_buf_M_real_V_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_0_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_0_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_1_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_1_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_1_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_2_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_2_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_2_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_3_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_3_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_3_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_4_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_4_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_4_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_5_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_5_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_5_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_6_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_6_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_6_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal l_buf_M_imag_V_7_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal l_buf_M_imag_V_7_ce0 : STD_LOGIC;
    signal l_buf_M_imag_V_7_we0 : STD_LOGIC;
    signal l_buf_M_imag_V_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_add_ln268206_phi_fu_535_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_icmp_ln269205_phi_fu_546_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_j204_phi_fu_557_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i203_phi_fu_568_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten202_phi_fu_579_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_add_ln279201_phi_fu_590_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_icmp_ln280200_phi_fu_601_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_j_1199_phi_fu_612_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_i_3198_phi_fu_623_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_indvar_flatten6197_phi_fu_634_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln274_fu_1261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_fu_1328_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_1_fu_1350_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_2_fu_1372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_3_fu_1394_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_4_fu_1416_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_5_fu_1438_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_6_fu_1460_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln287_7_fu_1482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal select_ln268_fu_641_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal shl_ln268_fu_657_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln269_fu_663_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln274_fu_827_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln145_fu_667_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_837_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_fu_831_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_859_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_859_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_887_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_1_fu_881_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_909_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_909_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_937_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_2_fu_931_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_4_fu_959_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_959_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_987_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_3_fu_981_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_1009_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1009_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1037_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_4_fu_1031_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_8_fu_1059_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1059_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1087_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_5_fu_1081_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_10_fu_1109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1109_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1137_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln274_6_fu_1131_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_fu_1159_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1159_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1187_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln274_fu_1181_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_14_fu_1209_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p5 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1209_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln279_fu_1280_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal empty_104_fu_1314_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln288_fu_1308_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_32_fu_1296_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln_fu_1318_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_1_fu_1334_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_1_fu_1340_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_2_fu_1356_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_2_fu_1362_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_3_fu_1378_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_3_fu_1384_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_4_fu_1400_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_4_fu_1406_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_5_fu_1422_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_5_fu_1428_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln288_6_fu_1444_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_6_fu_1450_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln288_fu_1466_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal or_ln287_7_fu_1472_p4 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln291_fu_1560_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln291_1_fu_1609_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln291_2_fu_1658_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal xor_ln291_fu_1707_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln291_3_fu_1756_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln291_4_fu_1805_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln291_5_fu_1854_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fft2DKernel_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    l_buf_M_real_V_0_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_0_address0,
        ce0 => l_buf_M_real_V_0_ce0,
        we0 => l_buf_M_real_V_0_we0,
        d0 => tmp_reg_1934,
        q0 => l_buf_M_real_V_0_q0);

    l_buf_M_real_V_1_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_1_address0,
        ce0 => l_buf_M_real_V_1_ce0,
        we0 => l_buf_M_real_V_1_we0,
        d0 => tmp_1_reg_1944,
        q0 => l_buf_M_real_V_1_q0);

    l_buf_M_real_V_2_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_2_address0,
        ce0 => l_buf_M_real_V_2_ce0,
        we0 => l_buf_M_real_V_2_we0,
        d0 => tmp_3_reg_1954,
        q0 => l_buf_M_real_V_2_q0);

    l_buf_M_real_V_3_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_3_address0,
        ce0 => l_buf_M_real_V_3_ce0,
        we0 => l_buf_M_real_V_3_we0,
        d0 => tmp_5_reg_1964,
        q0 => l_buf_M_real_V_3_q0);

    l_buf_M_real_V_4_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_4_address0,
        ce0 => l_buf_M_real_V_4_ce0,
        we0 => l_buf_M_real_V_4_we0,
        d0 => tmp_7_reg_1974,
        q0 => l_buf_M_real_V_4_q0);

    l_buf_M_real_V_5_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_5_address0,
        ce0 => l_buf_M_real_V_5_ce0,
        we0 => l_buf_M_real_V_5_we0,
        d0 => tmp_9_reg_1984,
        q0 => l_buf_M_real_V_5_q0);

    l_buf_M_real_V_6_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_6_address0,
        ce0 => l_buf_M_real_V_6_ce0,
        we0 => l_buf_M_real_V_6_we0,
        d0 => tmp_11_reg_1994,
        q0 => l_buf_M_real_V_6_q0);

    l_buf_M_real_V_7_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_real_V_7_address0,
        ce0 => l_buf_M_real_V_7_ce0,
        we0 => l_buf_M_real_V_7_we0,
        d0 => tmp_13_reg_2004,
        q0 => l_buf_M_real_V_7_q0);

    l_buf_M_imag_V_0_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_0_address0,
        ce0 => l_buf_M_imag_V_0_ce0,
        we0 => l_buf_M_imag_V_0_we0,
        d0 => tmp_s_reg_1939,
        q0 => l_buf_M_imag_V_0_q0);

    l_buf_M_imag_V_1_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_1_address0,
        ce0 => l_buf_M_imag_V_1_ce0,
        we0 => l_buf_M_imag_V_1_we0,
        d0 => tmp_2_reg_1949,
        q0 => l_buf_M_imag_V_1_q0);

    l_buf_M_imag_V_2_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_2_address0,
        ce0 => l_buf_M_imag_V_2_ce0,
        we0 => l_buf_M_imag_V_2_we0,
        d0 => tmp_4_reg_1959,
        q0 => l_buf_M_imag_V_2_q0);

    l_buf_M_imag_V_3_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_3_address0,
        ce0 => l_buf_M_imag_V_3_ce0,
        we0 => l_buf_M_imag_V_3_we0,
        d0 => tmp_6_reg_1969,
        q0 => l_buf_M_imag_V_3_q0);

    l_buf_M_imag_V_4_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_4_address0,
        ce0 => l_buf_M_imag_V_4_ce0,
        we0 => l_buf_M_imag_V_4_we0,
        d0 => tmp_8_reg_1979,
        q0 => l_buf_M_imag_V_4_q0);

    l_buf_M_imag_V_5_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_5_address0,
        ce0 => l_buf_M_imag_V_5_ce0,
        we0 => l_buf_M_imag_V_5_we0,
        d0 => tmp_10_reg_1989,
        q0 => l_buf_M_imag_V_5_q0);

    l_buf_M_imag_V_6_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_6_address0,
        ce0 => l_buf_M_imag_V_6_ce0,
        we0 => l_buf_M_imag_V_6_we0,
        d0 => tmp_12_reg_1999,
        q0 => l_buf_M_imag_V_6_q0);

    l_buf_M_imag_V_7_U : component fft2DKernel_transpMemBlocks_1u_16u_16u_8u_complex_ap_fixed_32_18_5_3_0_s_l_buf_M_real_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => l_buf_M_imag_V_7_address0,
        ce0 => l_buf_M_imag_V_7_ce0,
        we0 => l_buf_M_imag_V_7_we0,
        d0 => tmp_14_reg_2009,
        q0 => l_buf_M_imag_V_7_q0);

    mux_83_32_1_1_U1764 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_fu_837_p2,
        din2 => tmp_fu_837_p3,
        din3 => tmp_fu_837_p4,
        din4 => tmp_fu_837_p5,
        din5 => tmp_fu_837_p6,
        din6 => tmp_fu_837_p7,
        din7 => tmp_fu_837_p8,
        din8 => sub_ln274_fu_831_p2,
        dout => tmp_fu_837_p10);

    mux_83_32_1_1_U1765 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_s_fu_859_p1,
        din1 => tmp_s_fu_859_p2,
        din2 => tmp_s_fu_859_p3,
        din3 => tmp_s_fu_859_p4,
        din4 => tmp_s_fu_859_p5,
        din5 => tmp_s_fu_859_p6,
        din6 => tmp_s_fu_859_p7,
        din7 => tmp_s_fu_859_p8,
        din8 => sub_ln274_fu_831_p2,
        dout => tmp_s_fu_859_p10);

    mux_83_32_1_1_U1766 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_1_fu_887_p2,
        din2 => tmp_1_fu_887_p3,
        din3 => tmp_1_fu_887_p4,
        din4 => tmp_1_fu_887_p5,
        din5 => tmp_1_fu_887_p6,
        din6 => tmp_1_fu_887_p7,
        din7 => tmp_1_fu_887_p8,
        din8 => sub_ln274_1_fu_881_p2,
        dout => tmp_1_fu_887_p10);

    mux_83_32_1_1_U1767 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_2_fu_909_p1,
        din1 => tmp_2_fu_909_p2,
        din2 => tmp_2_fu_909_p3,
        din3 => tmp_2_fu_909_p4,
        din4 => tmp_2_fu_909_p5,
        din5 => tmp_2_fu_909_p6,
        din6 => tmp_2_fu_909_p7,
        din7 => tmp_2_fu_909_p8,
        din8 => sub_ln274_1_fu_881_p2,
        dout => tmp_2_fu_909_p10);

    mux_83_32_1_1_U1768 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_3_fu_937_p2,
        din2 => tmp_3_fu_937_p3,
        din3 => tmp_3_fu_937_p4,
        din4 => tmp_3_fu_937_p5,
        din5 => tmp_3_fu_937_p6,
        din6 => tmp_3_fu_937_p7,
        din7 => tmp_3_fu_937_p8,
        din8 => sub_ln274_2_fu_931_p2,
        dout => tmp_3_fu_937_p10);

    mux_83_32_1_1_U1769 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_4_fu_959_p1,
        din1 => tmp_4_fu_959_p2,
        din2 => tmp_4_fu_959_p3,
        din3 => tmp_4_fu_959_p4,
        din4 => tmp_4_fu_959_p5,
        din5 => tmp_4_fu_959_p6,
        din6 => tmp_4_fu_959_p7,
        din7 => tmp_4_fu_959_p8,
        din8 => sub_ln274_2_fu_931_p2,
        dout => tmp_4_fu_959_p10);

    mux_83_32_1_1_U1770 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_5_fu_987_p2,
        din2 => tmp_5_fu_987_p3,
        din3 => tmp_5_fu_987_p4,
        din4 => tmp_5_fu_987_p5,
        din5 => tmp_5_fu_987_p6,
        din6 => tmp_5_fu_987_p7,
        din7 => tmp_5_fu_987_p8,
        din8 => sub_ln274_3_fu_981_p2,
        dout => tmp_5_fu_987_p10);

    mux_83_32_1_1_U1771 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_6_fu_1009_p1,
        din1 => tmp_6_fu_1009_p2,
        din2 => tmp_6_fu_1009_p3,
        din3 => tmp_6_fu_1009_p4,
        din4 => tmp_6_fu_1009_p5,
        din5 => tmp_6_fu_1009_p6,
        din6 => tmp_6_fu_1009_p7,
        din7 => tmp_6_fu_1009_p8,
        din8 => sub_ln274_3_fu_981_p2,
        dout => tmp_6_fu_1009_p10);

    mux_83_32_1_1_U1772 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_7_fu_1037_p2,
        din2 => tmp_7_fu_1037_p3,
        din3 => tmp_7_fu_1037_p4,
        din4 => tmp_7_fu_1037_p5,
        din5 => tmp_7_fu_1037_p6,
        din6 => tmp_7_fu_1037_p7,
        din7 => tmp_7_fu_1037_p8,
        din8 => sub_ln274_4_fu_1031_p2,
        dout => tmp_7_fu_1037_p10);

    mux_83_32_1_1_U1773 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_8_fu_1059_p1,
        din1 => tmp_8_fu_1059_p2,
        din2 => tmp_8_fu_1059_p3,
        din3 => tmp_8_fu_1059_p4,
        din4 => tmp_8_fu_1059_p5,
        din5 => tmp_8_fu_1059_p6,
        din6 => tmp_8_fu_1059_p7,
        din7 => tmp_8_fu_1059_p8,
        din8 => sub_ln274_4_fu_1031_p2,
        dout => tmp_8_fu_1059_p10);

    mux_83_32_1_1_U1774 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_9_fu_1087_p2,
        din2 => tmp_9_fu_1087_p3,
        din3 => tmp_9_fu_1087_p4,
        din4 => tmp_9_fu_1087_p5,
        din5 => tmp_9_fu_1087_p6,
        din6 => tmp_9_fu_1087_p7,
        din7 => tmp_9_fu_1087_p8,
        din8 => sub_ln274_5_fu_1081_p2,
        dout => tmp_9_fu_1087_p10);

    mux_83_32_1_1_U1775 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_10_fu_1109_p1,
        din1 => tmp_10_fu_1109_p2,
        din2 => tmp_10_fu_1109_p3,
        din3 => tmp_10_fu_1109_p4,
        din4 => tmp_10_fu_1109_p5,
        din5 => tmp_10_fu_1109_p6,
        din6 => tmp_10_fu_1109_p7,
        din7 => tmp_10_fu_1109_p8,
        din8 => sub_ln274_5_fu_1081_p2,
        dout => tmp_10_fu_1109_p10);

    mux_83_32_1_1_U1776 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_11_fu_1137_p2,
        din2 => tmp_11_fu_1137_p3,
        din3 => tmp_11_fu_1137_p4,
        din4 => tmp_11_fu_1137_p5,
        din5 => tmp_11_fu_1137_p6,
        din6 => tmp_11_fu_1137_p7,
        din7 => tmp_11_fu_1137_p8,
        din8 => sub_ln274_6_fu_1131_p2,
        dout => tmp_11_fu_1137_p10);

    mux_83_32_1_1_U1777 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_12_fu_1159_p1,
        din1 => tmp_12_fu_1159_p2,
        din2 => tmp_12_fu_1159_p3,
        din3 => tmp_12_fu_1159_p4,
        din4 => tmp_12_fu_1159_p5,
        din5 => tmp_12_fu_1159_p6,
        din6 => tmp_12_fu_1159_p7,
        din7 => tmp_12_fu_1159_p8,
        din8 => sub_ln274_6_fu_1131_p2,
        dout => tmp_12_fu_1159_p10);

    mux_83_32_1_1_U1778 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => trunc_ln145_fu_667_p1,
        din1 => tmp_13_fu_1187_p2,
        din2 => tmp_13_fu_1187_p3,
        din3 => tmp_13_fu_1187_p4,
        din4 => tmp_13_fu_1187_p5,
        din5 => tmp_13_fu_1187_p6,
        din6 => tmp_13_fu_1187_p7,
        din7 => tmp_13_fu_1187_p8,
        din8 => xor_ln274_fu_1181_p2,
        dout => tmp_13_fu_1187_p10);

    mux_83_32_1_1_U1779 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => tmp_14_fu_1209_p1,
        din1 => tmp_14_fu_1209_p2,
        din2 => tmp_14_fu_1209_p3,
        din3 => tmp_14_fu_1209_p4,
        din4 => tmp_14_fu_1209_p5,
        din5 => tmp_14_fu_1209_p6,
        din6 => tmp_14_fu_1209_p7,
        din7 => tmp_14_fu_1209_p8,
        din8 => xor_ln274_fu_1181_p2,
        dout => tmp_14_fu_1209_p10);

    mux_83_32_1_1_U1780 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => trunc_ln288_reg_2043_pp1_iter1_reg,
        dout => tmp_15_fu_1518_p10);

    mux_83_32_1_1_U1781 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => trunc_ln288_reg_2043_pp1_iter1_reg,
        dout => tmp_16_fu_1539_p10);

    mux_83_32_1_1_U1782 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_fu_1560_p2,
        dout => tmp_17_fu_1565_p10);

    mux_83_32_1_1_U1783 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_fu_1560_p2,
        dout => tmp_18_fu_1587_p10);

    mux_83_32_1_1_U1784 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_1_fu_1609_p2,
        dout => tmp_19_fu_1614_p10);

    mux_83_32_1_1_U1785 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_1_fu_1609_p2,
        dout => tmp_20_fu_1636_p10);

    mux_83_32_1_1_U1786 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_2_fu_1658_p2,
        dout => tmp_21_fu_1663_p10);

    mux_83_32_1_1_U1787 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_2_fu_1658_p2,
        dout => tmp_22_fu_1685_p10);

    mux_83_32_1_1_U1788 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => xor_ln291_fu_1707_p2,
        dout => tmp_23_fu_1712_p10);

    mux_83_32_1_1_U1789 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => xor_ln291_fu_1707_p2,
        dout => tmp_24_fu_1734_p10);

    mux_83_32_1_1_U1790 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_3_fu_1756_p2,
        dout => tmp_25_fu_1761_p10);

    mux_83_32_1_1_U1791 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_3_fu_1756_p2,
        dout => tmp_26_fu_1783_p10);

    mux_83_32_1_1_U1792 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_4_fu_1805_p2,
        dout => tmp_27_fu_1810_p10);

    mux_83_32_1_1_U1793 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_4_fu_1805_p2,
        dout => tmp_28_fu_1832_p10);

    mux_83_32_1_1_U1794 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_real_V_0_q0,
        din1 => l_buf_M_real_V_1_q0,
        din2 => l_buf_M_real_V_2_q0,
        din3 => l_buf_M_real_V_3_q0,
        din4 => l_buf_M_real_V_4_q0,
        din5 => l_buf_M_real_V_5_q0,
        din6 => l_buf_M_real_V_6_q0,
        din7 => l_buf_M_real_V_7_q0,
        din8 => add_ln291_5_fu_1854_p2,
        dout => tmp_29_fu_1859_p10);

    mux_83_32_1_1_U1795 : component fft2DKernel_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => l_buf_M_imag_V_0_q0,
        din1 => l_buf_M_imag_V_1_q0,
        din2 => l_buf_M_imag_V_2_q0,
        din3 => l_buf_M_imag_V_3_q0,
        din4 => l_buf_M_imag_V_4_q0,
        din5 => l_buf_M_imag_V_5_q0,
        din6 => l_buf_M_imag_V_6_q0,
        din7 => l_buf_M_imag_V_7_q0,
        din8 => add_ln291_5_fu_1854_p2,
        dout => tmp_30_fu_1881_p10);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp1_flush_enable)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    add_ln268206_reg_531_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
                add_ln268206_reg_531 <= add_ln268_reg_2029;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                add_ln268206_reg_531 <= ap_const_lv5_1;
            end if; 
        end if;
    end process;

    add_ln279201_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                add_ln279201_reg_586 <= ap_const_lv5_1;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                add_ln279201_reg_586 <= add_ln279_reg_2151;
            end if; 
        end if;
    end process;

    i203_reg_564_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
                i203_reg_564 <= i_reg_1924;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i203_reg_564 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    i_3198_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_3198_reg_619 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                i_3198_reg_619 <= i_1_reg_2038;
            end if; 
        end if;
    end process;

    icmp_ln269205_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
                icmp_ln269205_reg_542 <= icmp_ln269_reg_2024;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                icmp_ln269205_reg_542 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    icmp_ln280200_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                icmp_ln280200_reg_597 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                icmp_ln280200_reg_597 <= icmp_ln280_reg_2146;
            end if; 
        end if;
    end process;

    indvar_flatten202_reg_575_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
                indvar_flatten202_reg_575 <= add_ln268_1_reg_2019;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten202_reg_575 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    indvar_flatten6197_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten6197_reg_630 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                indvar_flatten6197_reg_630 <= add_ln279_1_reg_2141;
            end if; 
        end if;
    end process;

    j204_reg_553_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
                j204_reg_553 <= j_reg_2014;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                j204_reg_553 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    j_1199_reg_608_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_1199_reg_608 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                j_1199_reg_608 <= j_1_reg_2136;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                add_ln268_1_reg_2019 <= add_ln268_1_fu_1237_p2;
                add_ln268_reg_2029 <= add_ln268_fu_1249_p2;
                i_reg_1924 <= i_fu_649_p3;
                icmp_ln269_reg_2024 <= icmp_ln269_fu_1243_p2;
                j_reg_2014 <= j_fu_1231_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                add_ln279_1_reg_2141 <= add_ln279_1_fu_1494_p2;
                add_ln279_reg_2151 <= add_ln279_fu_1506_p2;
                i_1_reg_2038 <= i_1_fu_1288_p3;
                icmp_ln280_reg_2146 <= icmp_ln280_fu_1500_p2;
                j_1_reg_2136 <= j_1_fu_1488_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_102_reg_1929 <= empty_102_fu_821_p2;
                icmp_ln268_reg_2034 <= icmp_ln268_fu_1255_p2;
                tmp_10_reg_1989 <= tmp_10_fu_1109_p10;
                tmp_11_reg_1994 <= tmp_11_fu_1137_p10;
                tmp_12_reg_1999 <= tmp_12_fu_1159_p10;
                tmp_13_reg_2004 <= tmp_13_fu_1187_p10;
                tmp_14_reg_2009 <= tmp_14_fu_1209_p10;
                tmp_1_reg_1944 <= tmp_1_fu_887_p10;
                tmp_2_reg_1949 <= tmp_2_fu_909_p10;
                tmp_3_reg_1954 <= tmp_3_fu_937_p10;
                tmp_4_reg_1959 <= tmp_4_fu_959_p10;
                tmp_5_reg_1964 <= tmp_5_fu_987_p10;
                tmp_6_reg_1969 <= tmp_6_fu_1009_p10;
                tmp_7_reg_1974 <= tmp_7_fu_1037_p10;
                tmp_8_reg_1979 <= tmp_8_fu_1059_p10;
                tmp_9_reg_1984 <= tmp_9_fu_1087_p10;
                tmp_reg_1934 <= tmp_fu_837_p10;
                tmp_s_reg_1939 <= tmp_s_fu_859_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln279_reg_2156 <= icmp_ln279_fu_1512_p2;
                trunc_ln288_reg_2043 <= trunc_ln288_fu_1304_p1;
                trunc_ln288_reg_2043_pp1_iter1_reg <= trunc_ln288_reg_2043;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                tmp_15_reg_2160 <= tmp_15_fu_1518_p10;
                tmp_16_reg_2165 <= tmp_16_fu_1539_p10;
                tmp_17_reg_2170 <= tmp_17_fu_1565_p10;
                tmp_18_reg_2175 <= tmp_18_fu_1587_p10;
                tmp_19_reg_2180 <= tmp_19_fu_1614_p10;
                tmp_20_reg_2185 <= tmp_20_fu_1636_p10;
                tmp_21_reg_2190 <= tmp_21_fu_1663_p10;
                tmp_22_reg_2195 <= tmp_22_fu_1685_p10;
                tmp_23_reg_2200 <= tmp_23_fu_1712_p10;
                tmp_24_reg_2205 <= tmp_24_fu_1734_p10;
                tmp_25_reg_2210 <= tmp_25_fu_1761_p10;
                tmp_26_reg_2215 <= tmp_26_fu_1783_p10;
                tmp_27_reg_2220 <= tmp_27_fu_1810_p10;
                tmp_28_reg_2225 <= tmp_28_fu_1832_p10;
                tmp_29_reg_2230 <= tmp_29_fu_1859_p10;
                tmp_30_reg_2235 <= tmp_30_fu_1881_p10;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if (not(((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln268_1_fu_1237_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten202_phi_fu_579_p4) + unsigned(ap_const_lv5_1));
    add_ln268_fu_1249_p2 <= std_logic_vector(unsigned(i_fu_649_p3) + unsigned(ap_const_lv5_1));
    add_ln279_1_fu_1494_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten6197_phi_fu_634_p4) + unsigned(ap_const_lv5_1));
    add_ln279_fu_1506_p2 <= std_logic_vector(unsigned(i_1_fu_1288_p3) + unsigned(ap_const_lv5_1));
    add_ln291_1_fu_1609_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_2));
    add_ln291_2_fu_1658_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_3));
    add_ln291_3_fu_1756_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_5));
    add_ln291_4_fu_1805_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_6));
    add_ln291_5_fu_1854_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_7));
    add_ln291_fu_1560_p2 <= std_logic_vector(unsigned(trunc_ln288_reg_2043_pp1_iter1_reg) + unsigned(ap_const_lv3_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(l_invTranspBlkMatrixStream2_empty_n, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (l_invTranspBlkMatrixStream2_empty_n = ap_const_logic_0));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(l_invTranspBlkMatrixStream2_empty_n, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (l_invTranspBlkMatrixStream2_empty_n = ap_const_logic_0));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(fftOutStrm_full_n, ap_enable_reg_pp1_iter3)
    begin
                ap_block_pp1_stage0_01001 <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fftOutStrm_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(fftOutStrm_full_n, ap_enable_reg_pp1_iter3)
    begin
                ap_block_pp1_stage0_11001 <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fftOutStrm_full_n = ap_const_logic_0));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(fftOutStrm_full_n, ap_enable_reg_pp1_iter3)
    begin
                ap_block_pp1_stage0_subdone <= ((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (fftOutStrm_full_n = ap_const_logic_0));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(l_invTranspBlkMatrixStream2_empty_n)
    begin
                ap_block_state2_pp0_stage0_iter0 <= (l_invTranspBlkMatrixStream2_empty_n = ap_const_logic_0);
    end process;

        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state8_pp1_stage0_iter3_assign_proc : process(fftOutStrm_full_n)
    begin
                ap_block_state8_pp1_stage0_iter3 <= (fftOutStrm_full_n = ap_const_logic_0);
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln268_fu_1255_p2, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_fu_1255_p2 = ap_const_lv1_1))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_flush_enable_assign_proc : process(ap_CS_fsm_pp1_stage0, icmp_ln279_fu_1512_p2, ap_block_pp1_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln279_fu_1512_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_condition_pp1_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp1_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (l_invTranspBlkMatrixStream2_blk_n and fftOutStrm_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_phi_mux_add_ln268206_phi_fu_535_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, add_ln268206_reg_531, add_ln268_reg_2029, icmp_ln268_reg_2034, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
            ap_phi_mux_add_ln268206_phi_fu_535_p4 <= add_ln268_reg_2029;
        else 
            ap_phi_mux_add_ln268206_phi_fu_535_p4 <= add_ln268206_reg_531;
        end if; 
    end process;


    ap_phi_mux_add_ln279201_phi_fu_590_p4_assign_proc : process(ap_block_pp1_stage0, add_ln279201_reg_586, ap_CS_fsm_pp1_stage0, add_ln279_reg_2151, icmp_ln279_reg_2156, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_add_ln279201_phi_fu_590_p4 <= add_ln279_reg_2151;
        else 
            ap_phi_mux_add_ln279201_phi_fu_590_p4 <= add_ln279201_reg_586;
        end if; 
    end process;


    ap_phi_mux_i203_phi_fu_568_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, i203_reg_564, i_reg_1924, icmp_ln268_reg_2034, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
            ap_phi_mux_i203_phi_fu_568_p4 <= i_reg_1924;
        else 
            ap_phi_mux_i203_phi_fu_568_p4 <= i203_reg_564;
        end if; 
    end process;


    ap_phi_mux_i_3198_phi_fu_623_p4_assign_proc : process(ap_block_pp1_stage0, i_3198_reg_619, i_1_reg_2038, ap_CS_fsm_pp1_stage0, icmp_ln279_reg_2156, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_i_3198_phi_fu_623_p4 <= i_1_reg_2038;
        else 
            ap_phi_mux_i_3198_phi_fu_623_p4 <= i_3198_reg_619;
        end if; 
    end process;


    ap_phi_mux_icmp_ln269205_phi_fu_546_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln269205_reg_542, icmp_ln269_reg_2024, icmp_ln268_reg_2034, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
            ap_phi_mux_icmp_ln269205_phi_fu_546_p4 <= icmp_ln269_reg_2024;
        else 
            ap_phi_mux_icmp_ln269205_phi_fu_546_p4 <= icmp_ln269205_reg_542;
        end if; 
    end process;


    ap_phi_mux_icmp_ln280200_phi_fu_601_p4_assign_proc : process(ap_block_pp1_stage0, icmp_ln280200_reg_597, ap_CS_fsm_pp1_stage0, icmp_ln280_reg_2146, icmp_ln279_reg_2156, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_icmp_ln280200_phi_fu_601_p4 <= icmp_ln280_reg_2146;
        else 
            ap_phi_mux_icmp_ln280200_phi_fu_601_p4 <= icmp_ln280200_reg_597;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten202_phi_fu_579_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, indvar_flatten202_reg_575, add_ln268_1_reg_2019, icmp_ln268_reg_2034, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
            ap_phi_mux_indvar_flatten202_phi_fu_579_p4 <= add_ln268_1_reg_2019;
        else 
            ap_phi_mux_indvar_flatten202_phi_fu_579_p4 <= indvar_flatten202_reg_575;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten6197_phi_fu_634_p4_assign_proc : process(ap_block_pp1_stage0, indvar_flatten6197_reg_630, ap_CS_fsm_pp1_stage0, add_ln279_1_reg_2141, icmp_ln279_reg_2156, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_indvar_flatten6197_phi_fu_634_p4 <= add_ln279_1_reg_2141;
        else 
            ap_phi_mux_indvar_flatten6197_phi_fu_634_p4 <= indvar_flatten6197_reg_630;
        end if; 
    end process;


    ap_phi_mux_j204_phi_fu_557_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j204_reg_553, j_reg_2014, icmp_ln268_reg_2034, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln268_reg_2034 = ap_const_lv1_0))) then 
            ap_phi_mux_j204_phi_fu_557_p4 <= j_reg_2014;
        else 
            ap_phi_mux_j204_phi_fu_557_p4 <= j204_reg_553;
        end if; 
    end process;


    ap_phi_mux_j_1199_phi_fu_612_p4_assign_proc : process(ap_block_pp1_stage0, j_1199_reg_608, ap_CS_fsm_pp1_stage0, j_1_reg_2136, icmp_ln279_reg_2156, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln279_reg_2156 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j_1199_phi_fu_612_p4 <= j_1_reg_2136;
        else 
            ap_phi_mux_j_1199_phi_fu_612_p4 <= j_1199_reg_608;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    empty_102_fu_821_p2 <= std_logic_vector(unsigned(shl_ln268_fu_657_p2) + unsigned(zext_ln269_fu_663_p1));
    empty_104_fu_1314_p1 <= select_ln279_fu_1280_p3(1 - 1 downto 0);

    fftOutStrm_blk_n_assign_proc : process(fftOutStrm_full_n, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0))) then 
            fftOutStrm_blk_n <= fftOutStrm_full_n;
        else 
            fftOutStrm_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fftOutStrm_din <= (((((((((((((((tmp_30_reg_2235 & tmp_29_reg_2230) & tmp_28_reg_2225) & tmp_27_reg_2220) & tmp_26_reg_2215) & tmp_25_reg_2210) & tmp_24_reg_2205) & tmp_23_reg_2200) & tmp_22_reg_2195) & tmp_21_reg_2190) & tmp_20_reg_2185) & tmp_19_reg_2180) & tmp_18_reg_2175) & tmp_17_reg_2170) & tmp_16_reg_2165) & tmp_15_reg_2160);

    fftOutStrm_write_assign_proc : process(ap_enable_reg_pp1_iter3, ap_block_pp1_stage0_11001)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            fftOutStrm_write <= ap_const_logic_1;
        else 
            fftOutStrm_write <= ap_const_logic_0;
        end if; 
    end process;

    i_1_fu_1288_p3 <= 
        ap_phi_mux_add_ln279201_phi_fu_590_p4 when (ap_phi_mux_icmp_ln280200_phi_fu_601_p4(0) = '1') else 
        ap_phi_mux_i_3198_phi_fu_623_p4;
    i_fu_649_p3 <= 
        ap_phi_mux_add_ln268206_phi_fu_535_p4 when (ap_phi_mux_icmp_ln269205_phi_fu_546_p4(0) = '1') else 
        ap_phi_mux_i203_phi_fu_568_p4;
    icmp_ln268_fu_1255_p2 <= "1" when (ap_phi_mux_indvar_flatten202_phi_fu_579_p4 = ap_const_lv5_1F) else "0";
    icmp_ln269_fu_1243_p2 <= "1" when (j_fu_1231_p2 = ap_const_lv2_2) else "0";
    icmp_ln279_fu_1512_p2 <= "1" when (ap_phi_mux_indvar_flatten6197_phi_fu_634_p4 = ap_const_lv5_1F) else "0";
    icmp_ln280_fu_1500_p2 <= "1" when (j_1_fu_1488_p2 = ap_const_lv2_2) else "0";
    j_1_fu_1488_p2 <= std_logic_vector(unsigned(select_ln279_fu_1280_p3) + unsigned(ap_const_lv2_1));
    j_fu_1231_p2 <= std_logic_vector(unsigned(select_ln268_fu_641_p3) + unsigned(ap_const_lv2_1));

    l_buf_M_imag_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_fu_1328_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_0_address0 <= zext_ln287_fu_1328_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_0_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_0_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_0_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_1_fu_1350_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_1_address0 <= zext_ln287_1_fu_1350_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_1_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_1_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_1_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_2_fu_1372_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_2_address0 <= zext_ln287_2_fu_1372_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_2_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_2_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_2_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_3_fu_1394_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_3_address0 <= zext_ln287_3_fu_1394_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_3_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_3_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_3_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_4_fu_1416_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_4_address0 <= zext_ln287_4_fu_1416_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_4_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_4_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_4_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_5_fu_1438_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_5_address0 <= zext_ln287_5_fu_1438_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_5_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_5_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_5_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_5_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_6_fu_1460_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_6_address0 <= zext_ln287_6_fu_1460_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_6_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_6_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_6_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_6_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_7_fu_1482_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_imag_V_7_address0 <= zext_ln287_7_fu_1482_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_7_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_imag_V_7_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_imag_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_imag_V_7_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_imag_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_imag_V_7_we0 <= ap_const_logic_1;
        else 
            l_buf_M_imag_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_fu_1328_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_0_address0 <= zext_ln287_fu_1328_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_0_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_0_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_0_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_0_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_1_fu_1350_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_1_address0 <= zext_ln287_1_fu_1350_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_1_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_1_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_1_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_1_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_2_fu_1372_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_2_address0 <= zext_ln287_2_fu_1372_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_2_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_2_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_2_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_2_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_3_fu_1394_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_3_address0 <= zext_ln287_3_fu_1394_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_3_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_3_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_3_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_3_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_4_fu_1416_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_4_address0 <= zext_ln287_4_fu_1416_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_4_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_4_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_4_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_4_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_5_fu_1438_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_5_address0 <= zext_ln287_5_fu_1438_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_5_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_5_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_5_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_5_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_6_fu_1460_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_6_address0 <= zext_ln287_6_fu_1460_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_6_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_6_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_6_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_6_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter1, zext_ln274_fu_1261_p1, zext_ln287_7_fu_1482_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            l_buf_M_real_V_7_address0 <= zext_ln287_7_fu_1482_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_7_address0 <= zext_ln274_fu_1261_p1(5 - 1 downto 0);
        else 
            l_buf_M_real_V_7_address0 <= "XXXXX";
        end if; 
    end process;


    l_buf_M_real_V_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, ap_block_pp1_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            l_buf_M_real_V_7_ce0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    l_buf_M_real_V_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_buf_M_real_V_7_we0 <= ap_const_logic_1;
        else 
            l_buf_M_real_V_7_we0 <= ap_const_logic_0;
        end if; 
    end process;


    l_invTranspBlkMatrixStream2_blk_n_assign_proc : process(l_invTranspBlkMatrixStream2_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_invTranspBlkMatrixStream2_blk_n <= l_invTranspBlkMatrixStream2_empty_n;
        else 
            l_invTranspBlkMatrixStream2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    l_invTranspBlkMatrixStream2_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            l_invTranspBlkMatrixStream2_read <= ap_const_logic_1;
        else 
            l_invTranspBlkMatrixStream2_read <= ap_const_logic_0;
        end if; 
    end process;

    or_ln287_1_fu_1340_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_1_fu_1334_p2) & tmp_32_fu_1296_p3);
    or_ln287_2_fu_1362_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_2_fu_1356_p2) & tmp_32_fu_1296_p3);
    or_ln287_3_fu_1384_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_3_fu_1378_p2) & tmp_32_fu_1296_p3);
    or_ln287_4_fu_1406_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_4_fu_1400_p2) & tmp_32_fu_1296_p3);
    or_ln287_5_fu_1428_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_5_fu_1422_p2) & tmp_32_fu_1296_p3);
    or_ln287_6_fu_1450_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_6_fu_1444_p2) & tmp_32_fu_1296_p3);
    or_ln287_7_fu_1472_p4 <= ((empty_104_fu_1314_p1 & xor_ln288_fu_1466_p2) & tmp_32_fu_1296_p3);
    or_ln_fu_1318_p4 <= ((empty_104_fu_1314_p1 & sub_ln288_fu_1308_p2) & tmp_32_fu_1296_p3);
    select_ln268_fu_641_p3 <= 
        ap_const_lv2_0 when (ap_phi_mux_icmp_ln269205_phi_fu_546_p4(0) = '1') else 
        ap_phi_mux_j204_phi_fu_557_p4;
    select_ln279_fu_1280_p3 <= 
        ap_const_lv2_0 when (ap_phi_mux_icmp_ln280200_phi_fu_601_p4(0) = '1') else 
        ap_phi_mux_j_1199_phi_fu_612_p4;
    shl_ln268_fu_657_p2 <= std_logic_vector(shift_left(unsigned(i_fu_649_p3),to_integer(unsigned('0' & ap_const_lv5_1(5-1 downto 0)))));
    sub_ln274_1_fu_881_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) - unsigned(trunc_ln274_fu_827_p1));
    sub_ln274_2_fu_931_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln274_fu_827_p1));
    sub_ln274_3_fu_981_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) - unsigned(trunc_ln274_fu_827_p1));
    sub_ln274_4_fu_1031_p2 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln274_fu_827_p1));
    sub_ln274_5_fu_1081_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln274_fu_827_p1));
    sub_ln274_6_fu_1131_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln274_fu_827_p1));
    sub_ln274_fu_831_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(trunc_ln274_fu_827_p1));
    sub_ln288_1_fu_1334_p2 <= std_logic_vector(unsigned(ap_const_lv3_1) - unsigned(trunc_ln288_fu_1304_p1));
    sub_ln288_2_fu_1356_p2 <= std_logic_vector(unsigned(ap_const_lv3_2) - unsigned(trunc_ln288_fu_1304_p1));
    sub_ln288_3_fu_1378_p2 <= std_logic_vector(unsigned(ap_const_lv3_3) - unsigned(trunc_ln288_fu_1304_p1));
    sub_ln288_4_fu_1400_p2 <= std_logic_vector(signed(ap_const_lv3_4) - signed(trunc_ln288_fu_1304_p1));
    sub_ln288_5_fu_1422_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(trunc_ln288_fu_1304_p1));
    sub_ln288_6_fu_1444_p2 <= std_logic_vector(signed(ap_const_lv3_6) - signed(trunc_ln288_fu_1304_p1));
    sub_ln288_fu_1308_p2 <= std_logic_vector(unsigned(ap_const_lv3_0) - unsigned(trunc_ln288_fu_1304_p1));
    tmp_10_fu_1109_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_10_fu_1109_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_10_fu_1109_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_10_fu_1109_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_10_fu_1109_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_10_fu_1109_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_10_fu_1109_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_10_fu_1109_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_11_fu_1137_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_11_fu_1137_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_11_fu_1137_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_11_fu_1137_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_11_fu_1137_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_11_fu_1137_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_11_fu_1137_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_12_fu_1159_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_12_fu_1159_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_12_fu_1159_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_12_fu_1159_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_12_fu_1159_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_12_fu_1159_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_12_fu_1159_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_12_fu_1159_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_13_fu_1187_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_13_fu_1187_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_13_fu_1187_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_13_fu_1187_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_13_fu_1187_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_13_fu_1187_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_13_fu_1187_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_14_fu_1209_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_14_fu_1209_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_14_fu_1209_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_14_fu_1209_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_14_fu_1209_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_14_fu_1209_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_14_fu_1209_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_14_fu_1209_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_1_fu_887_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_1_fu_887_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_1_fu_887_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_1_fu_887_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_1_fu_887_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_1_fu_887_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_1_fu_887_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_2_fu_909_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_2_fu_909_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_2_fu_909_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_2_fu_909_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_2_fu_909_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_2_fu_909_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_2_fu_909_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_2_fu_909_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_32_fu_1296_p3 <= i_1_fu_1288_p3(3 downto 3);
    tmp_3_fu_937_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_3_fu_937_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_3_fu_937_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_3_fu_937_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_3_fu_937_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_3_fu_937_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_3_fu_937_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_4_fu_959_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_4_fu_959_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_4_fu_959_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_4_fu_959_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_4_fu_959_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_4_fu_959_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_4_fu_959_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_4_fu_959_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_5_fu_987_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_5_fu_987_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_5_fu_987_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_5_fu_987_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_5_fu_987_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_5_fu_987_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_5_fu_987_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_6_fu_1009_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_6_fu_1009_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_6_fu_1009_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_6_fu_1009_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_6_fu_1009_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_6_fu_1009_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_6_fu_1009_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_6_fu_1009_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_7_fu_1037_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_7_fu_1037_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_7_fu_1037_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_7_fu_1037_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_7_fu_1037_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_7_fu_1037_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_7_fu_1037_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_8_fu_1059_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_8_fu_1059_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_8_fu_1059_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_8_fu_1059_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_8_fu_1059_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_8_fu_1059_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_8_fu_1059_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_8_fu_1059_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    tmp_9_fu_1087_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_9_fu_1087_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_9_fu_1087_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_9_fu_1087_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_9_fu_1087_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_9_fu_1087_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_9_fu_1087_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_fu_837_p2 <= l_invTranspBlkMatrixStream2_dout(95 downto 64);
    tmp_fu_837_p3 <= l_invTranspBlkMatrixStream2_dout(159 downto 128);
    tmp_fu_837_p4 <= l_invTranspBlkMatrixStream2_dout(223 downto 192);
    tmp_fu_837_p5 <= l_invTranspBlkMatrixStream2_dout(287 downto 256);
    tmp_fu_837_p6 <= l_invTranspBlkMatrixStream2_dout(351 downto 320);
    tmp_fu_837_p7 <= l_invTranspBlkMatrixStream2_dout(415 downto 384);
    tmp_fu_837_p8 <= l_invTranspBlkMatrixStream2_dout(479 downto 448);
    tmp_s_fu_859_p1 <= l_invTranspBlkMatrixStream2_dout(63 downto 32);
    tmp_s_fu_859_p2 <= l_invTranspBlkMatrixStream2_dout(127 downto 96);
    tmp_s_fu_859_p3 <= l_invTranspBlkMatrixStream2_dout(191 downto 160);
    tmp_s_fu_859_p4 <= l_invTranspBlkMatrixStream2_dout(255 downto 224);
    tmp_s_fu_859_p5 <= l_invTranspBlkMatrixStream2_dout(319 downto 288);
    tmp_s_fu_859_p6 <= l_invTranspBlkMatrixStream2_dout(383 downto 352);
    tmp_s_fu_859_p7 <= l_invTranspBlkMatrixStream2_dout(447 downto 416);
    tmp_s_fu_859_p8 <= l_invTranspBlkMatrixStream2_dout(511 downto 480);
    trunc_ln145_fu_667_p1 <= l_invTranspBlkMatrixStream2_dout(32 - 1 downto 0);
    trunc_ln274_fu_827_p1 <= i_fu_649_p3(3 - 1 downto 0);
    trunc_ln288_fu_1304_p1 <= i_1_fu_1288_p3(3 - 1 downto 0);
    xor_ln274_fu_1181_p2 <= (trunc_ln274_fu_827_p1 xor ap_const_lv3_7);
    xor_ln288_fu_1466_p2 <= (trunc_ln288_fu_1304_p1 xor ap_const_lv3_7);
    xor_ln291_fu_1707_p2 <= (trunc_ln288_reg_2043_pp1_iter1_reg xor ap_const_lv3_4);
    zext_ln269_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln268_fu_641_p3),5));
    zext_ln274_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_102_reg_1929),64));
    zext_ln287_1_fu_1350_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_1_fu_1340_p4),64));
    zext_ln287_2_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_2_fu_1362_p4),64));
    zext_ln287_3_fu_1394_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_3_fu_1384_p4),64));
    zext_ln287_4_fu_1416_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_4_fu_1406_p4),64));
    zext_ln287_5_fu_1438_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_5_fu_1428_p4),64));
    zext_ln287_6_fu_1460_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_6_fu_1450_p4),64));
    zext_ln287_7_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln287_7_fu_1472_p4),64));
    zext_ln287_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_1318_p4),64));
end behav;
