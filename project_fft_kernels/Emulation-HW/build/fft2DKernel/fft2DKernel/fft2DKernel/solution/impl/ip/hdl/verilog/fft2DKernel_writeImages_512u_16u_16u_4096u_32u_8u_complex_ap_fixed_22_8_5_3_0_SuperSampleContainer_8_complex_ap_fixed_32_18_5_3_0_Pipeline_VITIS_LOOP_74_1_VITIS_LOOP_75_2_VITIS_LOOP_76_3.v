// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module fft2DKernel_writeImages_512u_16u_16u_4096u_32u_8u_complex_ap_fixed_22_8_5_3_0_SuperSampleContainer_8_complex_ap_fixed_32_18_5_3_0_Pipeline_VITIS_LOOP_74_1_VITIS_LOOP_75_2_VITIS_LOOP_76_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        fftOutStrm_dout,
        fftOutStrm_empty_n,
        fftOutStrm_read,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        bound5,
        p_read,
        ap_ext_blocking_n,
        ap_str_blocking_n,
        ap_int_blocking_n
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [511:0] fftOutStrm_dout;
input   fftOutStrm_empty_n;
output   fftOutStrm_read;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [36:0] bound5;
input  [63:0] p_read;
output   ap_ext_blocking_n;
output   ap_str_blocking_n;
output   ap_int_blocking_n;

reg ap_idle;
reg fftOutStrm_read;
reg m_axi_gmem_AWVALID;
reg m_axi_gmem_WVALID;
reg m_axi_gmem_BREADY;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] empty_77_reg_1634;
reg    ap_block_state3_io;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_state64_pp0_stage0_iter63;
wire    ap_block_state65_pp0_stage0_iter64;
wire    ap_block_state66_pp0_stage0_iter65;
wire    ap_block_state67_pp0_stage0_iter66;
wire    ap_block_state68_pp0_stage0_iter67;
wire    ap_block_state69_pp0_stage0_iter68;
wire    ap_block_state70_pp0_stage0_iter69;
wire    ap_block_state71_pp0_stage0_iter70;
reg   [0:0] empty_79_reg_1638;
reg   [0:0] empty_79_reg_1638_pp0_iter70_reg;
reg    ap_block_state72_pp0_stage0_iter71;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln74_fu_338_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    fftOutStrm_blk_n;
wire    ap_block_pp0_stage0;
reg    gmem_blk_n_AW;
reg    gmem_blk_n_W;
reg    gmem_blk_n_B;
reg    ap_block_pp0_stage0_11001;
reg   [57:0] sext_ln85_1_mid2_v_reg_1629;
wire   [0:0] empty_77_fu_510_p2;
wire   [0:0] empty_79_fu_562_p2;
reg   [0:0] empty_79_reg_1638_pp0_iter2_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter3_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter4_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter5_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter6_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter7_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter8_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter9_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter10_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter11_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter12_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter13_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter14_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter15_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter16_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter17_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter18_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter19_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter20_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter21_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter22_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter23_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter24_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter25_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter26_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter27_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter28_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter29_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter30_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter31_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter32_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter33_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter34_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter35_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter36_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter37_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter38_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter39_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter40_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter41_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter42_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter43_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter44_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter45_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter46_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter47_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter48_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter49_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter50_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter51_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter52_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter53_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter54_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter55_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter56_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter57_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter58_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter59_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter60_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter61_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter62_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter63_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter64_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter65_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter66_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter67_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter68_reg;
reg   [0:0] empty_79_reg_1638_pp0_iter69_reg;
wire   [17:0] ret_V_2_fu_638_p3;
reg   [17:0] ret_V_2_reg_1642;
wire   [17:0] ret_V_5_fu_694_p3;
reg   [17:0] ret_V_5_reg_1647;
wire   [17:0] ret_V_8_fu_750_p3;
reg   [17:0] ret_V_8_reg_1652;
wire   [17:0] ret_V_11_fu_806_p3;
reg   [17:0] ret_V_11_reg_1657;
wire   [17:0] ret_V_14_fu_862_p3;
reg   [17:0] ret_V_14_reg_1662;
wire   [17:0] ret_V_17_fu_918_p3;
reg   [17:0] ret_V_17_reg_1667;
wire   [17:0] ret_V_20_fu_974_p3;
reg   [17:0] ret_V_20_reg_1672;
wire   [17:0] ret_V_23_fu_1030_p3;
reg   [17:0] ret_V_23_reg_1677;
wire   [17:0] ret_V_26_fu_1086_p3;
reg   [17:0] ret_V_26_reg_1682;
wire   [17:0] ret_V_29_fu_1142_p3;
reg   [17:0] ret_V_29_reg_1687;
wire   [17:0] ret_V_32_fu_1198_p3;
reg   [17:0] ret_V_32_reg_1692;
wire   [17:0] ret_V_35_fu_1254_p3;
reg   [17:0] ret_V_35_reg_1697;
wire   [17:0] ret_V_38_fu_1310_p3;
reg   [17:0] ret_V_38_reg_1702;
wire   [17:0] ret_V_41_fu_1366_p3;
reg   [17:0] ret_V_41_reg_1707;
wire   [17:0] ret_V_44_fu_1422_p3;
reg   [17:0] ret_V_44_reg_1712;
wire   [17:0] ret_V_47_fu_1478_p3;
reg   [17:0] ret_V_47_reg_1717;
wire  signed [63:0] sext_ln75_fu_593_p1;
reg    ap_block_pp0_stage0_01001;
reg   [1:0] c_fu_232;
wire   [1:0] select_ln76_fu_528_p3;
wire    ap_loop_init;
reg   [4:0] r_fu_236;
wire   [4:0] select_ln75_1_fu_490_p3;
reg   [6:0] indvar_flatten_fu_240;
wire   [6:0] select_ln75_2_fu_542_p3;
reg   [30:0] n_fu_244;
wire   [30:0] select_ln74_2_fu_413_p3;
reg   [36:0] indvar_flatten30_fu_248;
wire   [36:0] add_ln74_fu_343_p2;
wire   [23:0] trunc_ln74_fu_320_p1;
wire   [3:0] empty_fu_324_p1;
wire   [0:0] icmp_ln75_fu_355_p2;
wire   [30:0] add_ln74_1_fu_369_p2;
wire   [23:0] trunc_ln74_1_fu_375_p1;
wire   [0:0] icmp_ln76_fu_401_p2;
wire   [0:0] xor_ln74_fu_395_p2;
wire   [4:0] select_ln74_fu_361_p3;
wire   [0:0] and_ln74_fu_407_p2;
wire   [4:0] add_ln75_fu_421_p2;
wire   [23:0] select_ln74_1_fu_379_p3;
wire   [3:0] empty_74_fu_433_p1;
wire   [28:0] tmp_mid_fu_387_p3;
wire   [28:0] tmp_fu_328_p4;
wire   [28:0] tmp_mid1_fu_437_p4;
wire   [28:0] select_ln74_3_fu_447_p3;
wire   [28:0] select_ln75_fu_455_p3;
wire   [34:0] sext_ln85_1_mid2_v_v_v_v_v_fu_463_p3;
wire   [63:0] zext_ln75_fu_471_p1;
wire   [63:0] add_ln75_1_fu_475_p2;
wire   [0:0] empty_76_fu_498_p1;
wire   [36:0] tmp_17_fu_502_p3;
wire   [0:0] or_ln75_fu_427_p2;
wire   [1:0] add_ln76_1_fu_522_p2;
wire   [6:0] add_ln75_2_fu_536_p2;
wire   [0:0] empty_78_fu_550_p1;
wire   [36:0] tmp_18_fu_554_p3;
wire   [13:0] trunc_ln902_fu_614_p1;
wire   [17:0] ret_V_fu_596_p4;
wire   [0:0] icmp_ln902_fu_618_p2;
wire   [17:0] ret_V_1_fu_624_p2;
wire   [0:0] p_Result_s_fu_606_p3;
wire   [17:0] select_ln901_fu_630_p3;
wire   [13:0] p_Result_6_fu_664_p4;
wire   [17:0] ret_V_3_fu_646_p4;
wire   [0:0] icmp_ln902_1_fu_674_p2;
wire   [17:0] ret_V_4_fu_680_p2;
wire   [0:0] p_Result_1_fu_656_p3;
wire   [17:0] select_ln901_1_fu_686_p3;
wire   [13:0] p_Result_s_75_fu_720_p4;
wire   [17:0] ret_V_6_fu_702_p4;
wire   [0:0] icmp_ln902_2_fu_730_p2;
wire   [17:0] ret_V_7_fu_736_p2;
wire   [0:0] p_Result_2_fu_712_p3;
wire   [17:0] select_ln901_2_fu_742_p3;
wire   [13:0] p_Result_5_fu_776_p4;
wire   [17:0] ret_V_9_fu_758_p4;
wire   [0:0] icmp_ln902_3_fu_786_p2;
wire   [17:0] ret_V_10_fu_792_p2;
wire   [0:0] p_Result_3_fu_768_p3;
wire   [17:0] select_ln901_3_fu_798_p3;
wire   [13:0] p_Result_8_fu_832_p4;
wire   [17:0] ret_V_12_fu_814_p4;
wire   [0:0] icmp_ln902_4_fu_842_p2;
wire   [17:0] ret_V_13_fu_848_p2;
wire   [0:0] p_Result_4_fu_824_p3;
wire   [17:0] select_ln901_4_fu_854_p3;
wire   [13:0] p_Result_9_fu_888_p4;
wire   [17:0] ret_V_15_fu_870_p4;
wire   [0:0] icmp_ln902_5_fu_898_p2;
wire   [17:0] ret_V_16_fu_904_p2;
wire   [0:0] p_Result_7_fu_880_p3;
wire   [17:0] select_ln901_5_fu_910_p3;
wire   [13:0] p_Result_11_fu_944_p4;
wire   [17:0] ret_V_18_fu_926_p4;
wire   [0:0] icmp_ln902_6_fu_954_p2;
wire   [17:0] ret_V_19_fu_960_p2;
wire   [0:0] p_Result_10_fu_936_p3;
wire   [17:0] select_ln901_6_fu_966_p3;
wire   [13:0] p_Result_13_fu_1000_p4;
wire   [17:0] ret_V_21_fu_982_p4;
wire   [0:0] icmp_ln902_7_fu_1010_p2;
wire   [17:0] ret_V_22_fu_1016_p2;
wire   [0:0] p_Result_12_fu_992_p3;
wire   [17:0] select_ln901_7_fu_1022_p3;
wire   [13:0] p_Result_15_fu_1056_p4;
wire   [17:0] ret_V_24_fu_1038_p4;
wire   [0:0] icmp_ln902_8_fu_1066_p2;
wire   [17:0] ret_V_25_fu_1072_p2;
wire   [0:0] p_Result_14_fu_1048_p3;
wire   [17:0] select_ln901_8_fu_1078_p3;
wire   [13:0] p_Result_17_fu_1112_p4;
wire   [17:0] ret_V_27_fu_1094_p4;
wire   [0:0] icmp_ln902_9_fu_1122_p2;
wire   [17:0] ret_V_28_fu_1128_p2;
wire   [0:0] p_Result_16_fu_1104_p3;
wire   [17:0] select_ln901_9_fu_1134_p3;
wire   [13:0] p_Result_19_fu_1168_p4;
wire   [17:0] ret_V_30_fu_1150_p4;
wire   [0:0] icmp_ln902_10_fu_1178_p2;
wire   [17:0] ret_V_31_fu_1184_p2;
wire   [0:0] p_Result_18_fu_1160_p3;
wire   [17:0] select_ln901_10_fu_1190_p3;
wire   [13:0] p_Result_21_fu_1224_p4;
wire   [17:0] ret_V_33_fu_1206_p4;
wire   [0:0] icmp_ln902_11_fu_1234_p2;
wire   [17:0] ret_V_34_fu_1240_p2;
wire   [0:0] p_Result_20_fu_1216_p3;
wire   [17:0] select_ln901_11_fu_1246_p3;
wire   [13:0] p_Result_23_fu_1280_p4;
wire   [17:0] ret_V_36_fu_1262_p4;
wire   [0:0] icmp_ln902_12_fu_1290_p2;
wire   [17:0] ret_V_37_fu_1296_p2;
wire   [0:0] p_Result_22_fu_1272_p3;
wire   [17:0] select_ln901_12_fu_1302_p3;
wire   [13:0] p_Result_25_fu_1336_p4;
wire   [17:0] ret_V_39_fu_1318_p4;
wire   [0:0] icmp_ln902_13_fu_1346_p2;
wire   [17:0] ret_V_40_fu_1352_p2;
wire   [0:0] p_Result_24_fu_1328_p3;
wire   [17:0] select_ln901_13_fu_1358_p3;
wire   [13:0] p_Result_27_fu_1392_p4;
wire   [17:0] ret_V_42_fu_1374_p4;
wire   [0:0] icmp_ln902_14_fu_1402_p2;
wire   [17:0] ret_V_43_fu_1408_p2;
wire   [0:0] p_Result_26_fu_1384_p3;
wire   [17:0] select_ln901_14_fu_1414_p3;
wire   [13:0] p_Result_29_fu_1448_p4;
wire   [17:0] ret_V_45_fu_1430_p4;
wire   [0:0] icmp_ln902_15_fu_1458_p2;
wire   [17:0] ret_V_46_fu_1464_p2;
wire   [0:0] p_Result_28_fu_1440_p3;
wire   [17:0] select_ln901_15_fu_1470_p3;
wire  signed [31:0] sext_ln225_14_fu_1535_p1;
wire  signed [31:0] sext_ln225_13_fu_1532_p1;
wire  signed [31:0] sext_ln225_12_fu_1529_p1;
wire  signed [31:0] sext_ln225_11_fu_1526_p1;
wire  signed [31:0] sext_ln225_10_fu_1523_p1;
wire  signed [31:0] sext_ln225_9_fu_1520_p1;
wire  signed [31:0] sext_ln225_8_fu_1517_p1;
wire  signed [31:0] sext_ln225_7_fu_1514_p1;
wire  signed [31:0] sext_ln225_6_fu_1511_p1;
wire  signed [31:0] sext_ln225_5_fu_1508_p1;
wire  signed [31:0] sext_ln225_4_fu_1505_p1;
wire  signed [31:0] sext_ln225_3_fu_1502_p1;
wire  signed [31:0] sext_ln225_2_fu_1499_p1;
wire  signed [31:0] sext_ln225_1_fu_1496_p1;
wire  signed [31:0] sext_ln225_fu_1493_p1;
wire   [497:0] singleSuperSample_V_fu_1538_p17;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_ext_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_done_reg = 1'b0;
end

fft2DKernel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter70_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            c_fu_232 <= 2'd0;
        end else if (((icmp_ln74_fu_338_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            c_fu_232 <= select_ln76_fu_528_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten30_fu_248 <= 37'd0;
        end else if (((icmp_ln74_fu_338_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten30_fu_248 <= add_ln74_fu_343_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_240 <= 7'd0;
        end else if (((icmp_ln74_fu_338_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten_fu_240 <= select_ln75_2_fu_542_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            n_fu_244 <= 31'd0;
        end else if (((icmp_ln74_fu_338_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            n_fu_244 <= select_ln74_2_fu_413_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            r_fu_236 <= 5'd0;
        end else if (((icmp_ln74_fu_338_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            r_fu_236 <= select_ln75_1_fu_490_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_79_reg_1638_pp0_iter10_reg <= empty_79_reg_1638_pp0_iter9_reg;
        empty_79_reg_1638_pp0_iter11_reg <= empty_79_reg_1638_pp0_iter10_reg;
        empty_79_reg_1638_pp0_iter12_reg <= empty_79_reg_1638_pp0_iter11_reg;
        empty_79_reg_1638_pp0_iter13_reg <= empty_79_reg_1638_pp0_iter12_reg;
        empty_79_reg_1638_pp0_iter14_reg <= empty_79_reg_1638_pp0_iter13_reg;
        empty_79_reg_1638_pp0_iter15_reg <= empty_79_reg_1638_pp0_iter14_reg;
        empty_79_reg_1638_pp0_iter16_reg <= empty_79_reg_1638_pp0_iter15_reg;
        empty_79_reg_1638_pp0_iter17_reg <= empty_79_reg_1638_pp0_iter16_reg;
        empty_79_reg_1638_pp0_iter18_reg <= empty_79_reg_1638_pp0_iter17_reg;
        empty_79_reg_1638_pp0_iter19_reg <= empty_79_reg_1638_pp0_iter18_reg;
        empty_79_reg_1638_pp0_iter20_reg <= empty_79_reg_1638_pp0_iter19_reg;
        empty_79_reg_1638_pp0_iter21_reg <= empty_79_reg_1638_pp0_iter20_reg;
        empty_79_reg_1638_pp0_iter22_reg <= empty_79_reg_1638_pp0_iter21_reg;
        empty_79_reg_1638_pp0_iter23_reg <= empty_79_reg_1638_pp0_iter22_reg;
        empty_79_reg_1638_pp0_iter24_reg <= empty_79_reg_1638_pp0_iter23_reg;
        empty_79_reg_1638_pp0_iter25_reg <= empty_79_reg_1638_pp0_iter24_reg;
        empty_79_reg_1638_pp0_iter26_reg <= empty_79_reg_1638_pp0_iter25_reg;
        empty_79_reg_1638_pp0_iter27_reg <= empty_79_reg_1638_pp0_iter26_reg;
        empty_79_reg_1638_pp0_iter28_reg <= empty_79_reg_1638_pp0_iter27_reg;
        empty_79_reg_1638_pp0_iter29_reg <= empty_79_reg_1638_pp0_iter28_reg;
        empty_79_reg_1638_pp0_iter2_reg <= empty_79_reg_1638;
        empty_79_reg_1638_pp0_iter30_reg <= empty_79_reg_1638_pp0_iter29_reg;
        empty_79_reg_1638_pp0_iter31_reg <= empty_79_reg_1638_pp0_iter30_reg;
        empty_79_reg_1638_pp0_iter32_reg <= empty_79_reg_1638_pp0_iter31_reg;
        empty_79_reg_1638_pp0_iter33_reg <= empty_79_reg_1638_pp0_iter32_reg;
        empty_79_reg_1638_pp0_iter34_reg <= empty_79_reg_1638_pp0_iter33_reg;
        empty_79_reg_1638_pp0_iter35_reg <= empty_79_reg_1638_pp0_iter34_reg;
        empty_79_reg_1638_pp0_iter36_reg <= empty_79_reg_1638_pp0_iter35_reg;
        empty_79_reg_1638_pp0_iter37_reg <= empty_79_reg_1638_pp0_iter36_reg;
        empty_79_reg_1638_pp0_iter38_reg <= empty_79_reg_1638_pp0_iter37_reg;
        empty_79_reg_1638_pp0_iter39_reg <= empty_79_reg_1638_pp0_iter38_reg;
        empty_79_reg_1638_pp0_iter3_reg <= empty_79_reg_1638_pp0_iter2_reg;
        empty_79_reg_1638_pp0_iter40_reg <= empty_79_reg_1638_pp0_iter39_reg;
        empty_79_reg_1638_pp0_iter41_reg <= empty_79_reg_1638_pp0_iter40_reg;
        empty_79_reg_1638_pp0_iter42_reg <= empty_79_reg_1638_pp0_iter41_reg;
        empty_79_reg_1638_pp0_iter43_reg <= empty_79_reg_1638_pp0_iter42_reg;
        empty_79_reg_1638_pp0_iter44_reg <= empty_79_reg_1638_pp0_iter43_reg;
        empty_79_reg_1638_pp0_iter45_reg <= empty_79_reg_1638_pp0_iter44_reg;
        empty_79_reg_1638_pp0_iter46_reg <= empty_79_reg_1638_pp0_iter45_reg;
        empty_79_reg_1638_pp0_iter47_reg <= empty_79_reg_1638_pp0_iter46_reg;
        empty_79_reg_1638_pp0_iter48_reg <= empty_79_reg_1638_pp0_iter47_reg;
        empty_79_reg_1638_pp0_iter49_reg <= empty_79_reg_1638_pp0_iter48_reg;
        empty_79_reg_1638_pp0_iter4_reg <= empty_79_reg_1638_pp0_iter3_reg;
        empty_79_reg_1638_pp0_iter50_reg <= empty_79_reg_1638_pp0_iter49_reg;
        empty_79_reg_1638_pp0_iter51_reg <= empty_79_reg_1638_pp0_iter50_reg;
        empty_79_reg_1638_pp0_iter52_reg <= empty_79_reg_1638_pp0_iter51_reg;
        empty_79_reg_1638_pp0_iter53_reg <= empty_79_reg_1638_pp0_iter52_reg;
        empty_79_reg_1638_pp0_iter54_reg <= empty_79_reg_1638_pp0_iter53_reg;
        empty_79_reg_1638_pp0_iter55_reg <= empty_79_reg_1638_pp0_iter54_reg;
        empty_79_reg_1638_pp0_iter56_reg <= empty_79_reg_1638_pp0_iter55_reg;
        empty_79_reg_1638_pp0_iter57_reg <= empty_79_reg_1638_pp0_iter56_reg;
        empty_79_reg_1638_pp0_iter58_reg <= empty_79_reg_1638_pp0_iter57_reg;
        empty_79_reg_1638_pp0_iter59_reg <= empty_79_reg_1638_pp0_iter58_reg;
        empty_79_reg_1638_pp0_iter5_reg <= empty_79_reg_1638_pp0_iter4_reg;
        empty_79_reg_1638_pp0_iter60_reg <= empty_79_reg_1638_pp0_iter59_reg;
        empty_79_reg_1638_pp0_iter61_reg <= empty_79_reg_1638_pp0_iter60_reg;
        empty_79_reg_1638_pp0_iter62_reg <= empty_79_reg_1638_pp0_iter61_reg;
        empty_79_reg_1638_pp0_iter63_reg <= empty_79_reg_1638_pp0_iter62_reg;
        empty_79_reg_1638_pp0_iter64_reg <= empty_79_reg_1638_pp0_iter63_reg;
        empty_79_reg_1638_pp0_iter65_reg <= empty_79_reg_1638_pp0_iter64_reg;
        empty_79_reg_1638_pp0_iter66_reg <= empty_79_reg_1638_pp0_iter65_reg;
        empty_79_reg_1638_pp0_iter67_reg <= empty_79_reg_1638_pp0_iter66_reg;
        empty_79_reg_1638_pp0_iter68_reg <= empty_79_reg_1638_pp0_iter67_reg;
        empty_79_reg_1638_pp0_iter69_reg <= empty_79_reg_1638_pp0_iter68_reg;
        empty_79_reg_1638_pp0_iter6_reg <= empty_79_reg_1638_pp0_iter5_reg;
        empty_79_reg_1638_pp0_iter70_reg <= empty_79_reg_1638_pp0_iter69_reg;
        empty_79_reg_1638_pp0_iter7_reg <= empty_79_reg_1638_pp0_iter6_reg;
        empty_79_reg_1638_pp0_iter8_reg <= empty_79_reg_1638_pp0_iter7_reg;
        empty_79_reg_1638_pp0_iter9_reg <= empty_79_reg_1638_pp0_iter8_reg;
        ret_V_11_reg_1657 <= ret_V_11_fu_806_p3;
        ret_V_14_reg_1662 <= ret_V_14_fu_862_p3;
        ret_V_17_reg_1667 <= ret_V_17_fu_918_p3;
        ret_V_20_reg_1672 <= ret_V_20_fu_974_p3;
        ret_V_23_reg_1677 <= ret_V_23_fu_1030_p3;
        ret_V_26_reg_1682 <= ret_V_26_fu_1086_p3;
        ret_V_29_reg_1687 <= ret_V_29_fu_1142_p3;
        ret_V_2_reg_1642 <= ret_V_2_fu_638_p3;
        ret_V_32_reg_1692 <= ret_V_32_fu_1198_p3;
        ret_V_35_reg_1697 <= ret_V_35_fu_1254_p3;
        ret_V_38_reg_1702 <= ret_V_38_fu_1310_p3;
        ret_V_41_reg_1707 <= ret_V_41_fu_1366_p3;
        ret_V_44_reg_1712 <= ret_V_44_fu_1422_p3;
        ret_V_47_reg_1717 <= ret_V_47_fu_1478_p3;
        ret_V_5_reg_1647 <= ret_V_5_fu_694_p3;
        ret_V_8_reg_1652 <= ret_V_8_fu_750_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln74_fu_338_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_77_reg_1634 <= empty_77_fu_510_p2;
        empty_79_reg_1638 <= empty_79_fu_562_p2;
        sext_ln85_1_mid2_v_reg_1629 <= {{add_ln75_1_fu_475_p2[63:6]}};
    end
end

always @ (*) begin
    if (((icmp_ln74_fu_338_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter70_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fftOutStrm_blk_n = fftOutStrm_empty_n;
    end else begin
        fftOutStrm_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        fftOutStrm_read = 1'b1;
    end else begin
        fftOutStrm_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (empty_77_reg_1634 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        gmem_blk_n_AW = m_axi_gmem_AWREADY;
    end else begin
        gmem_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (ap_enable_reg_pp0_iter71 == 1'b1))) begin
        gmem_blk_n_B = m_axi_gmem_BVALID;
    end else begin
        gmem_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        gmem_blk_n_W = m_axi_gmem_WREADY;
    end else begin
        gmem_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_77_reg_1634 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        m_axi_gmem_AWVALID = 1'b1;
    end else begin
        m_axi_gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (ap_enable_reg_pp0_iter71 == 1'b1))) begin
        m_axi_gmem_BREADY = 1'b1;
    end else begin
        m_axi_gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        m_axi_gmem_WVALID = 1'b1;
    end else begin
        m_axi_gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln74_1_fu_369_p2 = (n_fu_244 + 31'd1);

assign add_ln74_fu_343_p2 = (indvar_flatten30_fu_248 + 37'd1);

assign add_ln75_1_fu_475_p2 = (zext_ln75_fu_471_p1 + p_read);

assign add_ln75_2_fu_536_p2 = (indvar_flatten_fu_240 + 7'd1);

assign add_ln75_fu_421_p2 = (select_ln74_fu_361_p3 + 5'd1);

assign add_ln76_1_fu_522_p2 = (c_fu_232 + 2'd1);

assign and_ln74_fu_407_p2 = (xor_ln74_fu_395_p2 & icmp_ln76_fu_401_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (fftOutStrm_empty_n == 1'b0)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (m_axi_gmem_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((fftOutStrm_empty_n == 1'b0) | (1'b1 == ap_block_state3_io))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b1)) | ((ap_enable_reg_pp0_iter3 == 1'b1) & (m_axi_gmem_WREADY == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & ((fftOutStrm_empty_n == 1'b0) | (1'b1 == ap_block_state3_io))));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((empty_77_reg_1634 == 1'd1) & (m_axi_gmem_AWREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (fftOutStrm_empty_n == 1'b0);
end

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state72_pp0_stage0_iter71 = ((empty_79_reg_1638_pp0_iter70_reg == 1'd1) & (m_axi_gmem_BVALID == 1'b0));
end

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_ext_blocking_cur_n = (gmem_blk_n_W & gmem_blk_n_B & gmem_blk_n_AW);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_cur_n = fftOutStrm_blk_n;

assign ap_int_blocking_n = (ap_int_blocking_cur_n & 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign empty_74_fu_433_p1 = add_ln75_fu_421_p2[3:0];

assign empty_76_fu_498_p1 = indvar_flatten30_fu_248[0:0];

assign empty_77_fu_510_p2 = ((tmp_17_fu_502_p3 == 37'd0) ? 1'b1 : 1'b0);

assign empty_78_fu_550_p1 = add_ln74_fu_343_p2[0:0];

assign empty_79_fu_562_p2 = ((tmp_18_fu_554_p3 == 37'd0) ? 1'b1 : 1'b0);

assign empty_fu_324_p1 = r_fu_236[3:0];

assign icmp_ln74_fu_338_p2 = ((indvar_flatten30_fu_248 == bound5) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_355_p2 = ((indvar_flatten_fu_240 == 7'd32) ? 1'b1 : 1'b0);

assign icmp_ln76_fu_401_p2 = ((c_fu_232 == 2'd2) ? 1'b1 : 1'b0);

assign icmp_ln902_10_fu_1178_p2 = ((p_Result_19_fu_1168_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_11_fu_1234_p2 = ((p_Result_21_fu_1224_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_12_fu_1290_p2 = ((p_Result_23_fu_1280_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_13_fu_1346_p2 = ((p_Result_25_fu_1336_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_14_fu_1402_p2 = ((p_Result_27_fu_1392_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_15_fu_1458_p2 = ((p_Result_29_fu_1448_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_1_fu_674_p2 = ((p_Result_6_fu_664_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_2_fu_730_p2 = ((p_Result_s_75_fu_720_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_3_fu_786_p2 = ((p_Result_5_fu_776_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_4_fu_842_p2 = ((p_Result_8_fu_832_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_5_fu_898_p2 = ((p_Result_9_fu_888_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_6_fu_954_p2 = ((p_Result_11_fu_944_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_7_fu_1010_p2 = ((p_Result_13_fu_1000_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_8_fu_1066_p2 = ((p_Result_15_fu_1056_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_9_fu_1122_p2 = ((p_Result_17_fu_1112_p4 == 14'd0) ? 1'b1 : 1'b0);

assign icmp_ln902_fu_618_p2 = ((trunc_ln902_fu_614_p1 == 14'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_ARADDR = 64'd0;

assign m_axi_gmem_ARBURST = 2'd0;

assign m_axi_gmem_ARCACHE = 4'd0;

assign m_axi_gmem_ARID = 1'd0;

assign m_axi_gmem_ARLEN = 32'd0;

assign m_axi_gmem_ARLOCK = 2'd0;

assign m_axi_gmem_ARPROT = 3'd0;

assign m_axi_gmem_ARQOS = 4'd0;

assign m_axi_gmem_ARREGION = 4'd0;

assign m_axi_gmem_ARSIZE = 3'd0;

assign m_axi_gmem_ARUSER = 1'd0;

assign m_axi_gmem_ARVALID = 1'b0;

assign m_axi_gmem_AWADDR = sext_ln75_fu_593_p1;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd2;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_RREADY = 1'b0;

assign m_axi_gmem_WDATA = $signed(singleSuperSample_V_fu_1538_p17);

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd18446744073709551615;

assign m_axi_gmem_WUSER = 1'd0;

assign or_ln75_fu_427_p2 = (icmp_ln75_fu_355_p2 | and_ln74_fu_407_p2);

assign p_Result_10_fu_936_p3 = fftOutStrm_dout[32'd223];

assign p_Result_11_fu_944_p4 = {{fftOutStrm_dout[205:192]}};

assign p_Result_12_fu_992_p3 = fftOutStrm_dout[32'd255];

assign p_Result_13_fu_1000_p4 = {{fftOutStrm_dout[237:224]}};

assign p_Result_14_fu_1048_p3 = fftOutStrm_dout[32'd287];

assign p_Result_15_fu_1056_p4 = {{fftOutStrm_dout[269:256]}};

assign p_Result_16_fu_1104_p3 = fftOutStrm_dout[32'd319];

assign p_Result_17_fu_1112_p4 = {{fftOutStrm_dout[301:288]}};

assign p_Result_18_fu_1160_p3 = fftOutStrm_dout[32'd351];

assign p_Result_19_fu_1168_p4 = {{fftOutStrm_dout[333:320]}};

assign p_Result_1_fu_656_p3 = fftOutStrm_dout[32'd63];

assign p_Result_20_fu_1216_p3 = fftOutStrm_dout[32'd383];

assign p_Result_21_fu_1224_p4 = {{fftOutStrm_dout[365:352]}};

assign p_Result_22_fu_1272_p3 = fftOutStrm_dout[32'd415];

assign p_Result_23_fu_1280_p4 = {{fftOutStrm_dout[397:384]}};

assign p_Result_24_fu_1328_p3 = fftOutStrm_dout[32'd447];

assign p_Result_25_fu_1336_p4 = {{fftOutStrm_dout[429:416]}};

assign p_Result_26_fu_1384_p3 = fftOutStrm_dout[32'd479];

assign p_Result_27_fu_1392_p4 = {{fftOutStrm_dout[461:448]}};

assign p_Result_28_fu_1440_p3 = fftOutStrm_dout[32'd511];

assign p_Result_29_fu_1448_p4 = {{fftOutStrm_dout[493:480]}};

assign p_Result_2_fu_712_p3 = fftOutStrm_dout[32'd95];

assign p_Result_3_fu_768_p3 = fftOutStrm_dout[32'd127];

assign p_Result_4_fu_824_p3 = fftOutStrm_dout[32'd159];

assign p_Result_5_fu_776_p4 = {{fftOutStrm_dout[109:96]}};

assign p_Result_6_fu_664_p4 = {{fftOutStrm_dout[45:32]}};

assign p_Result_7_fu_880_p3 = fftOutStrm_dout[32'd191];

assign p_Result_8_fu_832_p4 = {{fftOutStrm_dout[141:128]}};

assign p_Result_9_fu_888_p4 = {{fftOutStrm_dout[173:160]}};

assign p_Result_s_75_fu_720_p4 = {{fftOutStrm_dout[77:64]}};

assign p_Result_s_fu_606_p3 = fftOutStrm_dout[32'd31];

assign ret_V_10_fu_792_p2 = (ret_V_9_fu_758_p4 + 18'd1);

assign ret_V_11_fu_806_p3 = ((p_Result_3_fu_768_p3[0:0] == 1'b1) ? select_ln901_3_fu_798_p3 : ret_V_9_fu_758_p4);

assign ret_V_12_fu_814_p4 = {{fftOutStrm_dout[159:142]}};

assign ret_V_13_fu_848_p2 = (ret_V_12_fu_814_p4 + 18'd1);

assign ret_V_14_fu_862_p3 = ((p_Result_4_fu_824_p3[0:0] == 1'b1) ? select_ln901_4_fu_854_p3 : ret_V_12_fu_814_p4);

assign ret_V_15_fu_870_p4 = {{fftOutStrm_dout[191:174]}};

assign ret_V_16_fu_904_p2 = (ret_V_15_fu_870_p4 + 18'd1);

assign ret_V_17_fu_918_p3 = ((p_Result_7_fu_880_p3[0:0] == 1'b1) ? select_ln901_5_fu_910_p3 : ret_V_15_fu_870_p4);

assign ret_V_18_fu_926_p4 = {{fftOutStrm_dout[223:206]}};

assign ret_V_19_fu_960_p2 = (ret_V_18_fu_926_p4 + 18'd1);

assign ret_V_1_fu_624_p2 = (ret_V_fu_596_p4 + 18'd1);

assign ret_V_20_fu_974_p3 = ((p_Result_10_fu_936_p3[0:0] == 1'b1) ? select_ln901_6_fu_966_p3 : ret_V_18_fu_926_p4);

assign ret_V_21_fu_982_p4 = {{fftOutStrm_dout[255:238]}};

assign ret_V_22_fu_1016_p2 = (ret_V_21_fu_982_p4 + 18'd1);

assign ret_V_23_fu_1030_p3 = ((p_Result_12_fu_992_p3[0:0] == 1'b1) ? select_ln901_7_fu_1022_p3 : ret_V_21_fu_982_p4);

assign ret_V_24_fu_1038_p4 = {{fftOutStrm_dout[287:270]}};

assign ret_V_25_fu_1072_p2 = (ret_V_24_fu_1038_p4 + 18'd1);

assign ret_V_26_fu_1086_p3 = ((p_Result_14_fu_1048_p3[0:0] == 1'b1) ? select_ln901_8_fu_1078_p3 : ret_V_24_fu_1038_p4);

assign ret_V_27_fu_1094_p4 = {{fftOutStrm_dout[319:302]}};

assign ret_V_28_fu_1128_p2 = (ret_V_27_fu_1094_p4 + 18'd1);

assign ret_V_29_fu_1142_p3 = ((p_Result_16_fu_1104_p3[0:0] == 1'b1) ? select_ln901_9_fu_1134_p3 : ret_V_27_fu_1094_p4);

assign ret_V_2_fu_638_p3 = ((p_Result_s_fu_606_p3[0:0] == 1'b1) ? select_ln901_fu_630_p3 : ret_V_fu_596_p4);

assign ret_V_30_fu_1150_p4 = {{fftOutStrm_dout[351:334]}};

assign ret_V_31_fu_1184_p2 = (ret_V_30_fu_1150_p4 + 18'd1);

assign ret_V_32_fu_1198_p3 = ((p_Result_18_fu_1160_p3[0:0] == 1'b1) ? select_ln901_10_fu_1190_p3 : ret_V_30_fu_1150_p4);

assign ret_V_33_fu_1206_p4 = {{fftOutStrm_dout[383:366]}};

assign ret_V_34_fu_1240_p2 = (ret_V_33_fu_1206_p4 + 18'd1);

assign ret_V_35_fu_1254_p3 = ((p_Result_20_fu_1216_p3[0:0] == 1'b1) ? select_ln901_11_fu_1246_p3 : ret_V_33_fu_1206_p4);

assign ret_V_36_fu_1262_p4 = {{fftOutStrm_dout[415:398]}};

assign ret_V_37_fu_1296_p2 = (ret_V_36_fu_1262_p4 + 18'd1);

assign ret_V_38_fu_1310_p3 = ((p_Result_22_fu_1272_p3[0:0] == 1'b1) ? select_ln901_12_fu_1302_p3 : ret_V_36_fu_1262_p4);

assign ret_V_39_fu_1318_p4 = {{fftOutStrm_dout[447:430]}};

assign ret_V_3_fu_646_p4 = {{fftOutStrm_dout[63:46]}};

assign ret_V_40_fu_1352_p2 = (ret_V_39_fu_1318_p4 + 18'd1);

assign ret_V_41_fu_1366_p3 = ((p_Result_24_fu_1328_p3[0:0] == 1'b1) ? select_ln901_13_fu_1358_p3 : ret_V_39_fu_1318_p4);

assign ret_V_42_fu_1374_p4 = {{fftOutStrm_dout[479:462]}};

assign ret_V_43_fu_1408_p2 = (ret_V_42_fu_1374_p4 + 18'd1);

assign ret_V_44_fu_1422_p3 = ((p_Result_26_fu_1384_p3[0:0] == 1'b1) ? select_ln901_14_fu_1414_p3 : ret_V_42_fu_1374_p4);

assign ret_V_45_fu_1430_p4 = {{fftOutStrm_dout[511:494]}};

assign ret_V_46_fu_1464_p2 = (ret_V_45_fu_1430_p4 + 18'd1);

assign ret_V_47_fu_1478_p3 = ((p_Result_28_fu_1440_p3[0:0] == 1'b1) ? select_ln901_15_fu_1470_p3 : ret_V_45_fu_1430_p4);

assign ret_V_4_fu_680_p2 = (ret_V_3_fu_646_p4 + 18'd1);

assign ret_V_5_fu_694_p3 = ((p_Result_1_fu_656_p3[0:0] == 1'b1) ? select_ln901_1_fu_686_p3 : ret_V_3_fu_646_p4);

assign ret_V_6_fu_702_p4 = {{fftOutStrm_dout[95:78]}};

assign ret_V_7_fu_736_p2 = (ret_V_6_fu_702_p4 + 18'd1);

assign ret_V_8_fu_750_p3 = ((p_Result_2_fu_712_p3[0:0] == 1'b1) ? select_ln901_2_fu_742_p3 : ret_V_6_fu_702_p4);

assign ret_V_9_fu_758_p4 = {{fftOutStrm_dout[127:110]}};

assign ret_V_fu_596_p4 = {{fftOutStrm_dout[31:14]}};

assign select_ln74_1_fu_379_p3 = ((icmp_ln75_fu_355_p2[0:0] == 1'b1) ? trunc_ln74_1_fu_375_p1 : trunc_ln74_fu_320_p1);

assign select_ln74_2_fu_413_p3 = ((icmp_ln75_fu_355_p2[0:0] == 1'b1) ? add_ln74_1_fu_369_p2 : n_fu_244);

assign select_ln74_3_fu_447_p3 = ((icmp_ln75_fu_355_p2[0:0] == 1'b1) ? tmp_mid_fu_387_p3 : tmp_fu_328_p4);

assign select_ln74_fu_361_p3 = ((icmp_ln75_fu_355_p2[0:0] == 1'b1) ? 5'd0 : r_fu_236);

assign select_ln75_1_fu_490_p3 = ((and_ln74_fu_407_p2[0:0] == 1'b1) ? add_ln75_fu_421_p2 : select_ln74_fu_361_p3);

assign select_ln75_2_fu_542_p3 = ((icmp_ln75_fu_355_p2[0:0] == 1'b1) ? 7'd1 : add_ln75_2_fu_536_p2);

assign select_ln75_fu_455_p3 = ((and_ln74_fu_407_p2[0:0] == 1'b1) ? tmp_mid1_fu_437_p4 : select_ln74_3_fu_447_p3);

assign select_ln76_fu_528_p3 = ((or_ln75_fu_427_p2[0:0] == 1'b1) ? 2'd1 : add_ln76_1_fu_522_p2);

assign select_ln901_10_fu_1190_p3 = ((icmp_ln902_10_fu_1178_p2[0:0] == 1'b1) ? ret_V_30_fu_1150_p4 : ret_V_31_fu_1184_p2);

assign select_ln901_11_fu_1246_p3 = ((icmp_ln902_11_fu_1234_p2[0:0] == 1'b1) ? ret_V_33_fu_1206_p4 : ret_V_34_fu_1240_p2);

assign select_ln901_12_fu_1302_p3 = ((icmp_ln902_12_fu_1290_p2[0:0] == 1'b1) ? ret_V_36_fu_1262_p4 : ret_V_37_fu_1296_p2);

assign select_ln901_13_fu_1358_p3 = ((icmp_ln902_13_fu_1346_p2[0:0] == 1'b1) ? ret_V_39_fu_1318_p4 : ret_V_40_fu_1352_p2);

assign select_ln901_14_fu_1414_p3 = ((icmp_ln902_14_fu_1402_p2[0:0] == 1'b1) ? ret_V_42_fu_1374_p4 : ret_V_43_fu_1408_p2);

assign select_ln901_15_fu_1470_p3 = ((icmp_ln902_15_fu_1458_p2[0:0] == 1'b1) ? ret_V_45_fu_1430_p4 : ret_V_46_fu_1464_p2);

assign select_ln901_1_fu_686_p3 = ((icmp_ln902_1_fu_674_p2[0:0] == 1'b1) ? ret_V_3_fu_646_p4 : ret_V_4_fu_680_p2);

assign select_ln901_2_fu_742_p3 = ((icmp_ln902_2_fu_730_p2[0:0] == 1'b1) ? ret_V_6_fu_702_p4 : ret_V_7_fu_736_p2);

assign select_ln901_3_fu_798_p3 = ((icmp_ln902_3_fu_786_p2[0:0] == 1'b1) ? ret_V_9_fu_758_p4 : ret_V_10_fu_792_p2);

assign select_ln901_4_fu_854_p3 = ((icmp_ln902_4_fu_842_p2[0:0] == 1'b1) ? ret_V_12_fu_814_p4 : ret_V_13_fu_848_p2);

assign select_ln901_5_fu_910_p3 = ((icmp_ln902_5_fu_898_p2[0:0] == 1'b1) ? ret_V_15_fu_870_p4 : ret_V_16_fu_904_p2);

assign select_ln901_6_fu_966_p3 = ((icmp_ln902_6_fu_954_p2[0:0] == 1'b1) ? ret_V_18_fu_926_p4 : ret_V_19_fu_960_p2);

assign select_ln901_7_fu_1022_p3 = ((icmp_ln902_7_fu_1010_p2[0:0] == 1'b1) ? ret_V_21_fu_982_p4 : ret_V_22_fu_1016_p2);

assign select_ln901_8_fu_1078_p3 = ((icmp_ln902_8_fu_1066_p2[0:0] == 1'b1) ? ret_V_24_fu_1038_p4 : ret_V_25_fu_1072_p2);

assign select_ln901_9_fu_1134_p3 = ((icmp_ln902_9_fu_1122_p2[0:0] == 1'b1) ? ret_V_27_fu_1094_p4 : ret_V_28_fu_1128_p2);

assign select_ln901_fu_630_p3 = ((icmp_ln902_fu_618_p2[0:0] == 1'b1) ? ret_V_fu_596_p4 : ret_V_1_fu_624_p2);

assign sext_ln225_10_fu_1523_p1 = $signed(ret_V_32_reg_1692);

assign sext_ln225_11_fu_1526_p1 = $signed(ret_V_35_reg_1697);

assign sext_ln225_12_fu_1529_p1 = $signed(ret_V_38_reg_1702);

assign sext_ln225_13_fu_1532_p1 = $signed(ret_V_41_reg_1707);

assign sext_ln225_14_fu_1535_p1 = $signed(ret_V_44_reg_1712);

assign sext_ln225_1_fu_1496_p1 = $signed(ret_V_5_reg_1647);

assign sext_ln225_2_fu_1499_p1 = $signed(ret_V_8_reg_1652);

assign sext_ln225_3_fu_1502_p1 = $signed(ret_V_11_reg_1657);

assign sext_ln225_4_fu_1505_p1 = $signed(ret_V_14_reg_1662);

assign sext_ln225_5_fu_1508_p1 = $signed(ret_V_17_reg_1667);

assign sext_ln225_6_fu_1511_p1 = $signed(ret_V_20_reg_1672);

assign sext_ln225_7_fu_1514_p1 = $signed(ret_V_23_reg_1677);

assign sext_ln225_8_fu_1517_p1 = $signed(ret_V_26_reg_1682);

assign sext_ln225_9_fu_1520_p1 = $signed(ret_V_29_reg_1687);

assign sext_ln225_fu_1493_p1 = $signed(ret_V_2_reg_1642);

assign sext_ln75_fu_593_p1 = $signed(sext_ln85_1_mid2_v_reg_1629);

assign sext_ln85_1_mid2_v_v_v_v_v_fu_463_p3 = {{select_ln75_fu_455_p3}, {6'd0}};

assign singleSuperSample_V_fu_1538_p17 = {{{{{{{{{{{{{{{{ret_V_47_reg_1717}, {sext_ln225_14_fu_1535_p1}}, {sext_ln225_13_fu_1532_p1}}, {sext_ln225_12_fu_1529_p1}}, {sext_ln225_11_fu_1526_p1}}, {sext_ln225_10_fu_1523_p1}}, {sext_ln225_9_fu_1520_p1}}, {sext_ln225_8_fu_1517_p1}}, {sext_ln225_7_fu_1514_p1}}, {sext_ln225_6_fu_1511_p1}}, {sext_ln225_5_fu_1508_p1}}, {sext_ln225_4_fu_1505_p1}}, {sext_ln225_3_fu_1502_p1}}, {sext_ln225_2_fu_1499_p1}}, {sext_ln225_1_fu_1496_p1}}, {sext_ln225_fu_1493_p1}};

assign tmp_17_fu_502_p3 = {{36'd0}, {empty_76_fu_498_p1}};

assign tmp_18_fu_554_p3 = {{36'd0}, {empty_78_fu_550_p1}};

assign tmp_fu_328_p4 = {{{trunc_ln74_fu_320_p1}, {empty_fu_324_p1}}, {1'd0}};

assign tmp_mid1_fu_437_p4 = {{{select_ln74_1_fu_379_p3}, {empty_74_fu_433_p1}}, {1'd0}};

assign tmp_mid_fu_387_p3 = {{trunc_ln74_1_fu_375_p1}, {5'd0}};

assign trunc_ln74_1_fu_375_p1 = add_ln74_1_fu_369_p2[23:0];

assign trunc_ln74_fu_320_p1 = n_fu_244[23:0];

assign trunc_ln902_fu_614_p1 = fftOutStrm_dout[13:0];

assign xor_ln74_fu_395_p2 = (icmp_ln75_fu_355_p2 ^ 1'd1);

assign zext_ln75_fu_471_p1 = sext_ln85_1_mid2_v_v_v_v_v_fu_463_p3;

endmodule //fft2DKernel_writeImages_512u_16u_16u_4096u_32u_8u_complex_ap_fixed_22_8_5_3_0_SuperSampleContainer_8_complex_ap_fixed_32_18_5_3_0_Pipeline_VITIS_LOOP_74_1_VITIS_LOOP_75_2_VITIS_LOOP_76_3
