-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
-- Version: 2021.1
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fft2DKernel_fftStageKernelLastStageS2S_16_4_0_0_0_1_complex_ap_fixed_27_13_5_3_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_25_11_5_3_0_complex_ap_fixed_27_13_5_3_0_77 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    fftOutData_local2_dout : IN STD_LOGIC_VECTOR (255 downto 0);
    fftOutData_local2_empty_n : IN STD_LOGIC;
    fftOutData_local2_read : OUT STD_LOGIC;
    fftOutData_local_din : OUT STD_LOGIC_VECTOR (255 downto 0);
    fftOutData_local_full_n : IN STD_LOGIC;
    fftOutData_local_write : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    ap_ext_blocking_n : OUT STD_LOGIC;
    ap_str_blocking_n : OUT STD_LOGIC;
    ap_int_blocking_n : OUT STD_LOGIC );
end;


architecture behav of fft2DKernel_fftStageKernelLastStageS2S_16_4_0_0_0_1_complex_ap_fixed_27_13_5_3_0_complex_ap_fixed_18_2_5_3_0_complex_ap_fixed_25_11_5_3_0_complex_ap_fixed_27_13_5_3_0_77 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001011000";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001111000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv32_98 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010011000";
    constant ap_const_lv32_A0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010100000";
    constant ap_const_lv32_B8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010111000";
    constant ap_const_lv32_C0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011000000";
    constant ap_const_lv32_D8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011011000";
    constant ap_const_lv32_E0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011100000";
    constant ap_const_lv32_F8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111000";
    constant ap_const_lv41_0 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

attribute shreg_extract : string;
    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal icmp_ln215_fu_401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal tmp_nbreadreq_fu_100_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal tmp_reg_812 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal fftOutData_local2_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal fftOutData_local_blk_n : STD_LOGIC;
    signal iter1_reg_136 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln717_fu_167_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln717_reg_816 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_s_reg_821 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_90_fu_181_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_90_reg_826 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_91_fu_191_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_91_reg_831 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_92_fu_209_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_92_reg_836 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_93_fu_219_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_93_reg_841 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_94_fu_229_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_94_reg_846 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_95_fu_239_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal tmp_95_reg_851 : STD_LOGIC_VECTOR (24 downto 0);
    signal p_val_V_88_reg_856 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_89_reg_862 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_90_reg_868 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_91_reg_874 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_92_reg_880 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_93_reg_886 : STD_LOGIC_VECTOR (25 downto 0);
    signal iter_fu_385_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal iter_reg_892 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln215_reg_897 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_iter1_phi_fu_140_p6 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_iter_1_phi_fu_153_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal iter_4_fu_160_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_iter_1_reg_150 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal r_V_112_fu_201_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal shl_ln_fu_255_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_fu_263_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal shl_ln1171_s_fu_279_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_107_fu_287_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal shl_ln1171_8_fu_303_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_108_fu_311_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_114_fu_327_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal ret_V_fu_335_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_113_fu_249_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal shl_ln1171_9_fu_361_p3 : STD_LOGIC_VECTOR (40 downto 0);
    signal r_V_110_fu_369_p2 : STD_LOGIC_VECTOR (40 downto 0);
    signal tmp_102_fu_391_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal p_val_V_82_fu_421_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_fu_407_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_83_fu_428_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_81_fu_414_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_86_fu_449_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_84_fu_435_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_87_fu_456_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal p_val_V_85_fu_442_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_124_fu_475_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_fu_463_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_fu_487_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_105_fu_491_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_125_fu_481_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_123_fu_469_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_106_fu_501_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_107_fu_505_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_130_fu_526_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_128_fu_515_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_108_fu_535_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_109_fu_539_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_131_fu_530_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_129_fu_521_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_110_fu_549_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_111_fu_553_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_136_fu_573_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_134_fu_563_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_112_fu_583_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_113_fu_587_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_137_fu_578_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_135_fu_568_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_114_fu_597_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_115_fu_601_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_142_fu_622_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_140_fu_611_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_116_fu_631_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_117_fu_635_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_143_fu_627_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_141_fu_616_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln712_118_fu_645_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln712_119_fu_649_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal add_ln712_126_fu_495_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_real_V_0_fu_659_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_127_fu_509_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_imag_V_0_fu_673_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_132_fu_543_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_real_V_1_fu_687_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_133_fu_557_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_imag_V_1_fu_701_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_138_fu_591_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_real_V_2_fu_715_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_139_fu_605_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_imag_V_2_fu_729_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_144_fu_639_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal bflyOutData_M_real_V_3_fu_743_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln712_145_fu_653_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal trunc_ln717_s_fu_757_p4 : STD_LOGIC_VECTOR (25 downto 0);
    signal sext_ln717_30_fu_753_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_29_fu_739_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_28_fu_725_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_27_fu_711_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_26_fu_697_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_25_fu_683_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal sext_ln717_fu_669_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal tmp_3_fu_767_p16 : STD_LOGIC_VECTOR (249 downto 0);
    signal sext_ln174_fu_801_p1 : STD_LOGIC_VECTOR (250 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_int_blocking_cur_n : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_89 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln215_reg_897 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= real_start;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((real_start = ap_const_logic_1) and (internal_ap_ready = ap_const_logic_0))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    iter1_reg_136_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln215_reg_897 = ap_const_lv1_1))) then 
                iter1_reg_136 <= iter_reg_892;
            elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln215_reg_897 = ap_const_lv1_0)) or (not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                iter1_reg_136 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln215_reg_897 <= icmp_ln215_fu_401_p2;
                tmp_reg_812 <= tmp_nbreadreq_fu_100_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                iter_reg_892 <= iter_fu_385_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_val_V_88_reg_856 <= r_V_fu_263_p2(40 downto 15);
                p_val_V_89_reg_862 <= r_V_107_fu_287_p2(40 downto 15);
                p_val_V_90_reg_868 <= r_V_108_fu_311_p2(40 downto 15);
                p_val_V_91_reg_874 <= ret_V_fu_335_p2(40 downto 15);
                p_val_V_92_reg_880 <= r_V_113_fu_249_p2(40 downto 15);
                p_val_V_93_reg_886 <= r_V_110_fu_369_p2(40 downto 15);
                tmp_90_reg_826 <= fftOutData_local2_dout(88 downto 64);
                tmp_91_reg_831 <= fftOutData_local2_dout(120 downto 96);
                tmp_92_reg_836 <= fftOutData_local2_dout(152 downto 128);
                tmp_93_reg_841 <= fftOutData_local2_dout(184 downto 160);
                tmp_94_reg_846 <= fftOutData_local2_dout(216 downto 192);
                tmp_95_reg_851 <= fftOutData_local2_dout(248 downto 224);
                tmp_s_reg_821 <= fftOutData_local2_dout(56 downto 32);
                trunc_ln717_reg_816 <= trunc_ln717_fu_167_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((ap_reset_idle_pp0 = ap_const_logic_0)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_reset_idle_pp0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    add_ln712_123_fu_469_p2 <= std_logic_vector(unsigned(p_val_V_83_fu_428_p3) + unsigned(p_val_V_81_fu_414_p3));
    add_ln712_124_fu_475_p2 <= std_logic_vector(unsigned(p_val_V_86_fu_449_p3) + unsigned(p_val_V_84_fu_435_p3));
    add_ln712_125_fu_481_p2 <= std_logic_vector(unsigned(p_val_V_87_fu_456_p3) + unsigned(p_val_V_85_fu_442_p3));
    add_ln712_126_fu_495_p2 <= std_logic_vector(signed(sext_ln712_fu_487_p1) + signed(sext_ln712_105_fu_491_p1));
    add_ln712_127_fu_509_p2 <= std_logic_vector(signed(sext_ln712_106_fu_501_p1) + signed(sext_ln712_107_fu_505_p1));
    add_ln712_128_fu_515_p2 <= std_logic_vector(unsigned(p_val_V_83_fu_428_p3) + unsigned(p_val_V_fu_407_p3));
    add_ln712_129_fu_521_p2 <= std_logic_vector(unsigned(p_val_V_88_reg_856) + unsigned(p_val_V_81_fu_414_p3));
    add_ln712_130_fu_526_p2 <= std_logic_vector(unsigned(p_val_V_91_reg_874) + unsigned(p_val_V_89_reg_862));
    add_ln712_131_fu_530_p2 <= std_logic_vector(unsigned(p_val_V_86_fu_449_p3) + unsigned(p_val_V_90_reg_868));
    add_ln712_132_fu_543_p2 <= std_logic_vector(signed(sext_ln712_108_fu_535_p1) + signed(sext_ln712_109_fu_539_p1));
    add_ln712_133_fu_557_p2 <= std_logic_vector(signed(sext_ln712_110_fu_549_p1) + signed(sext_ln712_111_fu_553_p1));
    add_ln712_134_fu_563_p2 <= std_logic_vector(unsigned(p_val_V_88_reg_856) + unsigned(p_val_V_fu_407_p3));
    add_ln712_135_fu_568_p2 <= std_logic_vector(unsigned(p_val_V_92_reg_880) + unsigned(p_val_V_81_fu_414_p3));
    add_ln712_136_fu_573_p2 <= std_logic_vector(unsigned(p_val_V_93_reg_886) + unsigned(p_val_V_84_fu_435_p3));
    add_ln712_137_fu_578_p2 <= std_logic_vector(unsigned(p_val_V_91_reg_874) + unsigned(p_val_V_85_fu_442_p3));
    add_ln712_138_fu_591_p2 <= std_logic_vector(signed(sext_ln712_112_fu_583_p1) + signed(sext_ln712_113_fu_587_p1));
    add_ln712_139_fu_605_p2 <= std_logic_vector(signed(sext_ln712_114_fu_597_p1) + signed(sext_ln712_115_fu_601_p1));
    add_ln712_140_fu_611_p2 <= std_logic_vector(unsigned(p_val_V_92_reg_880) + unsigned(p_val_V_fu_407_p3));
    add_ln712_141_fu_616_p2 <= std_logic_vector(unsigned(p_val_V_82_fu_421_p3) + unsigned(p_val_V_81_fu_414_p3));
    add_ln712_142_fu_622_p2 <= std_logic_vector(unsigned(p_val_V_87_fu_456_p3) + unsigned(p_val_V_89_reg_862));
    add_ln712_143_fu_627_p2 <= std_logic_vector(unsigned(p_val_V_93_reg_886) + unsigned(p_val_V_90_reg_868));
    add_ln712_144_fu_639_p2 <= std_logic_vector(signed(sext_ln712_116_fu_631_p1) + signed(sext_ln712_117_fu_635_p1));
    add_ln712_145_fu_653_p2 <= std_logic_vector(signed(sext_ln712_118_fu_645_p1) + signed(sext_ln712_119_fu_649_p1));
    add_ln712_fu_463_p2 <= std_logic_vector(unsigned(p_val_V_82_fu_421_p3) + unsigned(p_val_V_fu_407_p3));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);

    ap_ST_fsm_state1_blk_assign_proc : process(real_start, ap_done_reg)
    begin
        if (((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(real_start, ap_done_reg, fftOutData_local2_empty_n, tmp_nbreadreq_fu_100_p3, fftOutData_local_full_n, tmp_reg_812, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_812 = ap_const_lv1_1) and (fftOutData_local_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (fftOutData_local2_empty_n = ap_const_logic_0) and (real_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(real_start, ap_done_reg, fftOutData_local2_empty_n, tmp_nbreadreq_fu_100_p3, fftOutData_local_full_n, tmp_reg_812, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_812 = ap_const_lv1_1) and (fftOutData_local_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (fftOutData_local2_empty_n = ap_const_logic_0) and (real_start = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(real_start, ap_done_reg, fftOutData_local2_empty_n, tmp_nbreadreq_fu_100_p3, fftOutData_local_full_n, tmp_reg_812, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_done_reg = ap_const_logic_1) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_812 = ap_const_lv1_1) and (fftOutData_local_full_n = ap_const_logic_0)) or ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (fftOutData_local2_empty_n = ap_const_logic_0) and (real_start = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state2_pp0_stage0_iter0_assign_proc : process(fftOutData_local2_empty_n, tmp_nbreadreq_fu_100_p3)
    begin
                ap_block_state2_pp0_stage0_iter0 <= ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (fftOutData_local2_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter1_assign_proc : process(fftOutData_local_full_n, tmp_reg_812)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((tmp_reg_812 = ap_const_lv1_1) and (fftOutData_local_full_n = ap_const_logic_0));
    end process;


    ap_condition_89_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_89 <= ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, icmp_ln215_reg_897)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln215_reg_897 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= real_start;
    ap_ext_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_cur_n <= (fftOutData_local_blk_n and fftOutData_local2_blk_n);
    ap_int_blocking_n <= (ap_int_blocking_cur_n and ap_const_logic_1);

    ap_phi_mux_iter1_phi_fu_140_p6_assign_proc : process(iter1_reg_136, iter_reg_892, icmp_ln215_reg_897, ap_condition_89)
    begin
        if ((ap_const_boolean_1 = ap_condition_89)) then
            if ((icmp_ln215_reg_897 = ap_const_lv1_0)) then 
                ap_phi_mux_iter1_phi_fu_140_p6 <= ap_const_lv32_0;
            elsif ((icmp_ln215_reg_897 = ap_const_lv1_1)) then 
                ap_phi_mux_iter1_phi_fu_140_p6 <= iter_reg_892;
            else 
                ap_phi_mux_iter1_phi_fu_140_p6 <= iter1_reg_136;
            end if;
        else 
            ap_phi_mux_iter1_phi_fu_140_p6 <= iter1_reg_136;
        end if; 
    end process;


    ap_phi_mux_iter_1_phi_fu_153_p4_assign_proc : process(tmp_nbreadreq_fu_100_p3, ap_phi_mux_iter1_phi_fu_140_p6, iter_4_fu_160_p2, ap_phi_reg_pp0_iter0_iter_1_reg_150)
    begin
        if ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1)) then 
            ap_phi_mux_iter_1_phi_fu_153_p4 <= ap_phi_mux_iter1_phi_fu_140_p6;
        elsif ((tmp_nbreadreq_fu_100_p3 = ap_const_lv1_0)) then 
            ap_phi_mux_iter_1_phi_fu_153_p4 <= iter_4_fu_160_p2;
        else 
            ap_phi_mux_iter_1_phi_fu_153_p4 <= ap_phi_reg_pp0_iter0_iter_1_reg_150;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_iter_1_reg_150 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_reset_idle_pp0_assign_proc : process(real_start, ap_idle_pp0_0to0)
    begin
        if (((real_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    bflyOutData_M_imag_V_0_fu_673_p4 <= add_ln712_127_fu_509_p2(26 downto 1);
    bflyOutData_M_imag_V_1_fu_701_p4 <= add_ln712_133_fu_557_p2(26 downto 1);
    bflyOutData_M_imag_V_2_fu_729_p4 <= add_ln712_139_fu_605_p2(26 downto 1);
    bflyOutData_M_real_V_0_fu_659_p4 <= add_ln712_126_fu_495_p2(26 downto 1);
    bflyOutData_M_real_V_1_fu_687_p4 <= add_ln712_132_fu_543_p2(26 downto 1);
    bflyOutData_M_real_V_2_fu_715_p4 <= add_ln712_138_fu_591_p2(26 downto 1);
    bflyOutData_M_real_V_3_fu_743_p4 <= add_ln712_144_fu_639_p2(26 downto 1);

    fftOutData_local2_blk_n_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, fftOutData_local2_empty_n, tmp_nbreadreq_fu_100_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local2_blk_n <= fftOutData_local2_empty_n;
        else 
            fftOutData_local2_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    fftOutData_local2_read_assign_proc : process(real_start, ap_CS_fsm_pp0_stage0, tmp_nbreadreq_fu_100_p3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_nbreadreq_fu_100_p3 = ap_const_lv1_1) and (real_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local2_read <= ap_const_logic_1;
        else 
            fftOutData_local2_read <= ap_const_logic_0;
        end if; 
    end process;


    fftOutData_local_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, fftOutData_local_full_n, tmp_reg_812, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_812 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local_blk_n <= fftOutData_local_full_n;
        else 
            fftOutData_local_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    fftOutData_local_din <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln174_fu_801_p1),256));

    fftOutData_local_write_assign_proc : process(ap_CS_fsm_pp0_stage0, tmp_reg_812, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (tmp_reg_812 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            fftOutData_local_write <= ap_const_logic_1;
        else 
            fftOutData_local_write <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln215_fu_401_p2 <= "1" when (signed(tmp_102_fu_391_p4) < signed(ap_const_lv30_1)) else "0";

    internal_ap_ready_assign_proc : process(real_start, icmp_ln215_fu_401_p2, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (real_start = ap_const_logic_1) and (icmp_ln215_fu_401_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    iter_4_fu_160_p2 <= std_logic_vector(unsigned(ap_phi_mux_iter1_phi_fu_140_p6) + unsigned(ap_const_lv32_FFFFFFFF));
    iter_fu_385_p2 <= std_logic_vector(unsigned(ap_phi_mux_iter_1_phi_fu_153_p4) + unsigned(ap_const_lv32_1));
    p_val_V_81_fu_414_p3 <= (tmp_s_reg_821 & ap_const_lv1_0);
    p_val_V_82_fu_421_p3 <= (tmp_90_reg_826 & ap_const_lv1_0);
    p_val_V_83_fu_428_p3 <= (tmp_91_reg_831 & ap_const_lv1_0);
    p_val_V_84_fu_435_p3 <= (tmp_92_reg_836 & ap_const_lv1_0);
    p_val_V_85_fu_442_p3 <= (tmp_93_reg_841 & ap_const_lv1_0);
    p_val_V_86_fu_449_p3 <= (tmp_94_reg_846 & ap_const_lv1_0);
    p_val_V_87_fu_456_p3 <= (tmp_95_reg_851 & ap_const_lv1_0);
    p_val_V_fu_407_p3 <= (trunc_ln717_reg_816 & ap_const_lv1_0);
    r_V_107_fu_287_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(shl_ln1171_s_fu_279_p3));
    r_V_108_fu_311_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(shl_ln1171_8_fu_303_p3));
    r_V_110_fu_369_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(shl_ln1171_9_fu_361_p3));
    r_V_112_fu_201_p3 <= (tmp_91_fu_191_p4 & ap_const_lv16_0);
    r_V_113_fu_249_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(r_V_112_fu_201_p3));
    r_V_114_fu_327_p3 <= (tmp_95_fu_239_p4 & ap_const_lv16_0);
    r_V_fu_263_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(shl_ln_fu_255_p3));

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_full_n = ap_const_logic_0) and (start_once_reg = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    ret_V_fu_335_p2 <= std_logic_vector(unsigned(ap_const_lv41_0) - unsigned(r_V_114_fu_327_p3));
        sext_ln174_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_3_fu_767_p16),251));

        sext_ln712_105_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_fu_463_p2),27));

        sext_ln712_106_fu_501_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_125_fu_481_p2),27));

        sext_ln712_107_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_123_fu_469_p2),27));

        sext_ln712_108_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_130_fu_526_p2),27));

        sext_ln712_109_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_128_fu_515_p2),27));

        sext_ln712_110_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_131_fu_530_p2),27));

        sext_ln712_111_fu_553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_129_fu_521_p2),27));

        sext_ln712_112_fu_583_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_136_fu_573_p2),27));

        sext_ln712_113_fu_587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_134_fu_563_p2),27));

        sext_ln712_114_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_137_fu_578_p2),27));

        sext_ln712_115_fu_601_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_135_fu_568_p2),27));

        sext_ln712_116_fu_631_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_142_fu_622_p2),27));

        sext_ln712_117_fu_635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_140_fu_611_p2),27));

        sext_ln712_118_fu_645_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_143_fu_627_p2),27));

        sext_ln712_119_fu_649_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_141_fu_616_p2),27));

        sext_ln712_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln712_124_fu_475_p2),27));

        sext_ln717_25_fu_683_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_imag_V_0_fu_673_p4),27));

        sext_ln717_26_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_real_V_1_fu_687_p4),27));

        sext_ln717_27_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_imag_V_1_fu_701_p4),27));

        sext_ln717_28_fu_725_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_real_V_2_fu_715_p4),27));

        sext_ln717_29_fu_739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_imag_V_2_fu_729_p4),27));

        sext_ln717_30_fu_753_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_real_V_3_fu_743_p4),27));

        sext_ln717_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(bflyOutData_M_real_V_0_fu_659_p4),27));

    shl_ln1171_8_fu_303_p3 <= (tmp_93_fu_219_p4 & ap_const_lv16_0);
    shl_ln1171_9_fu_361_p3 <= (tmp_94_fu_229_p4 & ap_const_lv16_0);
    shl_ln1171_s_fu_279_p3 <= (tmp_92_fu_209_p4 & ap_const_lv16_0);
    shl_ln_fu_255_p3 <= (tmp_90_fu_181_p4 & ap_const_lv16_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((real_start = ap_const_logic_1) and (start_once_reg = ap_const_logic_0))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_102_fu_391_p4 <= iter_fu_385_p2(31 downto 2);
    tmp_3_fu_767_p16 <= ((((((((((((((trunc_ln717_s_fu_757_p4 & ap_const_lv5_0) & sext_ln717_30_fu_753_p1) & ap_const_lv5_0) & sext_ln717_29_fu_739_p1) & ap_const_lv5_0) & sext_ln717_28_fu_725_p1) & ap_const_lv5_0) & sext_ln717_27_fu_711_p1) & ap_const_lv5_0) & sext_ln717_26_fu_697_p1) & ap_const_lv5_0) & sext_ln717_25_fu_683_p1) & ap_const_lv5_0) & sext_ln717_fu_669_p1);
    tmp_90_fu_181_p4 <= fftOutData_local2_dout(88 downto 64);
    tmp_91_fu_191_p4 <= fftOutData_local2_dout(120 downto 96);
    tmp_92_fu_209_p4 <= fftOutData_local2_dout(152 downto 128);
    tmp_93_fu_219_p4 <= fftOutData_local2_dout(184 downto 160);
    tmp_94_fu_229_p4 <= fftOutData_local2_dout(216 downto 192);
    tmp_95_fu_239_p4 <= fftOutData_local2_dout(248 downto 224);
    tmp_nbreadreq_fu_100_p3 <= (0=>(fftOutData_local2_empty_n), others=>'-');
    trunc_ln717_fu_167_p1 <= fftOutData_local2_dout(25 - 1 downto 0);
    trunc_ln717_s_fu_757_p4 <= add_ln712_145_fu_653_p2(26 downto 1);
end behav;
